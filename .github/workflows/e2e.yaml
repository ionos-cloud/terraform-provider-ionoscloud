name: E2E Tests

on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'Pull request number'
        required: true
        type: string
      tag:
        description: 'Test tag'
        required: true
        type: string

jobs:
  run-e2e-tests:
    env:
      IONOS_USERNAME: ${{ secrets.IONOS_VDC_USER_GO_V6 }}
      IONOS_PASSWORD: ${{ secrets.IONOS_VDC_PASSWORD_GO_V6 }}
      IONOS_TOKEN: ${{ secrets.IONOS_VDC_TOKEN_GO_V6 }}
      IONOS_S3_ACCESS_KEY: ${{ secrets.IONOS_VDC_S3_ACCESS_KEY_GO_V6 }}
      IONOS_S3_SECRET_KEY: ${{ secrets.IONOS_VDC_S3_SECRET_KEY_GO_V6 }}
      TF_ACC: true
      TF_LOG: "DEBUG"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Checkout PR
        id: checkout-pr
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr checkout ${{ github.event.inputs.pr_number }}
          git submodule update --init --recursive
          OUTPUT=$(git log -1 --format='%H')
          echo "commit-sha=$OUTPUT" >> $GITHUB_OUTPUT

      - name: Create Pending Status Check
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            /repos/${{ github.repository }}/statuses/${{ steps.checkout-pr.outputs.commit-sha }} \
            -f state='pending' \
            -f target_url='https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}' \
            -f description='Running...' \
            -f context="test-${{ github.event.inputs.tag }}"

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Install dependencies
        run: go mod tidy

      - name: Run E2E tests with ${{ github.event.inputs.tag }}
        run: |
          go test ./... -v -timeout 6h -tags "${{ github.event.inputs.tag }}"

      - name: Create Successful Status Check
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          EXAMPLE_HASH: ${{ needs.get-example-list.outputs.example_hash }}
        run: |
          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            /repos/${{ github.repository }}/statuses/${{ steps.checkout-pr.outputs.commit-sha }} \
            -f state='success' \
            -f target_url='https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}' \
            -f description='Passed' \
            -f context="test-${{ github.event.inputs.tag }}"

      - name: Create Unsuccessful Status Check
        if: failure()
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          EXAMPLE_HASH: ${{ needs.get-example-list.outputs.example_hash }}
        run: |
          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            /repos/${{ github.repository }}/statuses/${{ steps.checkout-pr.outputs.commit-sha }} \
            -f state='failure' \
            -f target_url='https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}' \
            -f description='Failed' \
            -f context="test-${{ github.event.inputs.tag }}"