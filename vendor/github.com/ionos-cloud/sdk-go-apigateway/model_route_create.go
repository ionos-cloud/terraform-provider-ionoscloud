/*
 * IONOS Cloud - API Gateway
 *
 * API Gateway is an application that acts as a \"front door\" for backend services and APIs, handling client requests and routing them to the appropriate backend.
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ionoscloud

import (
	"encoding/json"
)

// RouteCreate struct for RouteCreate
type RouteCreate struct {
	// Metadata
	Metadata   *map[string]interface{} `json:"metadata,omitempty"`
	Properties *Route                  `json:"properties"`
}

// NewRouteCreate instantiates a new RouteCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRouteCreate(properties Route) *RouteCreate {
	this := RouteCreate{}

	this.Properties = &properties

	return &this
}

// NewRouteCreateWithDefaults instantiates a new RouteCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRouteCreateWithDefaults() *RouteCreate {
	this := RouteCreate{}
	return &this
}

// GetMetadata returns the Metadata field value
// If the value is explicit nil, the zero value for map[string]interface{} will be returned
func (o *RouteCreate) GetMetadata() *map[string]interface{} {
	if o == nil {
		return nil
	}

	return o.Metadata

}

// GetMetadataOk returns a tuple with the Metadata field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RouteCreate) GetMetadataOk() (*map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}

	return o.Metadata, true
}

// SetMetadata sets field value
func (o *RouteCreate) SetMetadata(v map[string]interface{}) {

	o.Metadata = &v

}

// HasMetadata returns a boolean if a field has been set.
func (o *RouteCreate) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// GetProperties returns the Properties field value
// If the value is explicit nil, the zero value for Route will be returned
func (o *RouteCreate) GetProperties() *Route {
	if o == nil {
		return nil
	}

	return o.Properties

}

// GetPropertiesOk returns a tuple with the Properties field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RouteCreate) GetPropertiesOk() (*Route, bool) {
	if o == nil {
		return nil, false
	}

	return o.Properties, true
}

// SetProperties sets field value
func (o *RouteCreate) SetProperties(v Route) {

	o.Properties = &v

}

// HasProperties returns a boolean if a field has been set.
func (o *RouteCreate) HasProperties() bool {
	if o != nil && o.Properties != nil {
		return true
	}

	return false
}

func (o RouteCreate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}

	if o.Properties != nil {
		toSerialize["properties"] = o.Properties
	}

	return json.Marshal(toSerialize)
}

type NullableRouteCreate struct {
	value *RouteCreate
	isSet bool
}

func (v NullableRouteCreate) Get() *RouteCreate {
	return v.value
}

func (v *NullableRouteCreate) Set(val *RouteCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableRouteCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableRouteCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRouteCreate(val *RouteCreate) *NullableRouteCreate {
	return &NullableRouteCreate{value: val, isSet: true}
}

func (v NullableRouteCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRouteCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
