/*
 * IONOS Cloud - DNS API
 *
 * Cloud DNS service helps IONOS Cloud customers to automate DNS Zone and Record management.
 *
 * API version: 1.16.0
 * Contact: support@cloud.ionos.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ionoscloud

import (
	"encoding/json"
)

// SecondaryZoneCreate struct for SecondaryZoneCreate
type SecondaryZoneCreate struct {
	Properties *SecondaryZone `json:"properties"`
}

// NewSecondaryZoneCreate instantiates a new SecondaryZoneCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecondaryZoneCreate(properties SecondaryZone) *SecondaryZoneCreate {
	this := SecondaryZoneCreate{}

	this.Properties = &properties

	return &this
}

// NewSecondaryZoneCreateWithDefaults instantiates a new SecondaryZoneCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecondaryZoneCreateWithDefaults() *SecondaryZoneCreate {
	this := SecondaryZoneCreate{}
	return &this
}

// GetProperties returns the Properties field value
// If the value is explicit nil, the zero value for SecondaryZone will be returned
func (o *SecondaryZoneCreate) GetProperties() *SecondaryZone {
	if o == nil {
		return nil
	}

	return o.Properties

}

// GetPropertiesOk returns a tuple with the Properties field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SecondaryZoneCreate) GetPropertiesOk() (*SecondaryZone, bool) {
	if o == nil {
		return nil, false
	}

	return o.Properties, true
}

// SetProperties sets field value
func (o *SecondaryZoneCreate) SetProperties(v SecondaryZone) {

	o.Properties = &v

}

// HasProperties returns a boolean if a field has been set.
func (o *SecondaryZoneCreate) HasProperties() bool {
	if o != nil && o.Properties != nil {
		return true
	}

	return false
}

func (o SecondaryZoneCreate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Properties != nil {
		toSerialize["properties"] = o.Properties
	}

	return json.Marshal(toSerialize)
}

type NullableSecondaryZoneCreate struct {
	value *SecondaryZoneCreate
	isSet bool
}

func (v NullableSecondaryZoneCreate) Get() *SecondaryZoneCreate {
	return v.value
}

func (v *NullableSecondaryZoneCreate) Set(val *SecondaryZoneCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableSecondaryZoneCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableSecondaryZoneCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecondaryZoneCreate(val *SecondaryZoneCreate) *NullableSecondaryZoneCreate {
	return &NullableSecondaryZoneCreate{value: val, isSet: true}
}

func (v NullableSecondaryZoneCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecondaryZoneCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
