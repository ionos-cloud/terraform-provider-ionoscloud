/*
 * IONOS Cloud - DNS API
 *
 * Cloud DNS service helps IONOS Cloud customers to automate DNS Zone and Record management.
 *
 * API version: 1.16.0
 * Contact: support@cloud.ionos.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ionoscloud

import (
	"encoding/json"
)

// CommonZoneRead struct for CommonZoneRead
type CommonZoneRead struct {
	// The zone ID (UUID).
	Id       *string                       `json:"id"`
	Type     *string                       `json:"type"`
	Href     *string                       `json:"href"`
	Metadata *MetadataWithStateNameservers `json:"metadata"`
}

// NewCommonZoneRead instantiates a new CommonZoneRead object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommonZoneRead(id string, type_ string, href string, metadata MetadataWithStateNameservers) *CommonZoneRead {
	this := CommonZoneRead{}

	this.Id = &id
	this.Type = &type_
	this.Href = &href
	this.Metadata = &metadata

	return &this
}

// NewCommonZoneReadWithDefaults instantiates a new CommonZoneRead object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommonZoneReadWithDefaults() *CommonZoneRead {
	this := CommonZoneRead{}
	return &this
}

// GetId returns the Id field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CommonZoneRead) GetId() *string {
	if o == nil {
		return nil
	}

	return o.Id

}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonZoneRead) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}

	return o.Id, true
}

// SetId sets field value
func (o *CommonZoneRead) SetId(v string) {

	o.Id = &v

}

// HasId returns a boolean if a field has been set.
func (o *CommonZoneRead) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// GetType returns the Type field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CommonZoneRead) GetType() *string {
	if o == nil {
		return nil
	}

	return o.Type

}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonZoneRead) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}

	return o.Type, true
}

// SetType sets field value
func (o *CommonZoneRead) SetType(v string) {

	o.Type = &v

}

// HasType returns a boolean if a field has been set.
func (o *CommonZoneRead) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// GetHref returns the Href field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CommonZoneRead) GetHref() *string {
	if o == nil {
		return nil
	}

	return o.Href

}

// GetHrefOk returns a tuple with the Href field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonZoneRead) GetHrefOk() (*string, bool) {
	if o == nil {
		return nil, false
	}

	return o.Href, true
}

// SetHref sets field value
func (o *CommonZoneRead) SetHref(v string) {

	o.Href = &v

}

// HasHref returns a boolean if a field has been set.
func (o *CommonZoneRead) HasHref() bool {
	if o != nil && o.Href != nil {
		return true
	}

	return false
}

// GetMetadata returns the Metadata field value
// If the value is explicit nil, the zero value for MetadataWithStateNameservers will be returned
func (o *CommonZoneRead) GetMetadata() *MetadataWithStateNameservers {
	if o == nil {
		return nil
	}

	return o.Metadata

}

// GetMetadataOk returns a tuple with the Metadata field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommonZoneRead) GetMetadataOk() (*MetadataWithStateNameservers, bool) {
	if o == nil {
		return nil, false
	}

	return o.Metadata, true
}

// SetMetadata sets field value
func (o *CommonZoneRead) SetMetadata(v MetadataWithStateNameservers) {

	o.Metadata = &v

}

// HasMetadata returns a boolean if a field has been set.
func (o *CommonZoneRead) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

func (o CommonZoneRead) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}

	if o.Type != nil {
		toSerialize["type"] = o.Type
	}

	if o.Href != nil {
		toSerialize["href"] = o.Href
	}

	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}

	return json.Marshal(toSerialize)
}

type NullableCommonZoneRead struct {
	value *CommonZoneRead
	isSet bool
}

func (v NullableCommonZoneRead) Get() *CommonZoneRead {
	return v.value
}

func (v *NullableCommonZoneRead) Set(val *CommonZoneRead) {
	v.value = val
	v.isSet = true
}

func (v NullableCommonZoneRead) IsSet() bool {
	return v.isSet
}

func (v *NullableCommonZoneRead) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommonZoneRead(val *CommonZoneRead) *NullableCommonZoneRead {
	return &NullableCommonZoneRead{value: val, isSet: true}
}

func (v NullableCommonZoneRead) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommonZoneRead) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
