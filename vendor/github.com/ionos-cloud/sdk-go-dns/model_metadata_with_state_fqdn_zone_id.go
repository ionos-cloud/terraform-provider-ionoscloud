/*
 * IONOS Cloud - DNS API
 *
 * DNS API Specification
 *
 * API version: 1.2.0
 * Contact: support@cloud.ionos.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ionoscloud

import (
	"encoding/json"
	"time"
)

// MetadataWithStateFqdnZoneId struct for MetadataWithStateFqdnZoneId
type MetadataWithStateFqdnZoneId struct {
	// The date of the last change formatted as yyyy-MM-dd'T'HH:mm:ss.SSS'Z'.
	LastModifiedDate *IonosTime `json:"lastModifiedDate,omitempty"`
	// The date of creation of the zone formatted as yyyy-MM-dd'T'HH:mm:ss.SSS'Z'.
	CreatedDate *IonosTime         `json:"createdDate,omitempty"`
	State       *ProvisioningState `json:"state"`
	// A fully qualified domain name. FQDN consists of two parts - the hostname and the domain name.
	Fqdn *string `json:"fqdn"`
	// The ID (UUID) of the DNS zone of which record belongs to.
	ZoneId *string `json:"zoneId"`
}

// NewMetadataWithStateFqdnZoneId instantiates a new MetadataWithStateFqdnZoneId object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetadataWithStateFqdnZoneId(state ProvisioningState, fqdn string, zoneId string) *MetadataWithStateFqdnZoneId {
	this := MetadataWithStateFqdnZoneId{}

	this.State = &state
	this.Fqdn = &fqdn
	this.ZoneId = &zoneId

	return &this
}

// NewMetadataWithStateFqdnZoneIdWithDefaults instantiates a new MetadataWithStateFqdnZoneId object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetadataWithStateFqdnZoneIdWithDefaults() *MetadataWithStateFqdnZoneId {
	this := MetadataWithStateFqdnZoneId{}
	return &this
}

// GetLastModifiedDate returns the LastModifiedDate field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *MetadataWithStateFqdnZoneId) GetLastModifiedDate() *time.Time {
	if o == nil {
		return nil
	}

	if o.LastModifiedDate == nil {
		return nil
	}
	return &o.LastModifiedDate.Time

}

// GetLastModifiedDateOk returns a tuple with the LastModifiedDate field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MetadataWithStateFqdnZoneId) GetLastModifiedDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}

	if o.LastModifiedDate == nil {
		return nil, false
	}
	return &o.LastModifiedDate.Time, true

}

// SetLastModifiedDate sets field value
func (o *MetadataWithStateFqdnZoneId) SetLastModifiedDate(v time.Time) {

	o.LastModifiedDate = &IonosTime{v}

}

// HasLastModifiedDate returns a boolean if a field has been set.
func (o *MetadataWithStateFqdnZoneId) HasLastModifiedDate() bool {
	if o != nil && o.LastModifiedDate != nil {
		return true
	}

	return false
}

// GetCreatedDate returns the CreatedDate field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *MetadataWithStateFqdnZoneId) GetCreatedDate() *time.Time {
	if o == nil {
		return nil
	}

	if o.CreatedDate == nil {
		return nil
	}
	return &o.CreatedDate.Time

}

// GetCreatedDateOk returns a tuple with the CreatedDate field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MetadataWithStateFqdnZoneId) GetCreatedDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}

	if o.CreatedDate == nil {
		return nil, false
	}
	return &o.CreatedDate.Time, true

}

// SetCreatedDate sets field value
func (o *MetadataWithStateFqdnZoneId) SetCreatedDate(v time.Time) {

	o.CreatedDate = &IonosTime{v}

}

// HasCreatedDate returns a boolean if a field has been set.
func (o *MetadataWithStateFqdnZoneId) HasCreatedDate() bool {
	if o != nil && o.CreatedDate != nil {
		return true
	}

	return false
}

// GetState returns the State field value
// If the value is explicit nil, the zero value for ProvisioningState will be returned
func (o *MetadataWithStateFqdnZoneId) GetState() *ProvisioningState {
	if o == nil {
		return nil
	}

	return o.State

}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MetadataWithStateFqdnZoneId) GetStateOk() (*ProvisioningState, bool) {
	if o == nil {
		return nil, false
	}

	return o.State, true
}

// SetState sets field value
func (o *MetadataWithStateFqdnZoneId) SetState(v ProvisioningState) {

	o.State = &v

}

// HasState returns a boolean if a field has been set.
func (o *MetadataWithStateFqdnZoneId) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// GetFqdn returns the Fqdn field value
// If the value is explicit nil, the zero value for string will be returned
func (o *MetadataWithStateFqdnZoneId) GetFqdn() *string {
	if o == nil {
		return nil
	}

	return o.Fqdn

}

// GetFqdnOk returns a tuple with the Fqdn field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MetadataWithStateFqdnZoneId) GetFqdnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}

	return o.Fqdn, true
}

// SetFqdn sets field value
func (o *MetadataWithStateFqdnZoneId) SetFqdn(v string) {

	o.Fqdn = &v

}

// HasFqdn returns a boolean if a field has been set.
func (o *MetadataWithStateFqdnZoneId) HasFqdn() bool {
	if o != nil && o.Fqdn != nil {
		return true
	}

	return false
}

// GetZoneId returns the ZoneId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *MetadataWithStateFqdnZoneId) GetZoneId() *string {
	if o == nil {
		return nil
	}

	return o.ZoneId

}

// GetZoneIdOk returns a tuple with the ZoneId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MetadataWithStateFqdnZoneId) GetZoneIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}

	return o.ZoneId, true
}

// SetZoneId sets field value
func (o *MetadataWithStateFqdnZoneId) SetZoneId(v string) {

	o.ZoneId = &v

}

// HasZoneId returns a boolean if a field has been set.
func (o *MetadataWithStateFqdnZoneId) HasZoneId() bool {
	if o != nil && o.ZoneId != nil {
		return true
	}

	return false
}

func (o MetadataWithStateFqdnZoneId) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LastModifiedDate != nil {
		toSerialize["lastModifiedDate"] = o.LastModifiedDate
	}

	if o.CreatedDate != nil {
		toSerialize["createdDate"] = o.CreatedDate
	}

	if o.State != nil {
		toSerialize["state"] = o.State
	}

	if o.Fqdn != nil {
		toSerialize["fqdn"] = o.Fqdn
	}

	if o.ZoneId != nil {
		toSerialize["zoneId"] = o.ZoneId
	}

	return json.Marshal(toSerialize)
}

type NullableMetadataWithStateFqdnZoneId struct {
	value *MetadataWithStateFqdnZoneId
	isSet bool
}

func (v NullableMetadataWithStateFqdnZoneId) Get() *MetadataWithStateFqdnZoneId {
	return v.value
}

func (v *NullableMetadataWithStateFqdnZoneId) Set(val *MetadataWithStateFqdnZoneId) {
	v.value = val
	v.isSet = true
}

func (v NullableMetadataWithStateFqdnZoneId) IsSet() bool {
	return v.isSet
}

func (v *NullableMetadataWithStateFqdnZoneId) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetadataWithStateFqdnZoneId(val *MetadataWithStateFqdnZoneId) *NullableMetadataWithStateFqdnZoneId {
	return &NullableMetadataWithStateFqdnZoneId{value: val, isSet: true}
}

func (v NullableMetadataWithStateFqdnZoneId) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetadataWithStateFqdnZoneId) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
