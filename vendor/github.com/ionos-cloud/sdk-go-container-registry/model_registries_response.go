/*
 * Container Registry service
 *
 * Container Registry service enables IONOS clients to manage docker and OCI compliant registries for use by their managed Kubernetes clusters. Use a Container Registry to ensure you have a privately accessed registry to efficiently support image pulls.
 *
 * API version: 1.0
 * Contact: support@cloud.ionos.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ionoscloud

import (
	"encoding/json"
)

// RegistriesResponse struct for RegistriesResponse
type RegistriesResponse struct {
	Links         *PaginationLinks    `json:"_links"`
	Href          *string             `json:"href,omitempty"`
	Id            *string             `json:"id,omitempty"`
	Items         *[]RegistryResponse `json:"items,omitempty"`
	Limit         *int32              `json:"limit"`
	NextPageToken *string             `json:"nextPageToken"`
	Type          *string             `json:"type,omitempty"`
}

// NewRegistriesResponse instantiates a new RegistriesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegistriesResponse(links PaginationLinks, limit int32, nextPageToken string) *RegistriesResponse {
	this := RegistriesResponse{}

	this.Links = &links
	this.Limit = &limit
	this.NextPageToken = &nextPageToken

	return &this
}

// NewRegistriesResponseWithDefaults instantiates a new RegistriesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegistriesResponseWithDefaults() *RegistriesResponse {
	this := RegistriesResponse{}
	return &this
}

// GetLinks returns the Links field value
// If the value is explicit nil, the zero value for PaginationLinks will be returned
func (o *RegistriesResponse) GetLinks() *PaginationLinks {
	if o == nil {
		return nil
	}

	return o.Links

}

// GetLinksOk returns a tuple with the Links field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RegistriesResponse) GetLinksOk() (*PaginationLinks, bool) {
	if o == nil {
		return nil, false
	}

	return o.Links, true
}

// SetLinks sets field value
func (o *RegistriesResponse) SetLinks(v PaginationLinks) {

	o.Links = &v

}

// HasLinks returns a boolean if a field has been set.
func (o *RegistriesResponse) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// GetHref returns the Href field value
// If the value is explicit nil, the zero value for string will be returned
func (o *RegistriesResponse) GetHref() *string {
	if o == nil {
		return nil
	}

	return o.Href

}

// GetHrefOk returns a tuple with the Href field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RegistriesResponse) GetHrefOk() (*string, bool) {
	if o == nil {
		return nil, false
	}

	return o.Href, true
}

// SetHref sets field value
func (o *RegistriesResponse) SetHref(v string) {

	o.Href = &v

}

// HasHref returns a boolean if a field has been set.
func (o *RegistriesResponse) HasHref() bool {
	if o != nil && o.Href != nil {
		return true
	}

	return false
}

// GetId returns the Id field value
// If the value is explicit nil, the zero value for string will be returned
func (o *RegistriesResponse) GetId() *string {
	if o == nil {
		return nil
	}

	return o.Id

}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RegistriesResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}

	return o.Id, true
}

// SetId sets field value
func (o *RegistriesResponse) SetId(v string) {

	o.Id = &v

}

// HasId returns a boolean if a field has been set.
func (o *RegistriesResponse) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// GetItems returns the Items field value
// If the value is explicit nil, the zero value for []RegistryResponse will be returned
func (o *RegistriesResponse) GetItems() *[]RegistryResponse {
	if o == nil {
		return nil
	}

	return o.Items

}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RegistriesResponse) GetItemsOk() (*[]RegistryResponse, bool) {
	if o == nil {
		return nil, false
	}

	return o.Items, true
}

// SetItems sets field value
func (o *RegistriesResponse) SetItems(v []RegistryResponse) {

	o.Items = &v

}

// HasItems returns a boolean if a field has been set.
func (o *RegistriesResponse) HasItems() bool {
	if o != nil && o.Items != nil {
		return true
	}

	return false
}

// GetLimit returns the Limit field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *RegistriesResponse) GetLimit() *int32 {
	if o == nil {
		return nil
	}

	return o.Limit

}

// GetLimitOk returns a tuple with the Limit field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RegistriesResponse) GetLimitOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}

	return o.Limit, true
}

// SetLimit sets field value
func (o *RegistriesResponse) SetLimit(v int32) {

	o.Limit = &v

}

// HasLimit returns a boolean if a field has been set.
func (o *RegistriesResponse) HasLimit() bool {
	if o != nil && o.Limit != nil {
		return true
	}

	return false
}

// GetNextPageToken returns the NextPageToken field value
// If the value is explicit nil, the zero value for string will be returned
func (o *RegistriesResponse) GetNextPageToken() *string {
	if o == nil {
		return nil
	}

	return o.NextPageToken

}

// GetNextPageTokenOk returns a tuple with the NextPageToken field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RegistriesResponse) GetNextPageTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}

	return o.NextPageToken, true
}

// SetNextPageToken sets field value
func (o *RegistriesResponse) SetNextPageToken(v string) {

	o.NextPageToken = &v

}

// HasNextPageToken returns a boolean if a field has been set.
func (o *RegistriesResponse) HasNextPageToken() bool {
	if o != nil && o.NextPageToken != nil {
		return true
	}

	return false
}

// GetType returns the Type field value
// If the value is explicit nil, the zero value for string will be returned
func (o *RegistriesResponse) GetType() *string {
	if o == nil {
		return nil
	}

	return o.Type

}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RegistriesResponse) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}

	return o.Type, true
}

// SetType sets field value
func (o *RegistriesResponse) SetType(v string) {

	o.Type = &v

}

// HasType returns a boolean if a field has been set.
func (o *RegistriesResponse) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

func (o RegistriesResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Links != nil {
		toSerialize["_links"] = o.Links
	}

	if o.Href != nil {
		toSerialize["href"] = o.Href
	}

	if o.Id != nil {
		toSerialize["id"] = o.Id
	}

	toSerialize["items"] = o.Items

	if o.Limit != nil {
		toSerialize["limit"] = o.Limit
	}

	if o.NextPageToken != nil {
		toSerialize["nextPageToken"] = o.NextPageToken
	}

	if o.Type != nil {
		toSerialize["type"] = o.Type
	}

	return json.Marshal(toSerialize)
}

type NullableRegistriesResponse struct {
	value *RegistriesResponse
	isSet bool
}

func (v NullableRegistriesResponse) Get() *RegistriesResponse {
	return v.value
}

func (v *NullableRegistriesResponse) Set(val *RegistriesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRegistriesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRegistriesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegistriesResponse(val *RegistriesResponse) *NullableRegistriesResponse {
	return &NullableRegistriesResponse{value: val, isSet: true}
}

func (v NullableRegistriesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegistriesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
