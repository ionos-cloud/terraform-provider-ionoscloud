/*
 * Container Registry service
 *
 * ## Overview Container Registry service enables IONOS clients to manage docker and OCI compliant registries for use by their managed Kubernetes clusters. Use a Container Registry to ensure you have a privately accessed registry to efficiently support image pulls. ## Changelog ### 1.1.0  - Added new endpoints for Repositories  - Added new endpoints for Artifacts  - Added new endpoints for Vulnerabilities  - Added registry vulnerabilityScanning feature
 *
 * API version: 1.1.0
 * Contact: support@cloud.ionos.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ionoscloud

import (
	"encoding/json"
	"time"
)

// RepositoryMetadata struct for RepositoryMetadata
type RepositoryMetadata struct {
	// The ISO 8601 creation timestamp.
	CreatedDate *IonosTime `json:"createdDate,omitempty"`
	// Unique name of the identity that created the resource.
	CreatedBy       *string `json:"createdBy,omitempty"`
	CreatedByUserId *string `json:"createdByUserId,omitempty"`
	// The ISO 8601 modified timestamp.
	LastModifiedDate *IonosTime `json:"lastModifiedDate,omitempty"`
	// Unique name of the identity that last modified the resource.
	LastModifiedBy       *string `json:"lastModifiedBy,omitempty"`
	LastModifiedByUserId *string `json:"lastModifiedByUserId,omitempty"`
	// Unique name of the resource.
	ResourceURN   *string    `json:"resourceURN,omitempty"`
	ArtifactCount *int64     `json:"artifactCount"`
	PullCount     *int64     `json:"pullCount"`
	PushCount     *int64     `json:"pushCount"`
	LastPulledAt  *IonosTime `json:"lastPulledAt,omitempty"`
	LastPushedAt  *IonosTime `json:"lastPushedAt,omitempty"`
	// The CVSS vulnerability severity rating
	LastSeverity *string `json:"lastSeverity,omitempty"`
}

// NewRepositoryMetadata instantiates a new RepositoryMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRepositoryMetadata(artifactCount int64, pullCount int64, pushCount int64) *RepositoryMetadata {
	this := RepositoryMetadata{}

	this.ArtifactCount = &artifactCount
	this.PullCount = &pullCount
	this.PushCount = &pushCount

	return &this
}

// NewRepositoryMetadataWithDefaults instantiates a new RepositoryMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRepositoryMetadataWithDefaults() *RepositoryMetadata {
	this := RepositoryMetadata{}
	return &this
}

// GetCreatedDate returns the CreatedDate field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *RepositoryMetadata) GetCreatedDate() *time.Time {
	if o == nil {
		return nil
	}

	if o.CreatedDate == nil {
		return nil
	}
	return &o.CreatedDate.Time

}

// GetCreatedDateOk returns a tuple with the CreatedDate field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RepositoryMetadata) GetCreatedDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}

	if o.CreatedDate == nil {
		return nil, false
	}
	return &o.CreatedDate.Time, true

}

// SetCreatedDate sets field value
func (o *RepositoryMetadata) SetCreatedDate(v time.Time) {

	o.CreatedDate = &IonosTime{v}

}

// HasCreatedDate returns a boolean if a field has been set.
func (o *RepositoryMetadata) HasCreatedDate() bool {
	if o != nil && o.CreatedDate != nil {
		return true
	}

	return false
}

// GetCreatedBy returns the CreatedBy field value
// If the value is explicit nil, the zero value for string will be returned
func (o *RepositoryMetadata) GetCreatedBy() *string {
	if o == nil {
		return nil
	}

	return o.CreatedBy

}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RepositoryMetadata) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}

	return o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *RepositoryMetadata) SetCreatedBy(v string) {

	o.CreatedBy = &v

}

// HasCreatedBy returns a boolean if a field has been set.
func (o *RepositoryMetadata) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// GetCreatedByUserId returns the CreatedByUserId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *RepositoryMetadata) GetCreatedByUserId() *string {
	if o == nil {
		return nil
	}

	return o.CreatedByUserId

}

// GetCreatedByUserIdOk returns a tuple with the CreatedByUserId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RepositoryMetadata) GetCreatedByUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}

	return o.CreatedByUserId, true
}

// SetCreatedByUserId sets field value
func (o *RepositoryMetadata) SetCreatedByUserId(v string) {

	o.CreatedByUserId = &v

}

// HasCreatedByUserId returns a boolean if a field has been set.
func (o *RepositoryMetadata) HasCreatedByUserId() bool {
	if o != nil && o.CreatedByUserId != nil {
		return true
	}

	return false
}

// GetLastModifiedDate returns the LastModifiedDate field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *RepositoryMetadata) GetLastModifiedDate() *time.Time {
	if o == nil {
		return nil
	}

	if o.LastModifiedDate == nil {
		return nil
	}
	return &o.LastModifiedDate.Time

}

// GetLastModifiedDateOk returns a tuple with the LastModifiedDate field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RepositoryMetadata) GetLastModifiedDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}

	if o.LastModifiedDate == nil {
		return nil, false
	}
	return &o.LastModifiedDate.Time, true

}

// SetLastModifiedDate sets field value
func (o *RepositoryMetadata) SetLastModifiedDate(v time.Time) {

	o.LastModifiedDate = &IonosTime{v}

}

// HasLastModifiedDate returns a boolean if a field has been set.
func (o *RepositoryMetadata) HasLastModifiedDate() bool {
	if o != nil && o.LastModifiedDate != nil {
		return true
	}

	return false
}

// GetLastModifiedBy returns the LastModifiedBy field value
// If the value is explicit nil, the zero value for string will be returned
func (o *RepositoryMetadata) GetLastModifiedBy() *string {
	if o == nil {
		return nil
	}

	return o.LastModifiedBy

}

// GetLastModifiedByOk returns a tuple with the LastModifiedBy field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RepositoryMetadata) GetLastModifiedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}

	return o.LastModifiedBy, true
}

// SetLastModifiedBy sets field value
func (o *RepositoryMetadata) SetLastModifiedBy(v string) {

	o.LastModifiedBy = &v

}

// HasLastModifiedBy returns a boolean if a field has been set.
func (o *RepositoryMetadata) HasLastModifiedBy() bool {
	if o != nil && o.LastModifiedBy != nil {
		return true
	}

	return false
}

// GetLastModifiedByUserId returns the LastModifiedByUserId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *RepositoryMetadata) GetLastModifiedByUserId() *string {
	if o == nil {
		return nil
	}

	return o.LastModifiedByUserId

}

// GetLastModifiedByUserIdOk returns a tuple with the LastModifiedByUserId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RepositoryMetadata) GetLastModifiedByUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}

	return o.LastModifiedByUserId, true
}

// SetLastModifiedByUserId sets field value
func (o *RepositoryMetadata) SetLastModifiedByUserId(v string) {

	o.LastModifiedByUserId = &v

}

// HasLastModifiedByUserId returns a boolean if a field has been set.
func (o *RepositoryMetadata) HasLastModifiedByUserId() bool {
	if o != nil && o.LastModifiedByUserId != nil {
		return true
	}

	return false
}

// GetResourceURN returns the ResourceURN field value
// If the value is explicit nil, the zero value for string will be returned
func (o *RepositoryMetadata) GetResourceURN() *string {
	if o == nil {
		return nil
	}

	return o.ResourceURN

}

// GetResourceURNOk returns a tuple with the ResourceURN field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RepositoryMetadata) GetResourceURNOk() (*string, bool) {
	if o == nil {
		return nil, false
	}

	return o.ResourceURN, true
}

// SetResourceURN sets field value
func (o *RepositoryMetadata) SetResourceURN(v string) {

	o.ResourceURN = &v

}

// HasResourceURN returns a boolean if a field has been set.
func (o *RepositoryMetadata) HasResourceURN() bool {
	if o != nil && o.ResourceURN != nil {
		return true
	}

	return false
}

// GetArtifactCount returns the ArtifactCount field value
// If the value is explicit nil, the zero value for int64 will be returned
func (o *RepositoryMetadata) GetArtifactCount() *int64 {
	if o == nil {
		return nil
	}

	return o.ArtifactCount

}

// GetArtifactCountOk returns a tuple with the ArtifactCount field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RepositoryMetadata) GetArtifactCountOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}

	return o.ArtifactCount, true
}

// SetArtifactCount sets field value
func (o *RepositoryMetadata) SetArtifactCount(v int64) {

	o.ArtifactCount = &v

}

// HasArtifactCount returns a boolean if a field has been set.
func (o *RepositoryMetadata) HasArtifactCount() bool {
	if o != nil && o.ArtifactCount != nil {
		return true
	}

	return false
}

// GetPullCount returns the PullCount field value
// If the value is explicit nil, the zero value for int64 will be returned
func (o *RepositoryMetadata) GetPullCount() *int64 {
	if o == nil {
		return nil
	}

	return o.PullCount

}

// GetPullCountOk returns a tuple with the PullCount field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RepositoryMetadata) GetPullCountOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}

	return o.PullCount, true
}

// SetPullCount sets field value
func (o *RepositoryMetadata) SetPullCount(v int64) {

	o.PullCount = &v

}

// HasPullCount returns a boolean if a field has been set.
func (o *RepositoryMetadata) HasPullCount() bool {
	if o != nil && o.PullCount != nil {
		return true
	}

	return false
}

// GetPushCount returns the PushCount field value
// If the value is explicit nil, the zero value for int64 will be returned
func (o *RepositoryMetadata) GetPushCount() *int64 {
	if o == nil {
		return nil
	}

	return o.PushCount

}

// GetPushCountOk returns a tuple with the PushCount field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RepositoryMetadata) GetPushCountOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}

	return o.PushCount, true
}

// SetPushCount sets field value
func (o *RepositoryMetadata) SetPushCount(v int64) {

	o.PushCount = &v

}

// HasPushCount returns a boolean if a field has been set.
func (o *RepositoryMetadata) HasPushCount() bool {
	if o != nil && o.PushCount != nil {
		return true
	}

	return false
}

// GetLastPulledAt returns the LastPulledAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *RepositoryMetadata) GetLastPulledAt() *time.Time {
	if o == nil {
		return nil
	}

	if o.LastPulledAt == nil {
		return nil
	}
	return &o.LastPulledAt.Time

}

// GetLastPulledAtOk returns a tuple with the LastPulledAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RepositoryMetadata) GetLastPulledAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}

	if o.LastPulledAt == nil {
		return nil, false
	}
	return &o.LastPulledAt.Time, true

}

// SetLastPulledAt sets field value
func (o *RepositoryMetadata) SetLastPulledAt(v time.Time) {

	o.LastPulledAt = &IonosTime{v}

}

// HasLastPulledAt returns a boolean if a field has been set.
func (o *RepositoryMetadata) HasLastPulledAt() bool {
	if o != nil && o.LastPulledAt != nil {
		return true
	}

	return false
}

// GetLastPushedAt returns the LastPushedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *RepositoryMetadata) GetLastPushedAt() *time.Time {
	if o == nil {
		return nil
	}

	if o.LastPushedAt == nil {
		return nil
	}
	return &o.LastPushedAt.Time

}

// GetLastPushedAtOk returns a tuple with the LastPushedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RepositoryMetadata) GetLastPushedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}

	if o.LastPushedAt == nil {
		return nil, false
	}
	return &o.LastPushedAt.Time, true

}

// SetLastPushedAt sets field value
func (o *RepositoryMetadata) SetLastPushedAt(v time.Time) {

	o.LastPushedAt = &IonosTime{v}

}

// HasLastPushedAt returns a boolean if a field has been set.
func (o *RepositoryMetadata) HasLastPushedAt() bool {
	if o != nil && o.LastPushedAt != nil {
		return true
	}

	return false
}

// GetLastSeverity returns the LastSeverity field value
// If the value is explicit nil, the zero value for string will be returned
func (o *RepositoryMetadata) GetLastSeverity() *string {
	if o == nil {
		return nil
	}

	return o.LastSeverity

}

// GetLastSeverityOk returns a tuple with the LastSeverity field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RepositoryMetadata) GetLastSeverityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}

	return o.LastSeverity, true
}

// SetLastSeverity sets field value
func (o *RepositoryMetadata) SetLastSeverity(v string) {

	o.LastSeverity = &v

}

// HasLastSeverity returns a boolean if a field has been set.
func (o *RepositoryMetadata) HasLastSeverity() bool {
	if o != nil && o.LastSeverity != nil {
		return true
	}

	return false
}

func (o RepositoryMetadata) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreatedDate != nil {
		toSerialize["createdDate"] = o.CreatedDate
	}

	if o.CreatedBy != nil {
		toSerialize["createdBy"] = o.CreatedBy
	}

	if o.CreatedByUserId != nil {
		toSerialize["createdByUserId"] = o.CreatedByUserId
	}

	if o.LastModifiedDate != nil {
		toSerialize["lastModifiedDate"] = o.LastModifiedDate
	}

	if o.LastModifiedBy != nil {
		toSerialize["lastModifiedBy"] = o.LastModifiedBy
	}

	if o.LastModifiedByUserId != nil {
		toSerialize["lastModifiedByUserId"] = o.LastModifiedByUserId
	}

	if o.ResourceURN != nil {
		toSerialize["resourceURN"] = o.ResourceURN
	}

	if o.ArtifactCount != nil {
		toSerialize["artifactCount"] = o.ArtifactCount
	}

	if o.PullCount != nil {
		toSerialize["pullCount"] = o.PullCount
	}

	if o.PushCount != nil {
		toSerialize["pushCount"] = o.PushCount
	}

	if o.LastPulledAt != nil {
		toSerialize["lastPulledAt"] = o.LastPulledAt
	}

	if o.LastPushedAt != nil {
		toSerialize["lastPushedAt"] = o.LastPushedAt
	}

	if o.LastSeverity != nil {
		toSerialize["lastSeverity"] = o.LastSeverity
	}

	return json.Marshal(toSerialize)
}

type NullableRepositoryMetadata struct {
	value *RepositoryMetadata
	isSet bool
}

func (v NullableRepositoryMetadata) Get() *RepositoryMetadata {
	return v.value
}

func (v *NullableRepositoryMetadata) Set(val *RepositoryMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableRepositoryMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableRepositoryMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRepositoryMetadata(val *RepositoryMetadata) *NullableRepositoryMetadata {
	return &NullableRepositoryMetadata{value: val, isSet: true}
}

func (v NullableRepositoryMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRepositoryMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
