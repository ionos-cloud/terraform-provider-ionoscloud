/*
 * Container Registry service
 *
 * ## Overview Container Registry service enables IONOS clients to manage docker and OCI compliant registries for use by their managed Kubernetes clusters. Use a Container Registry to ensure you have a privately accessed registry to efficiently support image pulls. ## Changelog ### 1.1.0  - Added new endpoints for Repositories  - Added new endpoints for Artifacts  - Added new endpoints for Vulnerabilities  - Added registry vulnerabilityScanning feature
 *
 * API version: 1.1.0
 * Contact: support@cloud.ionos.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ionoscloud

import (
	"encoding/json"
)

// FeatureVulnerabilityScanning Vulnerability scanning for images.  __Note__: this is a paid add-on
type FeatureVulnerabilityScanning struct {
	Enabled    *bool                   `json:"enabled"`
	Properties *map[string]interface{} `json:"properties,omitempty"`
}

// NewFeatureVulnerabilityScanning instantiates a new FeatureVulnerabilityScanning object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFeatureVulnerabilityScanning(enabled bool) *FeatureVulnerabilityScanning {
	this := FeatureVulnerabilityScanning{}

	this.Enabled = &enabled

	return &this
}

// NewFeatureVulnerabilityScanningWithDefaults instantiates a new FeatureVulnerabilityScanning object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFeatureVulnerabilityScanningWithDefaults() *FeatureVulnerabilityScanning {
	this := FeatureVulnerabilityScanning{}
	var enabled bool = true
	this.Enabled = &enabled
	return &this
}

// GetEnabled returns the Enabled field value
// If the value is explicit nil, the zero value for bool will be returned
func (o *FeatureVulnerabilityScanning) GetEnabled() *bool {
	if o == nil {
		return nil
	}

	return o.Enabled

}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FeatureVulnerabilityScanning) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}

	return o.Enabled, true
}

// SetEnabled sets field value
func (o *FeatureVulnerabilityScanning) SetEnabled(v bool) {

	o.Enabled = &v

}

// HasEnabled returns a boolean if a field has been set.
func (o *FeatureVulnerabilityScanning) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// GetProperties returns the Properties field value
// If the value is explicit nil, the zero value for map[string]interface{} will be returned
func (o *FeatureVulnerabilityScanning) GetProperties() *map[string]interface{} {
	if o == nil {
		return nil
	}

	return o.Properties

}

// GetPropertiesOk returns a tuple with the Properties field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FeatureVulnerabilityScanning) GetPropertiesOk() (*map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}

	return o.Properties, true
}

// SetProperties sets field value
func (o *FeatureVulnerabilityScanning) SetProperties(v map[string]interface{}) {

	o.Properties = &v

}

// HasProperties returns a boolean if a field has been set.
func (o *FeatureVulnerabilityScanning) HasProperties() bool {
	if o != nil && o.Properties != nil {
		return true
	}

	return false
}

func (o FeatureVulnerabilityScanning) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}

	if o.Properties != nil {
		toSerialize["properties"] = o.Properties
	}

	return json.Marshal(toSerialize)
}

type NullableFeatureVulnerabilityScanning struct {
	value *FeatureVulnerabilityScanning
	isSet bool
}

func (v NullableFeatureVulnerabilityScanning) Get() *FeatureVulnerabilityScanning {
	return v.value
}

func (v *NullableFeatureVulnerabilityScanning) Set(val *FeatureVulnerabilityScanning) {
	v.value = val
	v.isSet = true
}

func (v NullableFeatureVulnerabilityScanning) IsSet() bool {
	return v.isSet
}

func (v *NullableFeatureVulnerabilityScanning) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFeatureVulnerabilityScanning(val *FeatureVulnerabilityScanning) *NullableFeatureVulnerabilityScanning {
	return &NullableFeatureVulnerabilityScanning{value: val, isSet: true}
}

func (v NullableFeatureVulnerabilityScanning) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFeatureVulnerabilityScanning) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
