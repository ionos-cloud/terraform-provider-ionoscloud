/*
 * IONOS Logging REST API
 *
 * The logging service offers a centralized platform to collect and store logs from various systems and applications. It includes tools to search, filter, visualize, and create alerts based on your log data.  This API provides programmatic control over logging pipelines, enabling you to create new pipelines or modify existing ones. It mirrors the functionality of the DCD visual tool, ensuring a consistent experience regardless of your chosen interface.
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ionoscloud

import (
	"encoding/json"
	"time"
)

// CentralLoggingResponseMetadata struct for CentralLoggingResponseMetadata
type CentralLoggingResponseMetadata struct {
	// The ISO 8601 modified timestamp.
	LastModifiedDate       *IonosTime `json:"lastModifiedDate,omitempty"`
	LastModifiedBy         *string    `json:"lastModifiedBy,omitempty"`
	LastModifiedByUserId   *string    `json:"lastModifiedByUserId,omitempty"`
	LastModifiedByUserUuid *string    `json:"lastModifiedByUserUuid,omitempty"`
	GrafanaEndpoint        *string    `json:"grafanaEndpoint,omitempty"`
}

// NewCentralLoggingResponseMetadata instantiates a new CentralLoggingResponseMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCentralLoggingResponseMetadata() *CentralLoggingResponseMetadata {
	this := CentralLoggingResponseMetadata{}

	return &this
}

// NewCentralLoggingResponseMetadataWithDefaults instantiates a new CentralLoggingResponseMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCentralLoggingResponseMetadataWithDefaults() *CentralLoggingResponseMetadata {
	this := CentralLoggingResponseMetadata{}
	return &this
}

// GetLastModifiedDate returns the LastModifiedDate field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *CentralLoggingResponseMetadata) GetLastModifiedDate() *time.Time {
	if o == nil {
		return nil
	}

	if o.LastModifiedDate == nil {
		return nil
	}
	return &o.LastModifiedDate.Time

}

// GetLastModifiedDateOk returns a tuple with the LastModifiedDate field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CentralLoggingResponseMetadata) GetLastModifiedDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}

	if o.LastModifiedDate == nil {
		return nil, false
	}
	return &o.LastModifiedDate.Time, true

}

// SetLastModifiedDate sets field value
func (o *CentralLoggingResponseMetadata) SetLastModifiedDate(v time.Time) {

	o.LastModifiedDate = &IonosTime{v}

}

// HasLastModifiedDate returns a boolean if a field has been set.
func (o *CentralLoggingResponseMetadata) HasLastModifiedDate() bool {
	if o != nil && o.LastModifiedDate != nil {
		return true
	}

	return false
}

// GetLastModifiedBy returns the LastModifiedBy field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CentralLoggingResponseMetadata) GetLastModifiedBy() *string {
	if o == nil {
		return nil
	}

	return o.LastModifiedBy

}

// GetLastModifiedByOk returns a tuple with the LastModifiedBy field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CentralLoggingResponseMetadata) GetLastModifiedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}

	return o.LastModifiedBy, true
}

// SetLastModifiedBy sets field value
func (o *CentralLoggingResponseMetadata) SetLastModifiedBy(v string) {

	o.LastModifiedBy = &v

}

// HasLastModifiedBy returns a boolean if a field has been set.
func (o *CentralLoggingResponseMetadata) HasLastModifiedBy() bool {
	if o != nil && o.LastModifiedBy != nil {
		return true
	}

	return false
}

// GetLastModifiedByUserId returns the LastModifiedByUserId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CentralLoggingResponseMetadata) GetLastModifiedByUserId() *string {
	if o == nil {
		return nil
	}

	return o.LastModifiedByUserId

}

// GetLastModifiedByUserIdOk returns a tuple with the LastModifiedByUserId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CentralLoggingResponseMetadata) GetLastModifiedByUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}

	return o.LastModifiedByUserId, true
}

// SetLastModifiedByUserId sets field value
func (o *CentralLoggingResponseMetadata) SetLastModifiedByUserId(v string) {

	o.LastModifiedByUserId = &v

}

// HasLastModifiedByUserId returns a boolean if a field has been set.
func (o *CentralLoggingResponseMetadata) HasLastModifiedByUserId() bool {
	if o != nil && o.LastModifiedByUserId != nil {
		return true
	}

	return false
}

// GetLastModifiedByUserUuid returns the LastModifiedByUserUuid field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CentralLoggingResponseMetadata) GetLastModifiedByUserUuid() *string {
	if o == nil {
		return nil
	}

	return o.LastModifiedByUserUuid

}

// GetLastModifiedByUserUuidOk returns a tuple with the LastModifiedByUserUuid field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CentralLoggingResponseMetadata) GetLastModifiedByUserUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}

	return o.LastModifiedByUserUuid, true
}

// SetLastModifiedByUserUuid sets field value
func (o *CentralLoggingResponseMetadata) SetLastModifiedByUserUuid(v string) {

	o.LastModifiedByUserUuid = &v

}

// HasLastModifiedByUserUuid returns a boolean if a field has been set.
func (o *CentralLoggingResponseMetadata) HasLastModifiedByUserUuid() bool {
	if o != nil && o.LastModifiedByUserUuid != nil {
		return true
	}

	return false
}

// GetGrafanaEndpoint returns the GrafanaEndpoint field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CentralLoggingResponseMetadata) GetGrafanaEndpoint() *string {
	if o == nil {
		return nil
	}

	return o.GrafanaEndpoint

}

// GetGrafanaEndpointOk returns a tuple with the GrafanaEndpoint field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CentralLoggingResponseMetadata) GetGrafanaEndpointOk() (*string, bool) {
	if o == nil {
		return nil, false
	}

	return o.GrafanaEndpoint, true
}

// SetGrafanaEndpoint sets field value
func (o *CentralLoggingResponseMetadata) SetGrafanaEndpoint(v string) {

	o.GrafanaEndpoint = &v

}

// HasGrafanaEndpoint returns a boolean if a field has been set.
func (o *CentralLoggingResponseMetadata) HasGrafanaEndpoint() bool {
	if o != nil && o.GrafanaEndpoint != nil {
		return true
	}

	return false
}

func (o CentralLoggingResponseMetadata) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LastModifiedDate != nil {
		toSerialize["lastModifiedDate"] = o.LastModifiedDate
	}

	if o.LastModifiedBy != nil {
		toSerialize["lastModifiedBy"] = o.LastModifiedBy
	}

	if o.LastModifiedByUserId != nil {
		toSerialize["lastModifiedByUserId"] = o.LastModifiedByUserId
	}

	if o.LastModifiedByUserUuid != nil {
		toSerialize["lastModifiedByUserUuid"] = o.LastModifiedByUserUuid
	}

	if o.GrafanaEndpoint != nil {
		toSerialize["grafanaEndpoint"] = o.GrafanaEndpoint
	}

	return json.Marshal(toSerialize)
}

type NullableCentralLoggingResponseMetadata struct {
	value *CentralLoggingResponseMetadata
	isSet bool
}

func (v NullableCentralLoggingResponseMetadata) Get() *CentralLoggingResponseMetadata {
	return v.value
}

func (v *NullableCentralLoggingResponseMetadata) Set(val *CentralLoggingResponseMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableCentralLoggingResponseMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableCentralLoggingResponseMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCentralLoggingResponseMetadata(val *CentralLoggingResponseMetadata) *NullableCentralLoggingResponseMetadata {
	return &NullableCentralLoggingResponseMetadata{value: val, isSet: true}
}

func (v NullableCentralLoggingResponseMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCentralLoggingResponseMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
