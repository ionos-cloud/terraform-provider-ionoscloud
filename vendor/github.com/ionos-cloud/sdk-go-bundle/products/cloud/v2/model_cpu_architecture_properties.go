/*
 * CLOUD API
 *
 *  IONOS Enterprise-grade Infrastructure as a Service (IaaS) solutions can be managed through the Cloud API, in addition or as an alternative to the \"Data Center Designer\" (DCD) browser-based tool.    Both methods employ consistent concepts and features, deliver similar power and flexibility, and can be used to perform a multitude of management tasks, including adding servers, volumes, configuring networks, and so on.
 *
 * API version: 6.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ionoscloud

import (
	"encoding/json"
)

// checks if the CpuArchitectureProperties type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CpuArchitectureProperties{}

// CpuArchitectureProperties struct for CpuArchitectureProperties
type CpuArchitectureProperties struct {
	// A valid CPU family name.
	CpuFamily *string `json:"cpuFamily,omitempty"`
	// The maximum number of cores available.
	MaxCores *int32 `json:"maxCores,omitempty"`
	// The maximum RAM size in MB.
	MaxRam *int32 `json:"maxRam,omitempty"`
	// A valid CPU vendor name.
	Vendor *string `json:"vendor,omitempty"`
}

// NewCpuArchitectureProperties instantiates a new CpuArchitectureProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCpuArchitectureProperties() *CpuArchitectureProperties {
	this := CpuArchitectureProperties{}

	return &this
}

// NewCpuArchitecturePropertiesWithDefaults instantiates a new CpuArchitectureProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCpuArchitecturePropertiesWithDefaults() *CpuArchitectureProperties {
	this := CpuArchitectureProperties{}
	return &this
}

// GetCpuFamily returns the CpuFamily field value if set, zero value otherwise.
func (o *CpuArchitectureProperties) GetCpuFamily() string {
	if o == nil || IsNil(o.CpuFamily) {
		var ret string
		return ret
	}
	return *o.CpuFamily
}

// GetCpuFamilyOk returns a tuple with the CpuFamily field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CpuArchitectureProperties) GetCpuFamilyOk() (*string, bool) {
	if o == nil || IsNil(o.CpuFamily) {
		return nil, false
	}
	return o.CpuFamily, true
}

// HasCpuFamily returns a boolean if a field has been set.
func (o *CpuArchitectureProperties) HasCpuFamily() bool {
	if o != nil && !IsNil(o.CpuFamily) {
		return true
	}

	return false
}

// SetCpuFamily gets a reference to the given string and assigns it to the CpuFamily field.
func (o *CpuArchitectureProperties) SetCpuFamily(v string) {
	o.CpuFamily = &v
}

// GetMaxCores returns the MaxCores field value if set, zero value otherwise.
func (o *CpuArchitectureProperties) GetMaxCores() int32 {
	if o == nil || IsNil(o.MaxCores) {
		var ret int32
		return ret
	}
	return *o.MaxCores
}

// GetMaxCoresOk returns a tuple with the MaxCores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CpuArchitectureProperties) GetMaxCoresOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxCores) {
		return nil, false
	}
	return o.MaxCores, true
}

// HasMaxCores returns a boolean if a field has been set.
func (o *CpuArchitectureProperties) HasMaxCores() bool {
	if o != nil && !IsNil(o.MaxCores) {
		return true
	}

	return false
}

// SetMaxCores gets a reference to the given int32 and assigns it to the MaxCores field.
func (o *CpuArchitectureProperties) SetMaxCores(v int32) {
	o.MaxCores = &v
}

// GetMaxRam returns the MaxRam field value if set, zero value otherwise.
func (o *CpuArchitectureProperties) GetMaxRam() int32 {
	if o == nil || IsNil(o.MaxRam) {
		var ret int32
		return ret
	}
	return *o.MaxRam
}

// GetMaxRamOk returns a tuple with the MaxRam field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CpuArchitectureProperties) GetMaxRamOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxRam) {
		return nil, false
	}
	return o.MaxRam, true
}

// HasMaxRam returns a boolean if a field has been set.
func (o *CpuArchitectureProperties) HasMaxRam() bool {
	if o != nil && !IsNil(o.MaxRam) {
		return true
	}

	return false
}

// SetMaxRam gets a reference to the given int32 and assigns it to the MaxRam field.
func (o *CpuArchitectureProperties) SetMaxRam(v int32) {
	o.MaxRam = &v
}

// GetVendor returns the Vendor field value if set, zero value otherwise.
func (o *CpuArchitectureProperties) GetVendor() string {
	if o == nil || IsNil(o.Vendor) {
		var ret string
		return ret
	}
	return *o.Vendor
}

// GetVendorOk returns a tuple with the Vendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CpuArchitectureProperties) GetVendorOk() (*string, bool) {
	if o == nil || IsNil(o.Vendor) {
		return nil, false
	}
	return o.Vendor, true
}

// HasVendor returns a boolean if a field has been set.
func (o *CpuArchitectureProperties) HasVendor() bool {
	if o != nil && !IsNil(o.Vendor) {
		return true
	}

	return false
}

// SetVendor gets a reference to the given string and assigns it to the Vendor field.
func (o *CpuArchitectureProperties) SetVendor(v string) {
	o.Vendor = &v
}

func (o CpuArchitectureProperties) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CpuArchitectureProperties) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CpuFamily) {
		toSerialize["cpuFamily"] = o.CpuFamily
	}
	if !IsNil(o.MaxCores) {
		toSerialize["maxCores"] = o.MaxCores
	}
	if !IsNil(o.MaxRam) {
		toSerialize["maxRam"] = o.MaxRam
	}
	if !IsNil(o.Vendor) {
		toSerialize["vendor"] = o.Vendor
	}
	return toSerialize, nil
}

type NullableCpuArchitectureProperties struct {
	value *CpuArchitectureProperties
	isSet bool
}

func (v NullableCpuArchitectureProperties) Get() *CpuArchitectureProperties {
	return v.value
}

func (v *NullableCpuArchitectureProperties) Set(val *CpuArchitectureProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableCpuArchitectureProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableCpuArchitectureProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCpuArchitectureProperties(val *CpuArchitectureProperties) *NullableCpuArchitectureProperties {
	return &NullableCpuArchitectureProperties{value: val, isSet: true}
}

func (v NullableCpuArchitectureProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCpuArchitectureProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
