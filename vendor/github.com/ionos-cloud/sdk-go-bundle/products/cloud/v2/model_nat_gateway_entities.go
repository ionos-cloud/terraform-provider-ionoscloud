/*
 * CLOUD API
 *
 *  IONOS Enterprise-grade Infrastructure as a Service (IaaS) solutions can be managed through the Cloud API, in addition or as an alternative to the \"Data Center Designer\" (DCD) browser-based tool.    Both methods employ consistent concepts and features, deliver similar power and flexibility, and can be used to perform a multitude of management tasks, including adding servers, volumes, configuring networks, and so on.
 *
 * API version: 6.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ionoscloud

import (
	"encoding/json"
)

// checks if the NatGatewayEntities type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NatGatewayEntities{}

// NatGatewayEntities struct for NatGatewayEntities
type NatGatewayEntities struct {
	Rules    *NatGatewayRules `json:"rules,omitempty"`
	Flowlogs *FlowLogs        `json:"flowlogs,omitempty"`
}

// NewNatGatewayEntities instantiates a new NatGatewayEntities object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNatGatewayEntities() *NatGatewayEntities {
	this := NatGatewayEntities{}

	return &this
}

// NewNatGatewayEntitiesWithDefaults instantiates a new NatGatewayEntities object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNatGatewayEntitiesWithDefaults() *NatGatewayEntities {
	this := NatGatewayEntities{}
	return &this
}

// GetRules returns the Rules field value if set, zero value otherwise.
func (o *NatGatewayEntities) GetRules() NatGatewayRules {
	if o == nil || IsNil(o.Rules) {
		var ret NatGatewayRules
		return ret
	}
	return *o.Rules
}

// GetRulesOk returns a tuple with the Rules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NatGatewayEntities) GetRulesOk() (*NatGatewayRules, bool) {
	if o == nil || IsNil(o.Rules) {
		return nil, false
	}
	return o.Rules, true
}

// HasRules returns a boolean if a field has been set.
func (o *NatGatewayEntities) HasRules() bool {
	if o != nil && !IsNil(o.Rules) {
		return true
	}

	return false
}

// SetRules gets a reference to the given NatGatewayRules and assigns it to the Rules field.
func (o *NatGatewayEntities) SetRules(v NatGatewayRules) {
	o.Rules = &v
}

// GetFlowlogs returns the Flowlogs field value if set, zero value otherwise.
func (o *NatGatewayEntities) GetFlowlogs() FlowLogs {
	if o == nil || IsNil(o.Flowlogs) {
		var ret FlowLogs
		return ret
	}
	return *o.Flowlogs
}

// GetFlowlogsOk returns a tuple with the Flowlogs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NatGatewayEntities) GetFlowlogsOk() (*FlowLogs, bool) {
	if o == nil || IsNil(o.Flowlogs) {
		return nil, false
	}
	return o.Flowlogs, true
}

// HasFlowlogs returns a boolean if a field has been set.
func (o *NatGatewayEntities) HasFlowlogs() bool {
	if o != nil && !IsNil(o.Flowlogs) {
		return true
	}

	return false
}

// SetFlowlogs gets a reference to the given FlowLogs and assigns it to the Flowlogs field.
func (o *NatGatewayEntities) SetFlowlogs(v FlowLogs) {
	o.Flowlogs = &v
}

func (o NatGatewayEntities) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NatGatewayEntities) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Rules) {
		toSerialize["rules"] = o.Rules
	}
	if !IsNil(o.Flowlogs) {
		toSerialize["flowlogs"] = o.Flowlogs
	}
	return toSerialize, nil
}

type NullableNatGatewayEntities struct {
	value *NatGatewayEntities
	isSet bool
}

func (v NullableNatGatewayEntities) Get() *NatGatewayEntities {
	return v.value
}

func (v *NullableNatGatewayEntities) Set(val *NatGatewayEntities) {
	v.value = val
	v.isSet = true
}

func (v NullableNatGatewayEntities) IsSet() bool {
	return v.isSet
}

func (v *NullableNatGatewayEntities) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNatGatewayEntities(val *NatGatewayEntities) *NullableNatGatewayEntities {
	return &NullableNatGatewayEntities{value: val, isSet: true}
}

func (v NullableNatGatewayEntities) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNatGatewayEntities) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
