/*
 * CLOUD API
 *
 *  IONOS Enterprise-grade Infrastructure as a Service (IaaS) solutions can be managed through the Cloud API, in addition or as an alternative to the \"Data Center Designer\" (DCD) browser-based tool.    Both methods employ consistent concepts and features, deliver similar power and flexibility, and can be used to perform a multitude of management tasks, including adding servers, volumes, configuring networks, and so on.
 *
 * API version: 6.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ionoscloud

import (
	"encoding/json"
)

// checks if the DatacenterEntities type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DatacenterEntities{}

// DatacenterEntities struct for DatacenterEntities
type DatacenterEntities struct {
	Servers              *Servers              `json:"servers,omitempty"`
	Volumes              *Volumes              `json:"volumes,omitempty"`
	Loadbalancers        *Loadbalancers        `json:"loadbalancers,omitempty"`
	Lans                 *Lans                 `json:"lans,omitempty"`
	Networkloadbalancers *NetworkLoadBalancers `json:"networkloadbalancers,omitempty"`
	Natgateways          *NatGateways          `json:"natgateways,omitempty"`
	Securitygroups       *SecurityGroups       `json:"securitygroups,omitempty"`
}

// NewDatacenterEntities instantiates a new DatacenterEntities object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDatacenterEntities() *DatacenterEntities {
	this := DatacenterEntities{}

	return &this
}

// NewDatacenterEntitiesWithDefaults instantiates a new DatacenterEntities object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDatacenterEntitiesWithDefaults() *DatacenterEntities {
	this := DatacenterEntities{}
	return &this
}

// GetServers returns the Servers field value if set, zero value otherwise.
func (o *DatacenterEntities) GetServers() Servers {
	if o == nil || IsNil(o.Servers) {
		var ret Servers
		return ret
	}
	return *o.Servers
}

// GetServersOk returns a tuple with the Servers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatacenterEntities) GetServersOk() (*Servers, bool) {
	if o == nil || IsNil(o.Servers) {
		return nil, false
	}
	return o.Servers, true
}

// HasServers returns a boolean if a field has been set.
func (o *DatacenterEntities) HasServers() bool {
	if o != nil && !IsNil(o.Servers) {
		return true
	}

	return false
}

// SetServers gets a reference to the given Servers and assigns it to the Servers field.
func (o *DatacenterEntities) SetServers(v Servers) {
	o.Servers = &v
}

// GetVolumes returns the Volumes field value if set, zero value otherwise.
func (o *DatacenterEntities) GetVolumes() Volumes {
	if o == nil || IsNil(o.Volumes) {
		var ret Volumes
		return ret
	}
	return *o.Volumes
}

// GetVolumesOk returns a tuple with the Volumes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatacenterEntities) GetVolumesOk() (*Volumes, bool) {
	if o == nil || IsNil(o.Volumes) {
		return nil, false
	}
	return o.Volumes, true
}

// HasVolumes returns a boolean if a field has been set.
func (o *DatacenterEntities) HasVolumes() bool {
	if o != nil && !IsNil(o.Volumes) {
		return true
	}

	return false
}

// SetVolumes gets a reference to the given Volumes and assigns it to the Volumes field.
func (o *DatacenterEntities) SetVolumes(v Volumes) {
	o.Volumes = &v
}

// GetLoadbalancers returns the Loadbalancers field value if set, zero value otherwise.
func (o *DatacenterEntities) GetLoadbalancers() Loadbalancers {
	if o == nil || IsNil(o.Loadbalancers) {
		var ret Loadbalancers
		return ret
	}
	return *o.Loadbalancers
}

// GetLoadbalancersOk returns a tuple with the Loadbalancers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatacenterEntities) GetLoadbalancersOk() (*Loadbalancers, bool) {
	if o == nil || IsNil(o.Loadbalancers) {
		return nil, false
	}
	return o.Loadbalancers, true
}

// HasLoadbalancers returns a boolean if a field has been set.
func (o *DatacenterEntities) HasLoadbalancers() bool {
	if o != nil && !IsNil(o.Loadbalancers) {
		return true
	}

	return false
}

// SetLoadbalancers gets a reference to the given Loadbalancers and assigns it to the Loadbalancers field.
func (o *DatacenterEntities) SetLoadbalancers(v Loadbalancers) {
	o.Loadbalancers = &v
}

// GetLans returns the Lans field value if set, zero value otherwise.
func (o *DatacenterEntities) GetLans() Lans {
	if o == nil || IsNil(o.Lans) {
		var ret Lans
		return ret
	}
	return *o.Lans
}

// GetLansOk returns a tuple with the Lans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatacenterEntities) GetLansOk() (*Lans, bool) {
	if o == nil || IsNil(o.Lans) {
		return nil, false
	}
	return o.Lans, true
}

// HasLans returns a boolean if a field has been set.
func (o *DatacenterEntities) HasLans() bool {
	if o != nil && !IsNil(o.Lans) {
		return true
	}

	return false
}

// SetLans gets a reference to the given Lans and assigns it to the Lans field.
func (o *DatacenterEntities) SetLans(v Lans) {
	o.Lans = &v
}

// GetNetworkloadbalancers returns the Networkloadbalancers field value if set, zero value otherwise.
func (o *DatacenterEntities) GetNetworkloadbalancers() NetworkLoadBalancers {
	if o == nil || IsNil(o.Networkloadbalancers) {
		var ret NetworkLoadBalancers
		return ret
	}
	return *o.Networkloadbalancers
}

// GetNetworkloadbalancersOk returns a tuple with the Networkloadbalancers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatacenterEntities) GetNetworkloadbalancersOk() (*NetworkLoadBalancers, bool) {
	if o == nil || IsNil(o.Networkloadbalancers) {
		return nil, false
	}
	return o.Networkloadbalancers, true
}

// HasNetworkloadbalancers returns a boolean if a field has been set.
func (o *DatacenterEntities) HasNetworkloadbalancers() bool {
	if o != nil && !IsNil(o.Networkloadbalancers) {
		return true
	}

	return false
}

// SetNetworkloadbalancers gets a reference to the given NetworkLoadBalancers and assigns it to the Networkloadbalancers field.
func (o *DatacenterEntities) SetNetworkloadbalancers(v NetworkLoadBalancers) {
	o.Networkloadbalancers = &v
}

// GetNatgateways returns the Natgateways field value if set, zero value otherwise.
func (o *DatacenterEntities) GetNatgateways() NatGateways {
	if o == nil || IsNil(o.Natgateways) {
		var ret NatGateways
		return ret
	}
	return *o.Natgateways
}

// GetNatgatewaysOk returns a tuple with the Natgateways field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatacenterEntities) GetNatgatewaysOk() (*NatGateways, bool) {
	if o == nil || IsNil(o.Natgateways) {
		return nil, false
	}
	return o.Natgateways, true
}

// HasNatgateways returns a boolean if a field has been set.
func (o *DatacenterEntities) HasNatgateways() bool {
	if o != nil && !IsNil(o.Natgateways) {
		return true
	}

	return false
}

// SetNatgateways gets a reference to the given NatGateways and assigns it to the Natgateways field.
func (o *DatacenterEntities) SetNatgateways(v NatGateways) {
	o.Natgateways = &v
}

// GetSecuritygroups returns the Securitygroups field value if set, zero value otherwise.
func (o *DatacenterEntities) GetSecuritygroups() SecurityGroups {
	if o == nil || IsNil(o.Securitygroups) {
		var ret SecurityGroups
		return ret
	}
	return *o.Securitygroups
}

// GetSecuritygroupsOk returns a tuple with the Securitygroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatacenterEntities) GetSecuritygroupsOk() (*SecurityGroups, bool) {
	if o == nil || IsNil(o.Securitygroups) {
		return nil, false
	}
	return o.Securitygroups, true
}

// HasSecuritygroups returns a boolean if a field has been set.
func (o *DatacenterEntities) HasSecuritygroups() bool {
	if o != nil && !IsNil(o.Securitygroups) {
		return true
	}

	return false
}

// SetSecuritygroups gets a reference to the given SecurityGroups and assigns it to the Securitygroups field.
func (o *DatacenterEntities) SetSecuritygroups(v SecurityGroups) {
	o.Securitygroups = &v
}

func (o DatacenterEntities) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DatacenterEntities) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Servers) {
		toSerialize["servers"] = o.Servers
	}
	if !IsNil(o.Volumes) {
		toSerialize["volumes"] = o.Volumes
	}
	if !IsNil(o.Loadbalancers) {
		toSerialize["loadbalancers"] = o.Loadbalancers
	}
	if !IsNil(o.Lans) {
		toSerialize["lans"] = o.Lans
	}
	if !IsNil(o.Networkloadbalancers) {
		toSerialize["networkloadbalancers"] = o.Networkloadbalancers
	}
	if !IsNil(o.Natgateways) {
		toSerialize["natgateways"] = o.Natgateways
	}
	if !IsNil(o.Securitygroups) {
		toSerialize["securitygroups"] = o.Securitygroups
	}
	return toSerialize, nil
}

type NullableDatacenterEntities struct {
	value *DatacenterEntities
	isSet bool
}

func (v NullableDatacenterEntities) Get() *DatacenterEntities {
	return v.value
}

func (v *NullableDatacenterEntities) Set(val *DatacenterEntities) {
	v.value = val
	v.isSet = true
}

func (v NullableDatacenterEntities) IsSet() bool {
	return v.isSet
}

func (v *NullableDatacenterEntities) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDatacenterEntities(val *DatacenterEntities) *NullableDatacenterEntities {
	return &NullableDatacenterEntities{value: val, isSet: true}
}

func (v NullableDatacenterEntities) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDatacenterEntities) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
