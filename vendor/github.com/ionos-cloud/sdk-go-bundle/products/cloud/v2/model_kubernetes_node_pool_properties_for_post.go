/*
 * CLOUD API
 *
 *  IONOS Enterprise-grade Infrastructure as a Service (IaaS) solutions can be managed through the Cloud API, in addition or as an alternative to the \"Data Center Designer\" (DCD) browser-based tool.    Both methods employ consistent concepts and features, deliver similar power and flexibility, and can be used to perform a multitude of management tasks, including adding servers, volumes, configuring networks, and so on.
 *
 * API version: 6.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ionoscloud

import (
	"encoding/json"
)

// checks if the KubernetesNodePoolPropertiesForPost type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KubernetesNodePoolPropertiesForPost{}

// KubernetesNodePoolPropertiesForPost struct for KubernetesNodePoolPropertiesForPost
type KubernetesNodePoolPropertiesForPost struct {
	// A Kubernetes node pool name. Valid Kubernetes node pool name must be 63 characters or less and must be empty or begin and end with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between.
	Name string `json:"name"`
	// The unique identifier of the VDC where the worker nodes of the node pool are provisioned.Note that the data center is located in the exact place where the parent cluster of the node pool is located.
	DatacenterId string `json:"datacenterId"`
	// The number of worker nodes of the node pool.
	NodeCount int32 `json:"nodeCount"`
	// The CPU type for the nodes.
	CpuFamily string `json:"cpuFamily"`
	// The total number of cores for the nodes.
	CoresCount int32 `json:"coresCount"`
	// The RAM size for the nodes. Must be specified in multiples of 1024 MB, with a minimum size of 2048 MB.
	RamSize int32 `json:"ramSize"`
	// The availability zone in which the target VM should be provisioned.
	AvailabilityZone string `json:"availabilityZone"`
	// The storage type for the nodes.
	StorageType string `json:"storageType"`
	// The allocated volume size in GB. The allocated volume size in GB. To achieve good performance, we recommend a size greater than 100GB for SSD.
	StorageSize int32 `json:"storageSize"`
	// The Kubernetes version running in the node pool. Note that this imposes restrictions on which Kubernetes versions can run in the node pools of a cluster. Also, not all Kubernetes versions are suitable upgrade targets for all earlier versions.
	K8sVersion        *string                      `json:"k8sVersion,omitempty"`
	MaintenanceWindow *KubernetesMaintenanceWindow `json:"maintenanceWindow,omitempty"`
	AutoScaling       *KubernetesAutoScaling       `json:"autoScaling,omitempty"`
	// The array of existing private LANs to attach to worker nodes.
	Lans []KubernetesNodePoolLan `json:"lans,omitempty"`
	// The labels attached to the node pool.
	Labels *map[string]string `json:"labels,omitempty"`
	// The annotations attached to the node pool.
	Annotations *map[string]string `json:"annotations,omitempty"`
	// Optional array of reserved public IP addresses to be used by the nodes. The IPs must be from the exact location of the node pool's data center. If autoscaling is used, the array must contain one more IP than the maximum possible number of nodes (nodeCount+1 for a fixed number of nodes or maxNodeCount+1). The extra IP is used when the nodes are rebuilt.
	PublicIps []string `json:"publicIps,omitempty"`
}

// NewKubernetesNodePoolPropertiesForPost instantiates a new KubernetesNodePoolPropertiesForPost object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKubernetesNodePoolPropertiesForPost(name string, datacenterId string, nodeCount int32, cpuFamily string, coresCount int32, ramSize int32, availabilityZone string, storageType string, storageSize int32) *KubernetesNodePoolPropertiesForPost {
	this := KubernetesNodePoolPropertiesForPost{}

	this.Name = name
	this.DatacenterId = datacenterId
	this.NodeCount = nodeCount
	this.CpuFamily = cpuFamily
	this.CoresCount = coresCount
	this.RamSize = ramSize
	this.AvailabilityZone = availabilityZone
	this.StorageType = storageType
	this.StorageSize = storageSize

	return &this
}

// NewKubernetesNodePoolPropertiesForPostWithDefaults instantiates a new KubernetesNodePoolPropertiesForPost object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKubernetesNodePoolPropertiesForPostWithDefaults() *KubernetesNodePoolPropertiesForPost {
	this := KubernetesNodePoolPropertiesForPost{}
	return &this
}

// GetName returns the Name field value
func (o *KubernetesNodePoolPropertiesForPost) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *KubernetesNodePoolPropertiesForPost) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *KubernetesNodePoolPropertiesForPost) SetName(v string) {
	o.Name = v
}

// GetDatacenterId returns the DatacenterId field value
func (o *KubernetesNodePoolPropertiesForPost) GetDatacenterId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DatacenterId
}

// GetDatacenterIdOk returns a tuple with the DatacenterId field value
// and a boolean to check if the value has been set.
func (o *KubernetesNodePoolPropertiesForPost) GetDatacenterIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DatacenterId, true
}

// SetDatacenterId sets field value
func (o *KubernetesNodePoolPropertiesForPost) SetDatacenterId(v string) {
	o.DatacenterId = v
}

// GetNodeCount returns the NodeCount field value
func (o *KubernetesNodePoolPropertiesForPost) GetNodeCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NodeCount
}

// GetNodeCountOk returns a tuple with the NodeCount field value
// and a boolean to check if the value has been set.
func (o *KubernetesNodePoolPropertiesForPost) GetNodeCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NodeCount, true
}

// SetNodeCount sets field value
func (o *KubernetesNodePoolPropertiesForPost) SetNodeCount(v int32) {
	o.NodeCount = v
}

// GetCpuFamily returns the CpuFamily field value
func (o *KubernetesNodePoolPropertiesForPost) GetCpuFamily() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CpuFamily
}

// GetCpuFamilyOk returns a tuple with the CpuFamily field value
// and a boolean to check if the value has been set.
func (o *KubernetesNodePoolPropertiesForPost) GetCpuFamilyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CpuFamily, true
}

// SetCpuFamily sets field value
func (o *KubernetesNodePoolPropertiesForPost) SetCpuFamily(v string) {
	o.CpuFamily = v
}

// GetCoresCount returns the CoresCount field value
func (o *KubernetesNodePoolPropertiesForPost) GetCoresCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CoresCount
}

// GetCoresCountOk returns a tuple with the CoresCount field value
// and a boolean to check if the value has been set.
func (o *KubernetesNodePoolPropertiesForPost) GetCoresCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CoresCount, true
}

// SetCoresCount sets field value
func (o *KubernetesNodePoolPropertiesForPost) SetCoresCount(v int32) {
	o.CoresCount = v
}

// GetRamSize returns the RamSize field value
func (o *KubernetesNodePoolPropertiesForPost) GetRamSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RamSize
}

// GetRamSizeOk returns a tuple with the RamSize field value
// and a boolean to check if the value has been set.
func (o *KubernetesNodePoolPropertiesForPost) GetRamSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RamSize, true
}

// SetRamSize sets field value
func (o *KubernetesNodePoolPropertiesForPost) SetRamSize(v int32) {
	o.RamSize = v
}

// GetAvailabilityZone returns the AvailabilityZone field value
func (o *KubernetesNodePoolPropertiesForPost) GetAvailabilityZone() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AvailabilityZone
}

// GetAvailabilityZoneOk returns a tuple with the AvailabilityZone field value
// and a boolean to check if the value has been set.
func (o *KubernetesNodePoolPropertiesForPost) GetAvailabilityZoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AvailabilityZone, true
}

// SetAvailabilityZone sets field value
func (o *KubernetesNodePoolPropertiesForPost) SetAvailabilityZone(v string) {
	o.AvailabilityZone = v
}

// GetStorageType returns the StorageType field value
func (o *KubernetesNodePoolPropertiesForPost) GetStorageType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StorageType
}

// GetStorageTypeOk returns a tuple with the StorageType field value
// and a boolean to check if the value has been set.
func (o *KubernetesNodePoolPropertiesForPost) GetStorageTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StorageType, true
}

// SetStorageType sets field value
func (o *KubernetesNodePoolPropertiesForPost) SetStorageType(v string) {
	o.StorageType = v
}

// GetStorageSize returns the StorageSize field value
func (o *KubernetesNodePoolPropertiesForPost) GetStorageSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.StorageSize
}

// GetStorageSizeOk returns a tuple with the StorageSize field value
// and a boolean to check if the value has been set.
func (o *KubernetesNodePoolPropertiesForPost) GetStorageSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StorageSize, true
}

// SetStorageSize sets field value
func (o *KubernetesNodePoolPropertiesForPost) SetStorageSize(v int32) {
	o.StorageSize = v
}

// GetK8sVersion returns the K8sVersion field value if set, zero value otherwise.
func (o *KubernetesNodePoolPropertiesForPost) GetK8sVersion() string {
	if o == nil || IsNil(o.K8sVersion) {
		var ret string
		return ret
	}
	return *o.K8sVersion
}

// GetK8sVersionOk returns a tuple with the K8sVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesNodePoolPropertiesForPost) GetK8sVersionOk() (*string, bool) {
	if o == nil || IsNil(o.K8sVersion) {
		return nil, false
	}
	return o.K8sVersion, true
}

// HasK8sVersion returns a boolean if a field has been set.
func (o *KubernetesNodePoolPropertiesForPost) HasK8sVersion() bool {
	if o != nil && !IsNil(o.K8sVersion) {
		return true
	}

	return false
}

// SetK8sVersion gets a reference to the given string and assigns it to the K8sVersion field.
func (o *KubernetesNodePoolPropertiesForPost) SetK8sVersion(v string) {
	o.K8sVersion = &v
}

// GetMaintenanceWindow returns the MaintenanceWindow field value if set, zero value otherwise.
func (o *KubernetesNodePoolPropertiesForPost) GetMaintenanceWindow() KubernetesMaintenanceWindow {
	if o == nil || IsNil(o.MaintenanceWindow) {
		var ret KubernetesMaintenanceWindow
		return ret
	}
	return *o.MaintenanceWindow
}

// GetMaintenanceWindowOk returns a tuple with the MaintenanceWindow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesNodePoolPropertiesForPost) GetMaintenanceWindowOk() (*KubernetesMaintenanceWindow, bool) {
	if o == nil || IsNil(o.MaintenanceWindow) {
		return nil, false
	}
	return o.MaintenanceWindow, true
}

// HasMaintenanceWindow returns a boolean if a field has been set.
func (o *KubernetesNodePoolPropertiesForPost) HasMaintenanceWindow() bool {
	if o != nil && !IsNil(o.MaintenanceWindow) {
		return true
	}

	return false
}

// SetMaintenanceWindow gets a reference to the given KubernetesMaintenanceWindow and assigns it to the MaintenanceWindow field.
func (o *KubernetesNodePoolPropertiesForPost) SetMaintenanceWindow(v KubernetesMaintenanceWindow) {
	o.MaintenanceWindow = &v
}

// GetAutoScaling returns the AutoScaling field value if set, zero value otherwise.
func (o *KubernetesNodePoolPropertiesForPost) GetAutoScaling() KubernetesAutoScaling {
	if o == nil || IsNil(o.AutoScaling) {
		var ret KubernetesAutoScaling
		return ret
	}
	return *o.AutoScaling
}

// GetAutoScalingOk returns a tuple with the AutoScaling field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesNodePoolPropertiesForPost) GetAutoScalingOk() (*KubernetesAutoScaling, bool) {
	if o == nil || IsNil(o.AutoScaling) {
		return nil, false
	}
	return o.AutoScaling, true
}

// HasAutoScaling returns a boolean if a field has been set.
func (o *KubernetesNodePoolPropertiesForPost) HasAutoScaling() bool {
	if o != nil && !IsNil(o.AutoScaling) {
		return true
	}

	return false
}

// SetAutoScaling gets a reference to the given KubernetesAutoScaling and assigns it to the AutoScaling field.
func (o *KubernetesNodePoolPropertiesForPost) SetAutoScaling(v KubernetesAutoScaling) {
	o.AutoScaling = &v
}

// GetLans returns the Lans field value if set, zero value otherwise.
func (o *KubernetesNodePoolPropertiesForPost) GetLans() []KubernetesNodePoolLan {
	if o == nil || IsNil(o.Lans) {
		var ret []KubernetesNodePoolLan
		return ret
	}
	return o.Lans
}

// GetLansOk returns a tuple with the Lans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesNodePoolPropertiesForPost) GetLansOk() ([]KubernetesNodePoolLan, bool) {
	if o == nil || IsNil(o.Lans) {
		return nil, false
	}
	return o.Lans, true
}

// HasLans returns a boolean if a field has been set.
func (o *KubernetesNodePoolPropertiesForPost) HasLans() bool {
	if o != nil && !IsNil(o.Lans) {
		return true
	}

	return false
}

// SetLans gets a reference to the given []KubernetesNodePoolLan and assigns it to the Lans field.
func (o *KubernetesNodePoolPropertiesForPost) SetLans(v []KubernetesNodePoolLan) {
	o.Lans = v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *KubernetesNodePoolPropertiesForPost) GetLabels() map[string]string {
	if o == nil || IsNil(o.Labels) {
		var ret map[string]string
		return ret
	}
	return *o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesNodePoolPropertiesForPost) GetLabelsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *KubernetesNodePoolPropertiesForPost) HasLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given map[string]string and assigns it to the Labels field.
func (o *KubernetesNodePoolPropertiesForPost) SetLabels(v map[string]string) {
	o.Labels = &v
}

// GetAnnotations returns the Annotations field value if set, zero value otherwise.
func (o *KubernetesNodePoolPropertiesForPost) GetAnnotations() map[string]string {
	if o == nil || IsNil(o.Annotations) {
		var ret map[string]string
		return ret
	}
	return *o.Annotations
}

// GetAnnotationsOk returns a tuple with the Annotations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesNodePoolPropertiesForPost) GetAnnotationsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Annotations) {
		return nil, false
	}
	return o.Annotations, true
}

// HasAnnotations returns a boolean if a field has been set.
func (o *KubernetesNodePoolPropertiesForPost) HasAnnotations() bool {
	if o != nil && !IsNil(o.Annotations) {
		return true
	}

	return false
}

// SetAnnotations gets a reference to the given map[string]string and assigns it to the Annotations field.
func (o *KubernetesNodePoolPropertiesForPost) SetAnnotations(v map[string]string) {
	o.Annotations = &v
}

// GetPublicIps returns the PublicIps field value if set, zero value otherwise.
func (o *KubernetesNodePoolPropertiesForPost) GetPublicIps() []string {
	if o == nil || IsNil(o.PublicIps) {
		var ret []string
		return ret
	}
	return o.PublicIps
}

// GetPublicIpsOk returns a tuple with the PublicIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KubernetesNodePoolPropertiesForPost) GetPublicIpsOk() ([]string, bool) {
	if o == nil || IsNil(o.PublicIps) {
		return nil, false
	}
	return o.PublicIps, true
}

// HasPublicIps returns a boolean if a field has been set.
func (o *KubernetesNodePoolPropertiesForPost) HasPublicIps() bool {
	if o != nil && !IsNil(o.PublicIps) {
		return true
	}

	return false
}

// SetPublicIps gets a reference to the given []string and assigns it to the PublicIps field.
func (o *KubernetesNodePoolPropertiesForPost) SetPublicIps(v []string) {
	o.PublicIps = v
}

func (o KubernetesNodePoolPropertiesForPost) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KubernetesNodePoolPropertiesForPost) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["datacenterId"] = o.DatacenterId
	toSerialize["nodeCount"] = o.NodeCount
	toSerialize["cpuFamily"] = o.CpuFamily
	toSerialize["coresCount"] = o.CoresCount
	toSerialize["ramSize"] = o.RamSize
	toSerialize["availabilityZone"] = o.AvailabilityZone
	toSerialize["storageType"] = o.StorageType
	toSerialize["storageSize"] = o.StorageSize
	if !IsNil(o.K8sVersion) {
		toSerialize["k8sVersion"] = o.K8sVersion
	}
	if !IsNil(o.MaintenanceWindow) {
		toSerialize["maintenanceWindow"] = o.MaintenanceWindow
	}
	if !IsNil(o.AutoScaling) {
		toSerialize["autoScaling"] = o.AutoScaling
	}
	toSerialize["lans"] = o.Lans
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.Annotations) {
		toSerialize["annotations"] = o.Annotations
	}
	toSerialize["publicIps"] = o.PublicIps
	return toSerialize, nil
}

type NullableKubernetesNodePoolPropertiesForPost struct {
	value *KubernetesNodePoolPropertiesForPost
	isSet bool
}

func (v NullableKubernetesNodePoolPropertiesForPost) Get() *KubernetesNodePoolPropertiesForPost {
	return v.value
}

func (v *NullableKubernetesNodePoolPropertiesForPost) Set(val *KubernetesNodePoolPropertiesForPost) {
	v.value = val
	v.isSet = true
}

func (v NullableKubernetesNodePoolPropertiesForPost) IsSet() bool {
	return v.isSet
}

func (v *NullableKubernetesNodePoolPropertiesForPost) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKubernetesNodePoolPropertiesForPost(val *KubernetesNodePoolPropertiesForPost) *NullableKubernetesNodePoolPropertiesForPost {
	return &NullableKubernetesNodePoolPropertiesForPost{value: val, isSet: true}
}

func (v NullableKubernetesNodePoolPropertiesForPost) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKubernetesNodePoolPropertiesForPost) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
