/*
 * CLOUD API
 *
 *  IONOS Enterprise-grade Infrastructure as a Service (IaaS) solutions can be managed through the Cloud API, in addition or as an alternative to the \"Data Center Designer\" (DCD) browser-based tool.    Both methods employ consistent concepts and features, deliver similar power and flexibility, and can be used to perform a multitude of management tasks, including adding servers, volumes, configuring networks, and so on.
 *
 * API version: 6.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ionoscloud

import (
	"encoding/json"
)

// checks if the ApplicationLoadBalancerForwardingRuleProperties type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApplicationLoadBalancerForwardingRuleProperties{}

// ApplicationLoadBalancerForwardingRuleProperties struct for ApplicationLoadBalancerForwardingRuleProperties
type ApplicationLoadBalancerForwardingRuleProperties struct {
	// The name of the Application Load Balancer forwarding rule.
	Name string `json:"name"`
	// The balancing protocol.
	Protocol string `json:"protocol"`
	// The listening (inbound) IP.
	ListenerIp string `json:"listenerIp"`
	// The listening (inbound) port number; the valid range is 1 to 65535.
	ListenerPort int32 `json:"listenerPort"`
	// The maximum time in milliseconds to wait for the client to acknowledge or send data; default is 50,000 (50 seconds).
	ClientTimeout *int32 `json:"clientTimeout,omitempty"`
	// Array of items in the collection.
	ServerCertificates []string `json:"serverCertificates,omitempty"`
	// An array of items in the collection. The original order of rules is preserved during processing, except that rules of the 'FORWARD' type are processed after the rules with other defined actions. The relative order of the 'FORWARD' type rules is also preserved during the processing.
	HttpRules []ApplicationLoadBalancerHttpRule `json:"httpRules,omitempty"`
}

// NewApplicationLoadBalancerForwardingRuleProperties instantiates a new ApplicationLoadBalancerForwardingRuleProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationLoadBalancerForwardingRuleProperties(name string, protocol string, listenerIp string, listenerPort int32) *ApplicationLoadBalancerForwardingRuleProperties {
	this := ApplicationLoadBalancerForwardingRuleProperties{}

	this.Name = name
	this.Protocol = protocol
	this.ListenerIp = listenerIp
	this.ListenerPort = listenerPort

	return &this
}

// NewApplicationLoadBalancerForwardingRulePropertiesWithDefaults instantiates a new ApplicationLoadBalancerForwardingRuleProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationLoadBalancerForwardingRulePropertiesWithDefaults() *ApplicationLoadBalancerForwardingRuleProperties {
	this := ApplicationLoadBalancerForwardingRuleProperties{}
	return &this
}

// GetName returns the Name field value
func (o *ApplicationLoadBalancerForwardingRuleProperties) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ApplicationLoadBalancerForwardingRuleProperties) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ApplicationLoadBalancerForwardingRuleProperties) SetName(v string) {
	o.Name = v
}

// GetProtocol returns the Protocol field value
func (o *ApplicationLoadBalancerForwardingRuleProperties) GetProtocol() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value
// and a boolean to check if the value has been set.
func (o *ApplicationLoadBalancerForwardingRuleProperties) GetProtocolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Protocol, true
}

// SetProtocol sets field value
func (o *ApplicationLoadBalancerForwardingRuleProperties) SetProtocol(v string) {
	o.Protocol = v
}

// GetListenerIp returns the ListenerIp field value
func (o *ApplicationLoadBalancerForwardingRuleProperties) GetListenerIp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ListenerIp
}

// GetListenerIpOk returns a tuple with the ListenerIp field value
// and a boolean to check if the value has been set.
func (o *ApplicationLoadBalancerForwardingRuleProperties) GetListenerIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ListenerIp, true
}

// SetListenerIp sets field value
func (o *ApplicationLoadBalancerForwardingRuleProperties) SetListenerIp(v string) {
	o.ListenerIp = v
}

// GetListenerPort returns the ListenerPort field value
func (o *ApplicationLoadBalancerForwardingRuleProperties) GetListenerPort() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ListenerPort
}

// GetListenerPortOk returns a tuple with the ListenerPort field value
// and a boolean to check if the value has been set.
func (o *ApplicationLoadBalancerForwardingRuleProperties) GetListenerPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ListenerPort, true
}

// SetListenerPort sets field value
func (o *ApplicationLoadBalancerForwardingRuleProperties) SetListenerPort(v int32) {
	o.ListenerPort = v
}

// GetClientTimeout returns the ClientTimeout field value if set, zero value otherwise.
func (o *ApplicationLoadBalancerForwardingRuleProperties) GetClientTimeout() int32 {
	if o == nil || IsNil(o.ClientTimeout) {
		var ret int32
		return ret
	}
	return *o.ClientTimeout
}

// GetClientTimeoutOk returns a tuple with the ClientTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationLoadBalancerForwardingRuleProperties) GetClientTimeoutOk() (*int32, bool) {
	if o == nil || IsNil(o.ClientTimeout) {
		return nil, false
	}
	return o.ClientTimeout, true
}

// HasClientTimeout returns a boolean if a field has been set.
func (o *ApplicationLoadBalancerForwardingRuleProperties) HasClientTimeout() bool {
	if o != nil && !IsNil(o.ClientTimeout) {
		return true
	}

	return false
}

// SetClientTimeout gets a reference to the given int32 and assigns it to the ClientTimeout field.
func (o *ApplicationLoadBalancerForwardingRuleProperties) SetClientTimeout(v int32) {
	o.ClientTimeout = &v
}

// GetServerCertificates returns the ServerCertificates field value if set, zero value otherwise.
func (o *ApplicationLoadBalancerForwardingRuleProperties) GetServerCertificates() []string {
	if o == nil || IsNil(o.ServerCertificates) {
		var ret []string
		return ret
	}
	return o.ServerCertificates
}

// GetServerCertificatesOk returns a tuple with the ServerCertificates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationLoadBalancerForwardingRuleProperties) GetServerCertificatesOk() ([]string, bool) {
	if o == nil || IsNil(o.ServerCertificates) {
		return nil, false
	}
	return o.ServerCertificates, true
}

// HasServerCertificates returns a boolean if a field has been set.
func (o *ApplicationLoadBalancerForwardingRuleProperties) HasServerCertificates() bool {
	if o != nil && !IsNil(o.ServerCertificates) {
		return true
	}

	return false
}

// SetServerCertificates gets a reference to the given []string and assigns it to the ServerCertificates field.
func (o *ApplicationLoadBalancerForwardingRuleProperties) SetServerCertificates(v []string) {
	o.ServerCertificates = v
}

// GetHttpRules returns the HttpRules field value if set, zero value otherwise.
func (o *ApplicationLoadBalancerForwardingRuleProperties) GetHttpRules() []ApplicationLoadBalancerHttpRule {
	if o == nil || IsNil(o.HttpRules) {
		var ret []ApplicationLoadBalancerHttpRule
		return ret
	}
	return o.HttpRules
}

// GetHttpRulesOk returns a tuple with the HttpRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationLoadBalancerForwardingRuleProperties) GetHttpRulesOk() ([]ApplicationLoadBalancerHttpRule, bool) {
	if o == nil || IsNil(o.HttpRules) {
		return nil, false
	}
	return o.HttpRules, true
}

// HasHttpRules returns a boolean if a field has been set.
func (o *ApplicationLoadBalancerForwardingRuleProperties) HasHttpRules() bool {
	if o != nil && !IsNil(o.HttpRules) {
		return true
	}

	return false
}

// SetHttpRules gets a reference to the given []ApplicationLoadBalancerHttpRule and assigns it to the HttpRules field.
func (o *ApplicationLoadBalancerForwardingRuleProperties) SetHttpRules(v []ApplicationLoadBalancerHttpRule) {
	o.HttpRules = v
}

func (o ApplicationLoadBalancerForwardingRuleProperties) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApplicationLoadBalancerForwardingRuleProperties) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["protocol"] = o.Protocol
	toSerialize["listenerIp"] = o.ListenerIp
	toSerialize["listenerPort"] = o.ListenerPort
	if !IsNil(o.ClientTimeout) {
		toSerialize["clientTimeout"] = o.ClientTimeout
	}
	if !IsNil(o.ServerCertificates) {
		toSerialize["serverCertificates"] = o.ServerCertificates
	}
	if !IsNil(o.HttpRules) {
		toSerialize["httpRules"] = o.HttpRules
	}
	return toSerialize, nil
}

type NullableApplicationLoadBalancerForwardingRuleProperties struct {
	value *ApplicationLoadBalancerForwardingRuleProperties
	isSet bool
}

func (v NullableApplicationLoadBalancerForwardingRuleProperties) Get() *ApplicationLoadBalancerForwardingRuleProperties {
	return v.value
}

func (v *NullableApplicationLoadBalancerForwardingRuleProperties) Set(val *ApplicationLoadBalancerForwardingRuleProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationLoadBalancerForwardingRuleProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationLoadBalancerForwardingRuleProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationLoadBalancerForwardingRuleProperties(val *ApplicationLoadBalancerForwardingRuleProperties) *NullableApplicationLoadBalancerForwardingRuleProperties {
	return &NullableApplicationLoadBalancerForwardingRuleProperties{value: val, isSet: true}
}

func (v NullableApplicationLoadBalancerForwardingRuleProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationLoadBalancerForwardingRuleProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
