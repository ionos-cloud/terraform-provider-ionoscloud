/*
 * CLOUD API
 *
 *  IONOS Enterprise-grade Infrastructure as a Service (IaaS) solutions can be managed through the Cloud API, in addition or as an alternative to the \"Data Center Designer\" (DCD) browser-based tool.    Both methods employ consistent concepts and features, deliver similar power and flexibility, and can be used to perform a multitude of management tasks, including adding servers, volumes, configuring networks, and so on.
 *
 * API version: 6.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ionoscloud

import (
	"encoding/json"
)

// checks if the CreateSnapshotProperties type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateSnapshotProperties{}

// CreateSnapshotProperties struct for CreateSnapshotProperties
type CreateSnapshotProperties struct {
	// The name of the snapshot
	Name *string `json:"name,omitempty"`
	// The description of the snapshot
	Description *string `json:"description,omitempty"`
	// Flag representing if extra protection is enabled on snapshot e.g. Two Factor protection etc.
	SecAuthProtection *bool `json:"secAuthProtection,omitempty"`
	// OS type of this Snapshot
	LicenceType *string `json:"licenceType,omitempty"`
}

// NewCreateSnapshotProperties instantiates a new CreateSnapshotProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSnapshotProperties() *CreateSnapshotProperties {
	this := CreateSnapshotProperties{}

	return &this
}

// NewCreateSnapshotPropertiesWithDefaults instantiates a new CreateSnapshotProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSnapshotPropertiesWithDefaults() *CreateSnapshotProperties {
	this := CreateSnapshotProperties{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateSnapshotProperties) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSnapshotProperties) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateSnapshotProperties) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateSnapshotProperties) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateSnapshotProperties) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSnapshotProperties) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateSnapshotProperties) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateSnapshotProperties) SetDescription(v string) {
	o.Description = &v
}

// GetSecAuthProtection returns the SecAuthProtection field value if set, zero value otherwise.
func (o *CreateSnapshotProperties) GetSecAuthProtection() bool {
	if o == nil || IsNil(o.SecAuthProtection) {
		var ret bool
		return ret
	}
	return *o.SecAuthProtection
}

// GetSecAuthProtectionOk returns a tuple with the SecAuthProtection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSnapshotProperties) GetSecAuthProtectionOk() (*bool, bool) {
	if o == nil || IsNil(o.SecAuthProtection) {
		return nil, false
	}
	return o.SecAuthProtection, true
}

// HasSecAuthProtection returns a boolean if a field has been set.
func (o *CreateSnapshotProperties) HasSecAuthProtection() bool {
	if o != nil && !IsNil(o.SecAuthProtection) {
		return true
	}

	return false
}

// SetSecAuthProtection gets a reference to the given bool and assigns it to the SecAuthProtection field.
func (o *CreateSnapshotProperties) SetSecAuthProtection(v bool) {
	o.SecAuthProtection = &v
}

// GetLicenceType returns the LicenceType field value if set, zero value otherwise.
func (o *CreateSnapshotProperties) GetLicenceType() string {
	if o == nil || IsNil(o.LicenceType) {
		var ret string
		return ret
	}
	return *o.LicenceType
}

// GetLicenceTypeOk returns a tuple with the LicenceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSnapshotProperties) GetLicenceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.LicenceType) {
		return nil, false
	}
	return o.LicenceType, true
}

// HasLicenceType returns a boolean if a field has been set.
func (o *CreateSnapshotProperties) HasLicenceType() bool {
	if o != nil && !IsNil(o.LicenceType) {
		return true
	}

	return false
}

// SetLicenceType gets a reference to the given string and assigns it to the LicenceType field.
func (o *CreateSnapshotProperties) SetLicenceType(v string) {
	o.LicenceType = &v
}

func (o CreateSnapshotProperties) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateSnapshotProperties) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.SecAuthProtection) {
		toSerialize["secAuthProtection"] = o.SecAuthProtection
	}
	if !IsNil(o.LicenceType) {
		toSerialize["licenceType"] = o.LicenceType
	}
	return toSerialize, nil
}

type NullableCreateSnapshotProperties struct {
	value *CreateSnapshotProperties
	isSet bool
}

func (v NullableCreateSnapshotProperties) Get() *CreateSnapshotProperties {
	return v.value
}

func (v *NullableCreateSnapshotProperties) Set(val *CreateSnapshotProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSnapshotProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSnapshotProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSnapshotProperties(val *CreateSnapshotProperties) *NullableCreateSnapshotProperties {
	return &NullableCreateSnapshotProperties{value: val, isSet: true}
}

func (v NullableCreateSnapshotProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSnapshotProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
