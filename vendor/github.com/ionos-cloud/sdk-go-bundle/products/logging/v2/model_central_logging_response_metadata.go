/*
 * IONOS Logging REST API
 *
 * The logging service offers a centralized platform to collect and store logs from various systems and applications. It includes tools to search, filter, visualize, and create alerts based on your log data.  This API provides programmatic control over logging pipelines, enabling you to create new pipelines or modify existing ones. It mirrors the functionality of the DCD visual tool, ensuring a consistent experience regardless of your chosen interface.
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package logging

import (
	"encoding/json"

	"time"
)

// checks if the CentralLoggingResponseMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CentralLoggingResponseMetadata{}

// CentralLoggingResponseMetadata struct for CentralLoggingResponseMetadata
type CentralLoggingResponseMetadata struct {
	// The ISO 8601 modified timestamp.
	LastModifiedDate       *IonosTime `json:"lastModifiedDate,omitempty"`
	LastModifiedBy         *string    `json:"lastModifiedBy,omitempty"`
	LastModifiedByUserId   *string    `json:"lastModifiedByUserId,omitempty"`
	LastModifiedByUserUuid *string    `json:"lastModifiedByUserUuid,omitempty"`
	GrafanaEndpoint        *string    `json:"grafanaEndpoint,omitempty"`
}

// NewCentralLoggingResponseMetadata instantiates a new CentralLoggingResponseMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCentralLoggingResponseMetadata() *CentralLoggingResponseMetadata {
	this := CentralLoggingResponseMetadata{}

	return &this
}

// NewCentralLoggingResponseMetadataWithDefaults instantiates a new CentralLoggingResponseMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCentralLoggingResponseMetadataWithDefaults() *CentralLoggingResponseMetadata {
	this := CentralLoggingResponseMetadata{}
	return &this
}

// GetLastModifiedDate returns the LastModifiedDate field value if set, zero value otherwise.
func (o *CentralLoggingResponseMetadata) GetLastModifiedDate() time.Time {
	if o == nil || IsNil(o.LastModifiedDate) {
		var ret time.Time
		return ret
	}
	return o.LastModifiedDate.Time
}

// GetLastModifiedDateOk returns a tuple with the LastModifiedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralLoggingResponseMetadata) GetLastModifiedDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastModifiedDate) {
		return nil, false
	}
	return &o.LastModifiedDate.Time, true
}

// HasLastModifiedDate returns a boolean if a field has been set.
func (o *CentralLoggingResponseMetadata) HasLastModifiedDate() bool {
	if o != nil && !IsNil(o.LastModifiedDate) {
		return true
	}

	return false
}

// SetLastModifiedDate gets a reference to the given time.Time and assigns it to the LastModifiedDate field.
func (o *CentralLoggingResponseMetadata) SetLastModifiedDate(v time.Time) {
	o.LastModifiedDate = &IonosTime{v}
}

// GetLastModifiedBy returns the LastModifiedBy field value if set, zero value otherwise.
func (o *CentralLoggingResponseMetadata) GetLastModifiedBy() string {
	if o == nil || IsNil(o.LastModifiedBy) {
		var ret string
		return ret
	}
	return *o.LastModifiedBy
}

// GetLastModifiedByOk returns a tuple with the LastModifiedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralLoggingResponseMetadata) GetLastModifiedByOk() (*string, bool) {
	if o == nil || IsNil(o.LastModifiedBy) {
		return nil, false
	}
	return o.LastModifiedBy, true
}

// HasLastModifiedBy returns a boolean if a field has been set.
func (o *CentralLoggingResponseMetadata) HasLastModifiedBy() bool {
	if o != nil && !IsNil(o.LastModifiedBy) {
		return true
	}

	return false
}

// SetLastModifiedBy gets a reference to the given string and assigns it to the LastModifiedBy field.
func (o *CentralLoggingResponseMetadata) SetLastModifiedBy(v string) {
	o.LastModifiedBy = &v
}

// GetLastModifiedByUserId returns the LastModifiedByUserId field value if set, zero value otherwise.
func (o *CentralLoggingResponseMetadata) GetLastModifiedByUserId() string {
	if o == nil || IsNil(o.LastModifiedByUserId) {
		var ret string
		return ret
	}
	return *o.LastModifiedByUserId
}

// GetLastModifiedByUserIdOk returns a tuple with the LastModifiedByUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralLoggingResponseMetadata) GetLastModifiedByUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.LastModifiedByUserId) {
		return nil, false
	}
	return o.LastModifiedByUserId, true
}

// HasLastModifiedByUserId returns a boolean if a field has been set.
func (o *CentralLoggingResponseMetadata) HasLastModifiedByUserId() bool {
	if o != nil && !IsNil(o.LastModifiedByUserId) {
		return true
	}

	return false
}

// SetLastModifiedByUserId gets a reference to the given string and assigns it to the LastModifiedByUserId field.
func (o *CentralLoggingResponseMetadata) SetLastModifiedByUserId(v string) {
	o.LastModifiedByUserId = &v
}

// GetLastModifiedByUserUuid returns the LastModifiedByUserUuid field value if set, zero value otherwise.
func (o *CentralLoggingResponseMetadata) GetLastModifiedByUserUuid() string {
	if o == nil || IsNil(o.LastModifiedByUserUuid) {
		var ret string
		return ret
	}
	return *o.LastModifiedByUserUuid
}

// GetLastModifiedByUserUuidOk returns a tuple with the LastModifiedByUserUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralLoggingResponseMetadata) GetLastModifiedByUserUuidOk() (*string, bool) {
	if o == nil || IsNil(o.LastModifiedByUserUuid) {
		return nil, false
	}
	return o.LastModifiedByUserUuid, true
}

// HasLastModifiedByUserUuid returns a boolean if a field has been set.
func (o *CentralLoggingResponseMetadata) HasLastModifiedByUserUuid() bool {
	if o != nil && !IsNil(o.LastModifiedByUserUuid) {
		return true
	}

	return false
}

// SetLastModifiedByUserUuid gets a reference to the given string and assigns it to the LastModifiedByUserUuid field.
func (o *CentralLoggingResponseMetadata) SetLastModifiedByUserUuid(v string) {
	o.LastModifiedByUserUuid = &v
}

// GetGrafanaEndpoint returns the GrafanaEndpoint field value if set, zero value otherwise.
func (o *CentralLoggingResponseMetadata) GetGrafanaEndpoint() string {
	if o == nil || IsNil(o.GrafanaEndpoint) {
		var ret string
		return ret
	}
	return *o.GrafanaEndpoint
}

// GetGrafanaEndpointOk returns a tuple with the GrafanaEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CentralLoggingResponseMetadata) GetGrafanaEndpointOk() (*string, bool) {
	if o == nil || IsNil(o.GrafanaEndpoint) {
		return nil, false
	}
	return o.GrafanaEndpoint, true
}

// HasGrafanaEndpoint returns a boolean if a field has been set.
func (o *CentralLoggingResponseMetadata) HasGrafanaEndpoint() bool {
	if o != nil && !IsNil(o.GrafanaEndpoint) {
		return true
	}

	return false
}

// SetGrafanaEndpoint gets a reference to the given string and assigns it to the GrafanaEndpoint field.
func (o *CentralLoggingResponseMetadata) SetGrafanaEndpoint(v string) {
	o.GrafanaEndpoint = &v
}

func (o CentralLoggingResponseMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LastModifiedDate) {
		toSerialize["lastModifiedDate"] = o.LastModifiedDate
	}
	if !IsNil(o.LastModifiedBy) {
		toSerialize["lastModifiedBy"] = o.LastModifiedBy
	}
	if !IsNil(o.LastModifiedByUserId) {
		toSerialize["lastModifiedByUserId"] = o.LastModifiedByUserId
	}
	if !IsNil(o.LastModifiedByUserUuid) {
		toSerialize["lastModifiedByUserUuid"] = o.LastModifiedByUserUuid
	}
	if !IsNil(o.GrafanaEndpoint) {
		toSerialize["grafanaEndpoint"] = o.GrafanaEndpoint
	}
	return toSerialize, nil
}

type NullableCentralLoggingResponseMetadata struct {
	value *CentralLoggingResponseMetadata
	isSet bool
}

func (v NullableCentralLoggingResponseMetadata) Get() *CentralLoggingResponseMetadata {
	return v.value
}

func (v *NullableCentralLoggingResponseMetadata) Set(val *CentralLoggingResponseMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableCentralLoggingResponseMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableCentralLoggingResponseMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCentralLoggingResponseMetadata(val *CentralLoggingResponseMetadata) *NullableCentralLoggingResponseMetadata {
	return &NullableCentralLoggingResponseMetadata{value: val, isSet: true}
}

func (v NullableCentralLoggingResponseMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCentralLoggingResponseMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
