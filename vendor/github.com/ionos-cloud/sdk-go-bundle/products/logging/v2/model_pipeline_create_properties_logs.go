/*
 * IONOS Logging REST API
 *
 * The logging service offers a centralized platform to collect and store logs from various systems and applications. It includes tools to search, filter, visualize, and create alerts based on your log data.  This API provides programmatic control over logging pipelines, enabling you to create new pipelines or modify existing ones. It mirrors the functionality of the DCD visual tool, ensuring a consistent experience regardless of your chosen interface.
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package logging

import (
	"encoding/json"
)

// checks if the PipelineCreatePropertiesLogs type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PipelineCreatePropertiesLogs{}

// PipelineCreatePropertiesLogs struct for PipelineCreatePropertiesLogs
type PipelineCreatePropertiesLogs struct {
	// The source parser to be used
	Source *string `json:"source,omitempty"`
	// Tag is to distinguish different pipelines. must be unique amongst the pipeline's array items.
	Tag *string `json:"tag,omitempty"`
	// Protocol to use as intake
	Protocol *string `json:"protocol,omitempty"`
	// Optional custom labels to filter and report logs
	Labels []string `json:"labels,omitempty"`
	// The configuration of the logs datastore
	Destinations []Destination `json:"destinations,omitempty"`
}

// NewPipelineCreatePropertiesLogs instantiates a new PipelineCreatePropertiesLogs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPipelineCreatePropertiesLogs() *PipelineCreatePropertiesLogs {
	this := PipelineCreatePropertiesLogs{}

	return &this
}

// NewPipelineCreatePropertiesLogsWithDefaults instantiates a new PipelineCreatePropertiesLogs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPipelineCreatePropertiesLogsWithDefaults() *PipelineCreatePropertiesLogs {
	this := PipelineCreatePropertiesLogs{}
	return &this
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *PipelineCreatePropertiesLogs) GetSource() string {
	if o == nil || IsNil(o.Source) {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineCreatePropertiesLogs) GetSourceOk() (*string, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *PipelineCreatePropertiesLogs) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *PipelineCreatePropertiesLogs) SetSource(v string) {
	o.Source = &v
}

// GetTag returns the Tag field value if set, zero value otherwise.
func (o *PipelineCreatePropertiesLogs) GetTag() string {
	if o == nil || IsNil(o.Tag) {
		var ret string
		return ret
	}
	return *o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineCreatePropertiesLogs) GetTagOk() (*string, bool) {
	if o == nil || IsNil(o.Tag) {
		return nil, false
	}
	return o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *PipelineCreatePropertiesLogs) HasTag() bool {
	if o != nil && !IsNil(o.Tag) {
		return true
	}

	return false
}

// SetTag gets a reference to the given string and assigns it to the Tag field.
func (o *PipelineCreatePropertiesLogs) SetTag(v string) {
	o.Tag = &v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *PipelineCreatePropertiesLogs) GetProtocol() string {
	if o == nil || IsNil(o.Protocol) {
		var ret string
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineCreatePropertiesLogs) GetProtocolOk() (*string, bool) {
	if o == nil || IsNil(o.Protocol) {
		return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *PipelineCreatePropertiesLogs) HasProtocol() bool {
	if o != nil && !IsNil(o.Protocol) {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given string and assigns it to the Protocol field.
func (o *PipelineCreatePropertiesLogs) SetProtocol(v string) {
	o.Protocol = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *PipelineCreatePropertiesLogs) GetLabels() []string {
	if o == nil || IsNil(o.Labels) {
		var ret []string
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineCreatePropertiesLogs) GetLabelsOk() ([]string, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *PipelineCreatePropertiesLogs) HasLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []string and assigns it to the Labels field.
func (o *PipelineCreatePropertiesLogs) SetLabels(v []string) {
	o.Labels = v
}

// GetDestinations returns the Destinations field value if set, zero value otherwise.
func (o *PipelineCreatePropertiesLogs) GetDestinations() []Destination {
	if o == nil || IsNil(o.Destinations) {
		var ret []Destination
		return ret
	}
	return o.Destinations
}

// GetDestinationsOk returns a tuple with the Destinations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineCreatePropertiesLogs) GetDestinationsOk() ([]Destination, bool) {
	if o == nil || IsNil(o.Destinations) {
		return nil, false
	}
	return o.Destinations, true
}

// HasDestinations returns a boolean if a field has been set.
func (o *PipelineCreatePropertiesLogs) HasDestinations() bool {
	if o != nil && !IsNil(o.Destinations) {
		return true
	}

	return false
}

// SetDestinations gets a reference to the given []Destination and assigns it to the Destinations field.
func (o *PipelineCreatePropertiesLogs) SetDestinations(v []Destination) {
	o.Destinations = v
}

func (o PipelineCreatePropertiesLogs) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !IsNil(o.Tag) {
		toSerialize["tag"] = o.Tag
	}
	if !IsNil(o.Protocol) {
		toSerialize["protocol"] = o.Protocol
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.Destinations) {
		toSerialize["destinations"] = o.Destinations
	}
	return toSerialize, nil
}

type NullablePipelineCreatePropertiesLogs struct {
	value *PipelineCreatePropertiesLogs
	isSet bool
}

func (v NullablePipelineCreatePropertiesLogs) Get() *PipelineCreatePropertiesLogs {
	return v.value
}

func (v *NullablePipelineCreatePropertiesLogs) Set(val *PipelineCreatePropertiesLogs) {
	v.value = val
	v.isSet = true
}

func (v NullablePipelineCreatePropertiesLogs) IsSet() bool {
	return v.isSet
}

func (v *NullablePipelineCreatePropertiesLogs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePipelineCreatePropertiesLogs(val *PipelineCreatePropertiesLogs) *NullablePipelineCreatePropertiesLogs {
	return &NullablePipelineCreatePropertiesLogs{value: val, isSet: true}
}

func (v NullablePipelineCreatePropertiesLogs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePipelineCreatePropertiesLogs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
