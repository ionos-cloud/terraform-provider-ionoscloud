/*
 * IONOS Cloud - Monitoring REST API
 *
 * The monitoring service offers a centralized platform to collect and store metrics.
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monitoring

import (
	"encoding/json"
)

// checks if the PipelineEnsure type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PipelineEnsure{}

// PipelineEnsure struct for PipelineEnsure
type PipelineEnsure struct {
	// Metadata
	Metadata   map[string]interface{} `json:"metadata,omitempty"`
	Properties Pipeline               `json:"properties"`
}

// NewPipelineEnsure instantiates a new PipelineEnsure object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPipelineEnsure(properties Pipeline) *PipelineEnsure {
	this := PipelineEnsure{}

	this.Properties = properties

	return &this
}

// NewPipelineEnsureWithDefaults instantiates a new PipelineEnsure object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPipelineEnsureWithDefaults() *PipelineEnsure {
	this := PipelineEnsure{}
	return &this
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *PipelineEnsure) GetMetadata() map[string]interface{} {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineEnsure) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *PipelineEnsure) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *PipelineEnsure) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

// GetProperties returns the Properties field value
func (o *PipelineEnsure) GetProperties() Pipeline {
	if o == nil {
		var ret Pipeline
		return ret
	}

	return o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value
// and a boolean to check if the value has been set.
func (o *PipelineEnsure) GetPropertiesOk() (*Pipeline, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Properties, true
}

// SetProperties sets field value
func (o *PipelineEnsure) SetProperties(v Pipeline) {
	o.Properties = v
}

func (o PipelineEnsure) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	toSerialize["properties"] = o.Properties
	return toSerialize, nil
}

type NullablePipelineEnsure struct {
	value *PipelineEnsure
	isSet bool
}

func (v NullablePipelineEnsure) Get() *PipelineEnsure {
	return v.value
}

func (v *NullablePipelineEnsure) Set(val *PipelineEnsure) {
	v.value = val
	v.isSet = true
}

func (v NullablePipelineEnsure) IsSet() bool {
	return v.isSet
}

func (v *NullablePipelineEnsure) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePipelineEnsure(val *PipelineEnsure) *NullablePipelineEnsure {
	return &NullablePipelineEnsure{value: val, isSet: true}
}

func (v NullablePipelineEnsure) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePipelineEnsure) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
