/*
 * Container Registry service
 *
 * ## Overview Container Registry service enables IONOS clients to manage docker and OCI compliant registries for use by their managed Kubernetes clusters. Use a Container Registry to ensure you have a privately accessed registry to efficiently support image pulls. ## Changelog ### 1.1.0  - Added new endpoints for Repositories  - Added new endpoints for Artifacts  - Added new endpoints for Vulnerabilities  - Added registry vulnerabilityScanning feature ### 1.2.0  - Added registry `apiSubnetAllowList` ### 1.2.1  - Amended `apiSubnetAllowList` Regex
 *
 * API version: 1.2.1
 * Contact: support@cloud.ionos.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package containerregistry

import (
	"encoding/json"

	"time"
)

// checks if the RepositoryMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RepositoryMetadata{}

// RepositoryMetadata struct for RepositoryMetadata
type RepositoryMetadata struct {
	// The ISO 8601 creation timestamp.
	CreatedDate *IonosTime `json:"createdDate,omitempty"`
	// Unique name of the identity that created the resource.
	CreatedBy *string `json:"createdBy,omitempty"`
	// Unique id of the identity that created the resource.
	CreatedByUserId *string `json:"createdByUserId,omitempty"`
	// The ISO 8601 modified timestamp.
	LastModifiedDate *IonosTime `json:"lastModifiedDate,omitempty"`
	// Unique name of the identity that last modified the resource.
	LastModifiedBy *string `json:"lastModifiedBy,omitempty"`
	// Unique id of the identity that last modified the resource.
	LastModifiedByUserId *string `json:"lastModifiedByUserId,omitempty"`
	// Unique name of the resource.
	ResourceURN   *string    `json:"resourceURN,omitempty"`
	ArtifactCount int64      `json:"artifactCount"`
	PullCount     int64      `json:"pullCount"`
	PushCount     int64      `json:"pushCount"`
	LastPulledAt  *IonosTime `json:"lastPulledAt,omitempty"`
	LastPushedAt  *IonosTime `json:"lastPushedAt,omitempty"`
	// The CVSS vulnerability severity rating
	LastSeverity *string `json:"lastSeverity,omitempty"`
}

// NewRepositoryMetadata instantiates a new RepositoryMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRepositoryMetadata(artifactCount int64, pullCount int64, pushCount int64) *RepositoryMetadata {
	this := RepositoryMetadata{}

	this.ArtifactCount = artifactCount
	this.PullCount = pullCount
	this.PushCount = pushCount

	return &this
}

// NewRepositoryMetadataWithDefaults instantiates a new RepositoryMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRepositoryMetadataWithDefaults() *RepositoryMetadata {
	this := RepositoryMetadata{}
	return &this
}

// GetCreatedDate returns the CreatedDate field value if set, zero value otherwise.
func (o *RepositoryMetadata) GetCreatedDate() time.Time {
	if o == nil || IsNil(o.CreatedDate) {
		var ret time.Time
		return ret
	}
	return o.CreatedDate.Time
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryMetadata) GetCreatedDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedDate) {
		return nil, false
	}
	return &o.CreatedDate.Time, true
}

// HasCreatedDate returns a boolean if a field has been set.
func (o *RepositoryMetadata) HasCreatedDate() bool {
	if o != nil && !IsNil(o.CreatedDate) {
		return true
	}

	return false
}

// SetCreatedDate gets a reference to the given time.Time and assigns it to the CreatedDate field.
func (o *RepositoryMetadata) SetCreatedDate(v time.Time) {
	o.CreatedDate = &IonosTime{v}
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *RepositoryMetadata) GetCreatedBy() string {
	if o == nil || IsNil(o.CreatedBy) {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryMetadata) GetCreatedByOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *RepositoryMetadata) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *RepositoryMetadata) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetCreatedByUserId returns the CreatedByUserId field value if set, zero value otherwise.
func (o *RepositoryMetadata) GetCreatedByUserId() string {
	if o == nil || IsNil(o.CreatedByUserId) {
		var ret string
		return ret
	}
	return *o.CreatedByUserId
}

// GetCreatedByUserIdOk returns a tuple with the CreatedByUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryMetadata) GetCreatedByUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedByUserId) {
		return nil, false
	}
	return o.CreatedByUserId, true
}

// HasCreatedByUserId returns a boolean if a field has been set.
func (o *RepositoryMetadata) HasCreatedByUserId() bool {
	if o != nil && !IsNil(o.CreatedByUserId) {
		return true
	}

	return false
}

// SetCreatedByUserId gets a reference to the given string and assigns it to the CreatedByUserId field.
func (o *RepositoryMetadata) SetCreatedByUserId(v string) {
	o.CreatedByUserId = &v
}

// GetLastModifiedDate returns the LastModifiedDate field value if set, zero value otherwise.
func (o *RepositoryMetadata) GetLastModifiedDate() time.Time {
	if o == nil || IsNil(o.LastModifiedDate) {
		var ret time.Time
		return ret
	}
	return o.LastModifiedDate.Time
}

// GetLastModifiedDateOk returns a tuple with the LastModifiedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryMetadata) GetLastModifiedDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastModifiedDate) {
		return nil, false
	}
	return &o.LastModifiedDate.Time, true
}

// HasLastModifiedDate returns a boolean if a field has been set.
func (o *RepositoryMetadata) HasLastModifiedDate() bool {
	if o != nil && !IsNil(o.LastModifiedDate) {
		return true
	}

	return false
}

// SetLastModifiedDate gets a reference to the given time.Time and assigns it to the LastModifiedDate field.
func (o *RepositoryMetadata) SetLastModifiedDate(v time.Time) {
	o.LastModifiedDate = &IonosTime{v}
}

// GetLastModifiedBy returns the LastModifiedBy field value if set, zero value otherwise.
func (o *RepositoryMetadata) GetLastModifiedBy() string {
	if o == nil || IsNil(o.LastModifiedBy) {
		var ret string
		return ret
	}
	return *o.LastModifiedBy
}

// GetLastModifiedByOk returns a tuple with the LastModifiedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryMetadata) GetLastModifiedByOk() (*string, bool) {
	if o == nil || IsNil(o.LastModifiedBy) {
		return nil, false
	}
	return o.LastModifiedBy, true
}

// HasLastModifiedBy returns a boolean if a field has been set.
func (o *RepositoryMetadata) HasLastModifiedBy() bool {
	if o != nil && !IsNil(o.LastModifiedBy) {
		return true
	}

	return false
}

// SetLastModifiedBy gets a reference to the given string and assigns it to the LastModifiedBy field.
func (o *RepositoryMetadata) SetLastModifiedBy(v string) {
	o.LastModifiedBy = &v
}

// GetLastModifiedByUserId returns the LastModifiedByUserId field value if set, zero value otherwise.
func (o *RepositoryMetadata) GetLastModifiedByUserId() string {
	if o == nil || IsNil(o.LastModifiedByUserId) {
		var ret string
		return ret
	}
	return *o.LastModifiedByUserId
}

// GetLastModifiedByUserIdOk returns a tuple with the LastModifiedByUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryMetadata) GetLastModifiedByUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.LastModifiedByUserId) {
		return nil, false
	}
	return o.LastModifiedByUserId, true
}

// HasLastModifiedByUserId returns a boolean if a field has been set.
func (o *RepositoryMetadata) HasLastModifiedByUserId() bool {
	if o != nil && !IsNil(o.LastModifiedByUserId) {
		return true
	}

	return false
}

// SetLastModifiedByUserId gets a reference to the given string and assigns it to the LastModifiedByUserId field.
func (o *RepositoryMetadata) SetLastModifiedByUserId(v string) {
	o.LastModifiedByUserId = &v
}

// GetResourceURN returns the ResourceURN field value if set, zero value otherwise.
func (o *RepositoryMetadata) GetResourceURN() string {
	if o == nil || IsNil(o.ResourceURN) {
		var ret string
		return ret
	}
	return *o.ResourceURN
}

// GetResourceURNOk returns a tuple with the ResourceURN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryMetadata) GetResourceURNOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceURN) {
		return nil, false
	}
	return o.ResourceURN, true
}

// HasResourceURN returns a boolean if a field has been set.
func (o *RepositoryMetadata) HasResourceURN() bool {
	if o != nil && !IsNil(o.ResourceURN) {
		return true
	}

	return false
}

// SetResourceURN gets a reference to the given string and assigns it to the ResourceURN field.
func (o *RepositoryMetadata) SetResourceURN(v string) {
	o.ResourceURN = &v
}

// GetArtifactCount returns the ArtifactCount field value
func (o *RepositoryMetadata) GetArtifactCount() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ArtifactCount
}

// GetArtifactCountOk returns a tuple with the ArtifactCount field value
// and a boolean to check if the value has been set.
func (o *RepositoryMetadata) GetArtifactCountOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ArtifactCount, true
}

// SetArtifactCount sets field value
func (o *RepositoryMetadata) SetArtifactCount(v int64) {
	o.ArtifactCount = v
}

// GetPullCount returns the PullCount field value
func (o *RepositoryMetadata) GetPullCount() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.PullCount
}

// GetPullCountOk returns a tuple with the PullCount field value
// and a boolean to check if the value has been set.
func (o *RepositoryMetadata) GetPullCountOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PullCount, true
}

// SetPullCount sets field value
func (o *RepositoryMetadata) SetPullCount(v int64) {
	o.PullCount = v
}

// GetPushCount returns the PushCount field value
func (o *RepositoryMetadata) GetPushCount() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.PushCount
}

// GetPushCountOk returns a tuple with the PushCount field value
// and a boolean to check if the value has been set.
func (o *RepositoryMetadata) GetPushCountOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PushCount, true
}

// SetPushCount sets field value
func (o *RepositoryMetadata) SetPushCount(v int64) {
	o.PushCount = v
}

// GetLastPulledAt returns the LastPulledAt field value if set, zero value otherwise.
func (o *RepositoryMetadata) GetLastPulledAt() time.Time {
	if o == nil || IsNil(o.LastPulledAt) {
		var ret time.Time
		return ret
	}
	return o.LastPulledAt.Time
}

// GetLastPulledAtOk returns a tuple with the LastPulledAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryMetadata) GetLastPulledAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastPulledAt) {
		return nil, false
	}
	return &o.LastPulledAt.Time, true
}

// HasLastPulledAt returns a boolean if a field has been set.
func (o *RepositoryMetadata) HasLastPulledAt() bool {
	if o != nil && !IsNil(o.LastPulledAt) {
		return true
	}

	return false
}

// SetLastPulledAt gets a reference to the given time.Time and assigns it to the LastPulledAt field.
func (o *RepositoryMetadata) SetLastPulledAt(v time.Time) {
	o.LastPulledAt = &IonosTime{v}
}

// GetLastPushedAt returns the LastPushedAt field value if set, zero value otherwise.
func (o *RepositoryMetadata) GetLastPushedAt() time.Time {
	if o == nil || IsNil(o.LastPushedAt) {
		var ret time.Time
		return ret
	}
	return o.LastPushedAt.Time
}

// GetLastPushedAtOk returns a tuple with the LastPushedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryMetadata) GetLastPushedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastPushedAt) {
		return nil, false
	}
	return &o.LastPushedAt.Time, true
}

// HasLastPushedAt returns a boolean if a field has been set.
func (o *RepositoryMetadata) HasLastPushedAt() bool {
	if o != nil && !IsNil(o.LastPushedAt) {
		return true
	}

	return false
}

// SetLastPushedAt gets a reference to the given time.Time and assigns it to the LastPushedAt field.
func (o *RepositoryMetadata) SetLastPushedAt(v time.Time) {
	o.LastPushedAt = &IonosTime{v}
}

// GetLastSeverity returns the LastSeverity field value if set, zero value otherwise.
func (o *RepositoryMetadata) GetLastSeverity() string {
	if o == nil || IsNil(o.LastSeverity) {
		var ret string
		return ret
	}
	return *o.LastSeverity
}

// GetLastSeverityOk returns a tuple with the LastSeverity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryMetadata) GetLastSeverityOk() (*string, bool) {
	if o == nil || IsNil(o.LastSeverity) {
		return nil, false
	}
	return o.LastSeverity, true
}

// HasLastSeverity returns a boolean if a field has been set.
func (o *RepositoryMetadata) HasLastSeverity() bool {
	if o != nil && !IsNil(o.LastSeverity) {
		return true
	}

	return false
}

// SetLastSeverity gets a reference to the given string and assigns it to the LastSeverity field.
func (o *RepositoryMetadata) SetLastSeverity(v string) {
	o.LastSeverity = &v
}

func (o RepositoryMetadata) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RepositoryMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatedDate) {
		toSerialize["createdDate"] = o.CreatedDate
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.CreatedByUserId) {
		toSerialize["createdByUserId"] = o.CreatedByUserId
	}
	if !IsNil(o.LastModifiedDate) {
		toSerialize["lastModifiedDate"] = o.LastModifiedDate
	}
	if !IsNil(o.LastModifiedBy) {
		toSerialize["lastModifiedBy"] = o.LastModifiedBy
	}
	if !IsNil(o.LastModifiedByUserId) {
		toSerialize["lastModifiedByUserId"] = o.LastModifiedByUserId
	}
	if !IsNil(o.ResourceURN) {
		toSerialize["resourceURN"] = o.ResourceURN
	}
	toSerialize["artifactCount"] = o.ArtifactCount
	toSerialize["pullCount"] = o.PullCount
	toSerialize["pushCount"] = o.PushCount
	if !IsNil(o.LastPulledAt) {
		toSerialize["lastPulledAt"] = o.LastPulledAt
	}
	if !IsNil(o.LastPushedAt) {
		toSerialize["lastPushedAt"] = o.LastPushedAt
	}
	if !IsNil(o.LastSeverity) {
		toSerialize["lastSeverity"] = o.LastSeverity
	}
	return toSerialize, nil
}

type NullableRepositoryMetadata struct {
	value *RepositoryMetadata
	isSet bool
}

func (v NullableRepositoryMetadata) Get() *RepositoryMetadata {
	return v.value
}

func (v *NullableRepositoryMetadata) Set(val *RepositoryMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableRepositoryMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableRepositoryMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRepositoryMetadata(val *RepositoryMetadata) *NullableRepositoryMetadata {
	return &NullableRepositoryMetadata{value: val, isSet: true}
}

func (v NullableRepositoryMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRepositoryMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
