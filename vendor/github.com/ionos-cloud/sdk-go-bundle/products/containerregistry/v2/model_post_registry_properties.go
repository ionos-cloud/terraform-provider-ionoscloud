/*
 * Container Registry service
 *
 * ## Overview Container Registry service enables IONOS clients to manage docker and OCI compliant registries for use by their managed Kubernetes clusters. Use a Container Registry to ensure you have a privately accessed registry to efficiently support image pulls. ## Changelog ### 1.1.0  - Added new endpoints for Repositories  - Added new endpoints for Artifacts  - Added new endpoints for Vulnerabilities  - Added registry vulnerabilityScanning feature ### 1.2.0  - Added registry `apiSubnetAllowList` ### 1.2.1  - Amended `apiSubnetAllowList` Regex
 *
 * API version: 1.2.1
 * Contact: support@cloud.ionos.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package containerregistry

import (
	"encoding/json"
)

// checks if the PostRegistryProperties type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostRegistryProperties{}

// PostRegistryProperties struct for PostRegistryProperties
type PostRegistryProperties struct {
	GarbageCollectionSchedule *WeeklySchedule   `json:"garbageCollectionSchedule,omitempty"`
	Location                  string            `json:"location"`
	Name                      string            `json:"name"`
	Features                  *RegistryFeatures `json:"features,omitempty"`
	// Subnets and IPs that are allowed to access the registry API, supports IPv4 and IPv6. Maximum of 25 items may be specified. If no CIDR is given /32 and /128 are assumed for IPv4 and IPv6 respectively. 0.0.0.0/0 can be used to deny all traffic. __Note__: If this list is empty or not set, there are no restrictions.
	ApiSubnetAllowList []string `json:"apiSubnetAllowList,omitempty"`
}

// NewPostRegistryProperties instantiates a new PostRegistryProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostRegistryProperties(location string, name string) *PostRegistryProperties {
	this := PostRegistryProperties{}

	this.Location = location
	this.Name = name

	return &this
}

// NewPostRegistryPropertiesWithDefaults instantiates a new PostRegistryProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostRegistryPropertiesWithDefaults() *PostRegistryProperties {
	this := PostRegistryProperties{}
	return &this
}

// GetGarbageCollectionSchedule returns the GarbageCollectionSchedule field value if set, zero value otherwise.
func (o *PostRegistryProperties) GetGarbageCollectionSchedule() WeeklySchedule {
	if o == nil || IsNil(o.GarbageCollectionSchedule) {
		var ret WeeklySchedule
		return ret
	}
	return *o.GarbageCollectionSchedule
}

// GetGarbageCollectionScheduleOk returns a tuple with the GarbageCollectionSchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostRegistryProperties) GetGarbageCollectionScheduleOk() (*WeeklySchedule, bool) {
	if o == nil || IsNil(o.GarbageCollectionSchedule) {
		return nil, false
	}
	return o.GarbageCollectionSchedule, true
}

// HasGarbageCollectionSchedule returns a boolean if a field has been set.
func (o *PostRegistryProperties) HasGarbageCollectionSchedule() bool {
	if o != nil && !IsNil(o.GarbageCollectionSchedule) {
		return true
	}

	return false
}

// SetGarbageCollectionSchedule gets a reference to the given WeeklySchedule and assigns it to the GarbageCollectionSchedule field.
func (o *PostRegistryProperties) SetGarbageCollectionSchedule(v WeeklySchedule) {
	o.GarbageCollectionSchedule = &v
}

// GetLocation returns the Location field value
func (o *PostRegistryProperties) GetLocation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Location
}

// GetLocationOk returns a tuple with the Location field value
// and a boolean to check if the value has been set.
func (o *PostRegistryProperties) GetLocationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Location, true
}

// SetLocation sets field value
func (o *PostRegistryProperties) SetLocation(v string) {
	o.Location = v
}

// GetName returns the Name field value
func (o *PostRegistryProperties) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PostRegistryProperties) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PostRegistryProperties) SetName(v string) {
	o.Name = v
}

// GetFeatures returns the Features field value if set, zero value otherwise.
func (o *PostRegistryProperties) GetFeatures() RegistryFeatures {
	if o == nil || IsNil(o.Features) {
		var ret RegistryFeatures
		return ret
	}
	return *o.Features
}

// GetFeaturesOk returns a tuple with the Features field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostRegistryProperties) GetFeaturesOk() (*RegistryFeatures, bool) {
	if o == nil || IsNil(o.Features) {
		return nil, false
	}
	return o.Features, true
}

// HasFeatures returns a boolean if a field has been set.
func (o *PostRegistryProperties) HasFeatures() bool {
	if o != nil && !IsNil(o.Features) {
		return true
	}

	return false
}

// SetFeatures gets a reference to the given RegistryFeatures and assigns it to the Features field.
func (o *PostRegistryProperties) SetFeatures(v RegistryFeatures) {
	o.Features = &v
}

// GetApiSubnetAllowList returns the ApiSubnetAllowList field value if set, zero value otherwise.
func (o *PostRegistryProperties) GetApiSubnetAllowList() []string {
	if o == nil || IsNil(o.ApiSubnetAllowList) {
		var ret []string
		return ret
	}
	return o.ApiSubnetAllowList
}

// GetApiSubnetAllowListOk returns a tuple with the ApiSubnetAllowList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostRegistryProperties) GetApiSubnetAllowListOk() ([]string, bool) {
	if o == nil || IsNil(o.ApiSubnetAllowList) {
		return nil, false
	}
	return o.ApiSubnetAllowList, true
}

// HasApiSubnetAllowList returns a boolean if a field has been set.
func (o *PostRegistryProperties) HasApiSubnetAllowList() bool {
	if o != nil && !IsNil(o.ApiSubnetAllowList) {
		return true
	}

	return false
}

// SetApiSubnetAllowList gets a reference to the given []string and assigns it to the ApiSubnetAllowList field.
func (o *PostRegistryProperties) SetApiSubnetAllowList(v []string) {
	o.ApiSubnetAllowList = v
}

func (o PostRegistryProperties) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GarbageCollectionSchedule) {
		toSerialize["garbageCollectionSchedule"] = o.GarbageCollectionSchedule
	}
	toSerialize["location"] = o.Location
	toSerialize["name"] = o.Name
	if !IsNil(o.Features) {
		toSerialize["features"] = o.Features
	}
	if !IsNil(o.ApiSubnetAllowList) {
		toSerialize["apiSubnetAllowList"] = o.ApiSubnetAllowList
	}
	return toSerialize, nil
}

type NullablePostRegistryProperties struct {
	value *PostRegistryProperties
	isSet bool
}

func (v NullablePostRegistryProperties) Get() *PostRegistryProperties {
	return v.value
}

func (v *NullablePostRegistryProperties) Set(val *PostRegistryProperties) {
	v.value = val
	v.isSet = true
}

func (v NullablePostRegistryProperties) IsSet() bool {
	return v.isSet
}

func (v *NullablePostRegistryProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostRegistryProperties(val *PostRegistryProperties) *NullablePostRegistryProperties {
	return &NullablePostRegistryProperties{value: val, isSet: true}
}

func (v NullablePostRegistryProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostRegistryProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
