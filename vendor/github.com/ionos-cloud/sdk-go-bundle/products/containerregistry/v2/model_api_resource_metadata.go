/*
 * Container Registry service
 *
 * ## Overview Container Registry service enables IONOS clients to manage docker and OCI compliant registries for use by their managed Kubernetes clusters. Use a Container Registry to ensure you have a privately accessed registry to efficiently support image pulls. ## Changelog ### 1.1.0  - Added new endpoints for Repositories  - Added new endpoints for Artifacts  - Added new endpoints for Vulnerabilities  - Added registry vulnerabilityScanning feature ### 1.2.0  - Added registry `apiSubnetAllowList` ### 1.2.1  - Amended `apiSubnetAllowList` Regex
 *
 * API version: 1.2.1
 * Contact: support@cloud.ionos.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package containerregistry

import (
	"encoding/json"

	"time"
)

// checks if the ApiResourceMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiResourceMetadata{}

// ApiResourceMetadata struct for ApiResourceMetadata
type ApiResourceMetadata struct {
	CreatedBy            string     `json:"createdBy"`
	CreatedByUserId      string     `json:"createdByUserId"`
	CreatedDate          *IonosTime `json:"createdDate"`
	LastModifiedBy       *string    `json:"lastModifiedBy,omitempty"`
	LastModifiedByUserId *string    `json:"lastModifiedByUserId,omitempty"`
	LastModifiedDate     *IonosTime `json:"lastModifiedDate,omitempty"`
	State                string     `json:"state"`
}

// NewApiResourceMetadata instantiates a new ApiResourceMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiResourceMetadata(createdBy string, createdByUserId string, createdDate time.Time, state string) *ApiResourceMetadata {
	this := ApiResourceMetadata{}

	this.CreatedBy = createdBy
	this.CreatedByUserId = createdByUserId
	this.CreatedDate = &IonosTime{createdDate}
	this.State = state

	return &this
}

// NewApiResourceMetadataWithDefaults instantiates a new ApiResourceMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiResourceMetadataWithDefaults() *ApiResourceMetadata {
	this := ApiResourceMetadata{}
	return &this
}

// GetCreatedBy returns the CreatedBy field value
func (o *ApiResourceMetadata) GetCreatedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value
// and a boolean to check if the value has been set.
func (o *ApiResourceMetadata) GetCreatedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedBy, true
}

// SetCreatedBy sets field value
func (o *ApiResourceMetadata) SetCreatedBy(v string) {
	o.CreatedBy = v
}

// GetCreatedByUserId returns the CreatedByUserId field value
func (o *ApiResourceMetadata) GetCreatedByUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedByUserId
}

// GetCreatedByUserIdOk returns a tuple with the CreatedByUserId field value
// and a boolean to check if the value has been set.
func (o *ApiResourceMetadata) GetCreatedByUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedByUserId, true
}

// SetCreatedByUserId sets field value
func (o *ApiResourceMetadata) SetCreatedByUserId(v string) {
	o.CreatedByUserId = v
}

// GetCreatedDate returns the CreatedDate field value
func (o *ApiResourceMetadata) GetCreatedDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	if o.CreatedDate == nil {
		var ret time.Time
		return ret
	}
	return o.CreatedDate.Time
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value
// and a boolean to check if the value has been set.
func (o *ApiResourceMetadata) GetCreatedDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	if o.CreatedDate == nil {
		return nil, true
	}
	return &o.CreatedDate.Time, true
}

// SetCreatedDate sets field value
func (o *ApiResourceMetadata) SetCreatedDate(v time.Time) {
	o.CreatedDate = &IonosTime{v}
}

// GetLastModifiedBy returns the LastModifiedBy field value if set, zero value otherwise.
func (o *ApiResourceMetadata) GetLastModifiedBy() string {
	if o == nil || IsNil(o.LastModifiedBy) {
		var ret string
		return ret
	}
	return *o.LastModifiedBy
}

// GetLastModifiedByOk returns a tuple with the LastModifiedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiResourceMetadata) GetLastModifiedByOk() (*string, bool) {
	if o == nil || IsNil(o.LastModifiedBy) {
		return nil, false
	}
	return o.LastModifiedBy, true
}

// HasLastModifiedBy returns a boolean if a field has been set.
func (o *ApiResourceMetadata) HasLastModifiedBy() bool {
	if o != nil && !IsNil(o.LastModifiedBy) {
		return true
	}

	return false
}

// SetLastModifiedBy gets a reference to the given string and assigns it to the LastModifiedBy field.
func (o *ApiResourceMetadata) SetLastModifiedBy(v string) {
	o.LastModifiedBy = &v
}

// GetLastModifiedByUserId returns the LastModifiedByUserId field value if set, zero value otherwise.
func (o *ApiResourceMetadata) GetLastModifiedByUserId() string {
	if o == nil || IsNil(o.LastModifiedByUserId) {
		var ret string
		return ret
	}
	return *o.LastModifiedByUserId
}

// GetLastModifiedByUserIdOk returns a tuple with the LastModifiedByUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiResourceMetadata) GetLastModifiedByUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.LastModifiedByUserId) {
		return nil, false
	}
	return o.LastModifiedByUserId, true
}

// HasLastModifiedByUserId returns a boolean if a field has been set.
func (o *ApiResourceMetadata) HasLastModifiedByUserId() bool {
	if o != nil && !IsNil(o.LastModifiedByUserId) {
		return true
	}

	return false
}

// SetLastModifiedByUserId gets a reference to the given string and assigns it to the LastModifiedByUserId field.
func (o *ApiResourceMetadata) SetLastModifiedByUserId(v string) {
	o.LastModifiedByUserId = &v
}

// GetLastModifiedDate returns the LastModifiedDate field value if set, zero value otherwise.
func (o *ApiResourceMetadata) GetLastModifiedDate() time.Time {
	if o == nil || IsNil(o.LastModifiedDate) {
		var ret time.Time
		return ret
	}
	return o.LastModifiedDate.Time
}

// GetLastModifiedDateOk returns a tuple with the LastModifiedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiResourceMetadata) GetLastModifiedDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastModifiedDate) {
		return nil, false
	}
	return &o.LastModifiedDate.Time, true
}

// HasLastModifiedDate returns a boolean if a field has been set.
func (o *ApiResourceMetadata) HasLastModifiedDate() bool {
	if o != nil && !IsNil(o.LastModifiedDate) {
		return true
	}

	return false
}

// SetLastModifiedDate gets a reference to the given time.Time and assigns it to the LastModifiedDate field.
func (o *ApiResourceMetadata) SetLastModifiedDate(v time.Time) {
	o.LastModifiedDate = &IonosTime{v}
}

// GetState returns the State field value
func (o *ApiResourceMetadata) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *ApiResourceMetadata) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *ApiResourceMetadata) SetState(v string) {
	o.State = v
}

func (o ApiResourceMetadata) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiResourceMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["createdBy"] = o.CreatedBy
	toSerialize["createdByUserId"] = o.CreatedByUserId
	toSerialize["createdDate"] = o.CreatedDate
	if !IsNil(o.LastModifiedBy) {
		toSerialize["lastModifiedBy"] = o.LastModifiedBy
	}
	if !IsNil(o.LastModifiedByUserId) {
		toSerialize["lastModifiedByUserId"] = o.LastModifiedByUserId
	}
	if !IsNil(o.LastModifiedDate) {
		toSerialize["lastModifiedDate"] = o.LastModifiedDate
	}
	toSerialize["state"] = o.State
	return toSerialize, nil
}

type NullableApiResourceMetadata struct {
	value *ApiResourceMetadata
	isSet bool
}

func (v NullableApiResourceMetadata) Get() *ApiResourceMetadata {
	return v.value
}

func (v *NullableApiResourceMetadata) Set(val *ApiResourceMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableApiResourceMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableApiResourceMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiResourceMetadata(val *ApiResourceMetadata) *NullableApiResourceMetadata {
	return &NullableApiResourceMetadata{value: val, isSet: true}
}

func (v NullableApiResourceMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiResourceMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
