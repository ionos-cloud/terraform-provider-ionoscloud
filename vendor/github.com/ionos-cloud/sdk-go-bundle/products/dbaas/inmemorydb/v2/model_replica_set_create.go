/*
 * In-Memory DB API
 *
 * API description for the IONOS In-Memory DB
 *
 * API version: 1.0.0
 * Contact: support@cloud.ionos.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package inmemorydb

import (
	"encoding/json"
)

// checks if the ReplicaSetCreate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReplicaSetCreate{}

// ReplicaSetCreate struct for ReplicaSetCreate
type ReplicaSetCreate struct {
	// Metadata
	Metadata   map[string]interface{} `json:"metadata,omitempty"`
	Properties ReplicaSet             `json:"properties"`
}

// NewReplicaSetCreate instantiates a new ReplicaSetCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReplicaSetCreate(properties ReplicaSet) *ReplicaSetCreate {
	this := ReplicaSetCreate{}

	this.Properties = properties

	return &this
}

// NewReplicaSetCreateWithDefaults instantiates a new ReplicaSetCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReplicaSetCreateWithDefaults() *ReplicaSetCreate {
	this := ReplicaSetCreate{}
	return &this
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *ReplicaSetCreate) GetMetadata() map[string]interface{} {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicaSetCreate) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *ReplicaSetCreate) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *ReplicaSetCreate) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

// GetProperties returns the Properties field value
func (o *ReplicaSetCreate) GetProperties() ReplicaSet {
	if o == nil {
		var ret ReplicaSet
		return ret
	}

	return o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value
// and a boolean to check if the value has been set.
func (o *ReplicaSetCreate) GetPropertiesOk() (*ReplicaSet, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Properties, true
}

// SetProperties sets field value
func (o *ReplicaSetCreate) SetProperties(v ReplicaSet) {
	o.Properties = v
}

func (o ReplicaSetCreate) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReplicaSetCreate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	toSerialize["properties"] = o.Properties
	return toSerialize, nil
}

type NullableReplicaSetCreate struct {
	value *ReplicaSetCreate
	isSet bool
}

func (v NullableReplicaSetCreate) Get() *ReplicaSetCreate {
	return v.value
}

func (v *NullableReplicaSetCreate) Set(val *ReplicaSetCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableReplicaSetCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableReplicaSetCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReplicaSetCreate(val *ReplicaSetCreate) *NullableReplicaSetCreate {
	return &NullableReplicaSetCreate{value: val, isSet: true}
}

func (v NullableReplicaSetCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReplicaSetCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
