/*
 * In-Memory DB API
 *
 * API description for the IONOS In-Memory DB
 *
 * API version: 1.0.0
 * Contact: support@cloud.ionos.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package inmemorydb

import (
	"encoding/json"
)

// checks if the Restore type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Restore{}

// Restore A point in time snapshot of a In-Memory DB replica set.
type Restore struct {
	// The ID of the replica set the restore was applied on.
	ReplicasetId string `json:"replicasetId"`
	// The human readable name of your snapshot.
	DisplayName *string `json:"displayName,omitempty"`
	// A description of the snapshot.
	Description *string `json:"description,omitempty"`
}

// NewRestore instantiates a new Restore object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestore(replicasetId string) *Restore {
	this := Restore{}

	this.ReplicasetId = replicasetId

	return &this
}

// NewRestoreWithDefaults instantiates a new Restore object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestoreWithDefaults() *Restore {
	this := Restore{}
	return &this
}

// GetReplicasetId returns the ReplicasetId field value
func (o *Restore) GetReplicasetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReplicasetId
}

// GetReplicasetIdOk returns a tuple with the ReplicasetId field value
// and a boolean to check if the value has been set.
func (o *Restore) GetReplicasetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReplicasetId, true
}

// SetReplicasetId sets field value
func (o *Restore) SetReplicasetId(v string) {
	o.ReplicasetId = v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *Restore) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Restore) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *Restore) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *Restore) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Restore) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Restore) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Restore) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Restore) SetDescription(v string) {
	o.Description = &v
}

func (o Restore) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Restore) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["replicasetId"] = o.ReplicasetId
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return toSerialize, nil
}

type NullableRestore struct {
	value *Restore
	isSet bool
}

func (v NullableRestore) Get() *Restore {
	return v.value
}

func (v *NullableRestore) Set(val *Restore) {
	v.value = val
	v.isSet = true
}

func (v NullableRestore) IsSet() bool {
	return v.isSet
}

func (v *NullableRestore) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestore(val *Restore) *NullableRestore {
	return &NullableRestore{value: val, isSet: true}
}

func (v NullableRestore) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestore) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
