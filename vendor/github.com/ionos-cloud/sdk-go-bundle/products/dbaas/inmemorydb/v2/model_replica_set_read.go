/*
 * In-Memory DB API
 *
 * API description for the IONOS In-Memory DB
 *
 * API version: 1.0.0
 * Contact: support@cloud.ionos.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package inmemorydb

import (
	"encoding/json"
)

// checks if the ReplicaSetRead type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReplicaSetRead{}

// ReplicaSetRead struct for ReplicaSetRead
type ReplicaSetRead struct {
	// The ID (UUID) of the ReplicaSet.
	Id string `json:"id"`
	// The type of the resource.
	Type string `json:"type"`
	// The URL of the ReplicaSet.
	Href       string             `json:"href"`
	Metadata   ReplicaSetMetadata `json:"metadata"`
	Properties ReplicaSet         `json:"properties"`
}

// NewReplicaSetRead instantiates a new ReplicaSetRead object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReplicaSetRead(id string, type_ string, href string, metadata ReplicaSetMetadata, properties ReplicaSet) *ReplicaSetRead {
	this := ReplicaSetRead{}

	this.Id = id
	this.Type = type_
	this.Href = href
	this.Metadata = metadata
	this.Properties = properties

	return &this
}

// NewReplicaSetReadWithDefaults instantiates a new ReplicaSetRead object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReplicaSetReadWithDefaults() *ReplicaSetRead {
	this := ReplicaSetRead{}
	return &this
}

// GetId returns the Id field value
func (o *ReplicaSetRead) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ReplicaSetRead) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ReplicaSetRead) SetId(v string) {
	o.Id = v
}

// GetType returns the Type field value
func (o *ReplicaSetRead) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ReplicaSetRead) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ReplicaSetRead) SetType(v string) {
	o.Type = v
}

// GetHref returns the Href field value
func (o *ReplicaSetRead) GetHref() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Href
}

// GetHrefOk returns a tuple with the Href field value
// and a boolean to check if the value has been set.
func (o *ReplicaSetRead) GetHrefOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Href, true
}

// SetHref sets field value
func (o *ReplicaSetRead) SetHref(v string) {
	o.Href = v
}

// GetMetadata returns the Metadata field value
func (o *ReplicaSetRead) GetMetadata() ReplicaSetMetadata {
	if o == nil {
		var ret ReplicaSetMetadata
		return ret
	}

	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value
// and a boolean to check if the value has been set.
func (o *ReplicaSetRead) GetMetadataOk() (*ReplicaSetMetadata, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Metadata, true
}

// SetMetadata sets field value
func (o *ReplicaSetRead) SetMetadata(v ReplicaSetMetadata) {
	o.Metadata = v
}

// GetProperties returns the Properties field value
func (o *ReplicaSetRead) GetProperties() ReplicaSet {
	if o == nil {
		var ret ReplicaSet
		return ret
	}

	return o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value
// and a boolean to check if the value has been set.
func (o *ReplicaSetRead) GetPropertiesOk() (*ReplicaSet, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Properties, true
}

// SetProperties sets field value
func (o *ReplicaSetRead) SetProperties(v ReplicaSet) {
	o.Properties = v
}

func (o ReplicaSetRead) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReplicaSetRead) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["type"] = o.Type
	toSerialize["href"] = o.Href
	toSerialize["metadata"] = o.Metadata
	toSerialize["properties"] = o.Properties
	return toSerialize, nil
}

type NullableReplicaSetRead struct {
	value *ReplicaSetRead
	isSet bool
}

func (v NullableReplicaSetRead) Get() *ReplicaSetRead {
	return v.value
}

func (v *NullableReplicaSetRead) Set(val *ReplicaSetRead) {
	v.value = val
	v.isSet = true
}

func (v NullableReplicaSetRead) IsSet() bool {
	return v.isSet
}

func (v *NullableReplicaSetRead) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReplicaSetRead(val *ReplicaSetRead) *NullableReplicaSetRead {
	return &NullableReplicaSetRead{value: val, isSet: true}
}

func (v NullableReplicaSetRead) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReplicaSetRead) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
