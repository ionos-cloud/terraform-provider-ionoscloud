/*
 * IONOS DBaaS PostgreSQL REST API
 *
 * An enterprise-grade Database is provided as a Service (DBaaS) solution that can be managed through a browser-based \"Data Center Designer\" (DCD) tool or via an easy to use API.  The API allows you to create additional PostgreSQL database clusters or modify existing ones. It is designed to allow users to leverage the same power and flexibility found within the DCD visual tool. Both tools are consistent with their concepts and lend well to making the experience smooth and intuitive.
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psql

import (
	"encoding/json"
)

// checks if the PatchClusterProperties type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchClusterProperties{}

// PatchClusterProperties Properties of the payload to change a cluster.
type PatchClusterProperties struct {
	// The number of CPU cores per instance.
	Cores *int32 `json:"cores,omitempty"`
	// The amount of memory per instance in megabytes. Has to be a multiple of 1024.
	Ram *int32 `json:"ram,omitempty"`
	// The amount of storage per instance in megabytes.
	StorageSize *int32       `json:"storageSize,omitempty"`
	Connections []Connection `json:"connections"`
	// The friendly name of your cluster.
	DisplayName       *string            `json:"displayName,omitempty"`
	MaintenanceWindow *MaintenanceWindow `json:"maintenanceWindow,omitempty"`
	// The PostgreSQL version of your cluster.
	PostgresVersion *string `json:"postgresVersion,omitempty"`
	// The total number of instances in the cluster (one master and n-1 standbys).
	Instances        *int32            `json:"instances,omitempty"`
	ConnectionPooler *ConnectionPooler `json:"connectionPooler,omitempty"`
}

// NewPatchClusterProperties instantiates a new PatchClusterProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchClusterProperties(connections []Connection) *PatchClusterProperties {
	this := PatchClusterProperties{}

	this.Connections = connections

	return &this
}

// NewPatchClusterPropertiesWithDefaults instantiates a new PatchClusterProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchClusterPropertiesWithDefaults() *PatchClusterProperties {
	this := PatchClusterProperties{}
	return &this
}

// GetCores returns the Cores field value if set, zero value otherwise.
func (o *PatchClusterProperties) GetCores() int32 {
	if o == nil || IsNil(o.Cores) {
		var ret int32
		return ret
	}
	return *o.Cores
}

// GetCoresOk returns a tuple with the Cores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchClusterProperties) GetCoresOk() (*int32, bool) {
	if o == nil || IsNil(o.Cores) {
		return nil, false
	}
	return o.Cores, true
}

// HasCores returns a boolean if a field has been set.
func (o *PatchClusterProperties) HasCores() bool {
	if o != nil && !IsNil(o.Cores) {
		return true
	}

	return false
}

// SetCores gets a reference to the given int32 and assigns it to the Cores field.
func (o *PatchClusterProperties) SetCores(v int32) {
	o.Cores = &v
}

// GetRam returns the Ram field value if set, zero value otherwise.
func (o *PatchClusterProperties) GetRam() int32 {
	if o == nil || IsNil(o.Ram) {
		var ret int32
		return ret
	}
	return *o.Ram
}

// GetRamOk returns a tuple with the Ram field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchClusterProperties) GetRamOk() (*int32, bool) {
	if o == nil || IsNil(o.Ram) {
		return nil, false
	}
	return o.Ram, true
}

// HasRam returns a boolean if a field has been set.
func (o *PatchClusterProperties) HasRam() bool {
	if o != nil && !IsNil(o.Ram) {
		return true
	}

	return false
}

// SetRam gets a reference to the given int32 and assigns it to the Ram field.
func (o *PatchClusterProperties) SetRam(v int32) {
	o.Ram = &v
}

// GetStorageSize returns the StorageSize field value if set, zero value otherwise.
func (o *PatchClusterProperties) GetStorageSize() int32 {
	if o == nil || IsNil(o.StorageSize) {
		var ret int32
		return ret
	}
	return *o.StorageSize
}

// GetStorageSizeOk returns a tuple with the StorageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchClusterProperties) GetStorageSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.StorageSize) {
		return nil, false
	}
	return o.StorageSize, true
}

// HasStorageSize returns a boolean if a field has been set.
func (o *PatchClusterProperties) HasStorageSize() bool {
	if o != nil && !IsNil(o.StorageSize) {
		return true
	}

	return false
}

// SetStorageSize gets a reference to the given int32 and assigns it to the StorageSize field.
func (o *PatchClusterProperties) SetStorageSize(v int32) {
	o.StorageSize = &v
}

// GetConnections returns the Connections field value
func (o *PatchClusterProperties) GetConnections() []Connection {
	if o == nil {
		var ret []Connection
		return ret
	}

	return o.Connections
}

// GetConnectionsOk returns a tuple with the Connections field value
// and a boolean to check if the value has been set.
func (o *PatchClusterProperties) GetConnectionsOk() ([]Connection, bool) {
	if o == nil {
		return nil, false
	}
	return o.Connections, true
}

// SetConnections sets field value
func (o *PatchClusterProperties) SetConnections(v []Connection) {
	o.Connections = v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *PatchClusterProperties) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchClusterProperties) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *PatchClusterProperties) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *PatchClusterProperties) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetMaintenanceWindow returns the MaintenanceWindow field value if set, zero value otherwise.
func (o *PatchClusterProperties) GetMaintenanceWindow() MaintenanceWindow {
	if o == nil || IsNil(o.MaintenanceWindow) {
		var ret MaintenanceWindow
		return ret
	}
	return *o.MaintenanceWindow
}

// GetMaintenanceWindowOk returns a tuple with the MaintenanceWindow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchClusterProperties) GetMaintenanceWindowOk() (*MaintenanceWindow, bool) {
	if o == nil || IsNil(o.MaintenanceWindow) {
		return nil, false
	}
	return o.MaintenanceWindow, true
}

// HasMaintenanceWindow returns a boolean if a field has been set.
func (o *PatchClusterProperties) HasMaintenanceWindow() bool {
	if o != nil && !IsNil(o.MaintenanceWindow) {
		return true
	}

	return false
}

// SetMaintenanceWindow gets a reference to the given MaintenanceWindow and assigns it to the MaintenanceWindow field.
func (o *PatchClusterProperties) SetMaintenanceWindow(v MaintenanceWindow) {
	o.MaintenanceWindow = &v
}

// GetPostgresVersion returns the PostgresVersion field value if set, zero value otherwise.
func (o *PatchClusterProperties) GetPostgresVersion() string {
	if o == nil || IsNil(o.PostgresVersion) {
		var ret string
		return ret
	}
	return *o.PostgresVersion
}

// GetPostgresVersionOk returns a tuple with the PostgresVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchClusterProperties) GetPostgresVersionOk() (*string, bool) {
	if o == nil || IsNil(o.PostgresVersion) {
		return nil, false
	}
	return o.PostgresVersion, true
}

// HasPostgresVersion returns a boolean if a field has been set.
func (o *PatchClusterProperties) HasPostgresVersion() bool {
	if o != nil && !IsNil(o.PostgresVersion) {
		return true
	}

	return false
}

// SetPostgresVersion gets a reference to the given string and assigns it to the PostgresVersion field.
func (o *PatchClusterProperties) SetPostgresVersion(v string) {
	o.PostgresVersion = &v
}

// GetInstances returns the Instances field value if set, zero value otherwise.
func (o *PatchClusterProperties) GetInstances() int32 {
	if o == nil || IsNil(o.Instances) {
		var ret int32
		return ret
	}
	return *o.Instances
}

// GetInstancesOk returns a tuple with the Instances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchClusterProperties) GetInstancesOk() (*int32, bool) {
	if o == nil || IsNil(o.Instances) {
		return nil, false
	}
	return o.Instances, true
}

// HasInstances returns a boolean if a field has been set.
func (o *PatchClusterProperties) HasInstances() bool {
	if o != nil && !IsNil(o.Instances) {
		return true
	}

	return false
}

// SetInstances gets a reference to the given int32 and assigns it to the Instances field.
func (o *PatchClusterProperties) SetInstances(v int32) {
	o.Instances = &v
}

// GetConnectionPooler returns the ConnectionPooler field value if set, zero value otherwise.
func (o *PatchClusterProperties) GetConnectionPooler() ConnectionPooler {
	if o == nil || IsNil(o.ConnectionPooler) {
		var ret ConnectionPooler
		return ret
	}
	return *o.ConnectionPooler
}

// GetConnectionPoolerOk returns a tuple with the ConnectionPooler field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchClusterProperties) GetConnectionPoolerOk() (*ConnectionPooler, bool) {
	if o == nil || IsNil(o.ConnectionPooler) {
		return nil, false
	}
	return o.ConnectionPooler, true
}

// HasConnectionPooler returns a boolean if a field has been set.
func (o *PatchClusterProperties) HasConnectionPooler() bool {
	if o != nil && !IsNil(o.ConnectionPooler) {
		return true
	}

	return false
}

// SetConnectionPooler gets a reference to the given ConnectionPooler and assigns it to the ConnectionPooler field.
func (o *PatchClusterProperties) SetConnectionPooler(v ConnectionPooler) {
	o.ConnectionPooler = &v
}

func (o PatchClusterProperties) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchClusterProperties) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cores) {
		toSerialize["cores"] = o.Cores
	}
	if !IsNil(o.Ram) {
		toSerialize["ram"] = o.Ram
	}
	if !IsNil(o.StorageSize) {
		toSerialize["storageSize"] = o.StorageSize
	}
	toSerialize["connections"] = o.Connections
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.MaintenanceWindow) {
		toSerialize["maintenanceWindow"] = o.MaintenanceWindow
	}
	if !IsNil(o.PostgresVersion) {
		toSerialize["postgresVersion"] = o.PostgresVersion
	}
	if !IsNil(o.Instances) {
		toSerialize["instances"] = o.Instances
	}
	if !IsNil(o.ConnectionPooler) {
		toSerialize["connectionPooler"] = o.ConnectionPooler
	}
	return toSerialize, nil
}

type NullablePatchClusterProperties struct {
	value *PatchClusterProperties
	isSet bool
}

func (v NullablePatchClusterProperties) Get() *PatchClusterProperties {
	return v.value
}

func (v *NullablePatchClusterProperties) Set(val *PatchClusterProperties) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchClusterProperties) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchClusterProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchClusterProperties(val *PatchClusterProperties) *NullablePatchClusterProperties {
	return &NullablePatchClusterProperties{value: val, isSet: true}
}

func (v NullablePatchClusterProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchClusterProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
