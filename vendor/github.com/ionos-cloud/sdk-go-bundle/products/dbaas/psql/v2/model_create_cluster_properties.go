/*
 * IONOS DBaaS PostgreSQL REST API
 *
 * An enterprise-grade Database is provided as a Service (DBaaS) solution that can be managed through a browser-based \"Data Center Designer\" (DCD) tool or via an easy to use API.  The API allows you to create additional PostgreSQL database clusters or modify existing ones. It is designed to allow users to leverage the same power and flexibility found within the DCD visual tool. Both tools are consistent with their concepts and lend well to making the experience smooth and intuitive.
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package psql

import (
	"encoding/json"
)

// checks if the CreateClusterProperties type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateClusterProperties{}

// CreateClusterProperties Properties with all data needed to create a new PostgreSQL cluster.
type CreateClusterProperties struct {
	// The PostgreSQL version of your cluster.
	PostgresVersion string `json:"postgresVersion"`
	// The total number of instances in the cluster (one master and n-1 standbys).
	Instances int32 `json:"instances"`
	// The number of CPU cores per instance.
	Cores int32 `json:"cores"`
	// The amount of memory per instance in megabytes. Has to be a multiple of 1024.
	Ram int32 `json:"ram"`
	// The amount of storage per instance in megabytes.
	StorageSize int32        `json:"storageSize"`
	StorageType StorageType  `json:"storageType"`
	Connections []Connection `json:"connections"`
	// The physical location where the cluster will be created. This will be where all of your instances live. Property cannot be modified after datacenter creation.
	Location string `json:"location"`
	// The S3 location where the backups will be stored.
	BackupLocation *string `json:"backupLocation,omitempty"`
	// The friendly name of your cluster.
	DisplayName         string                `json:"displayName"`
	MaintenanceWindow   *MaintenanceWindow    `json:"maintenanceWindow,omitempty"`
	Credentials         DBUser                `json:"credentials"`
	SynchronizationMode SynchronizationMode   `json:"synchronizationMode"`
	FromBackup          *CreateRestoreRequest `json:"fromBackup,omitempty"`
	ConnectionPooler    *ConnectionPooler     `json:"connectionPooler,omitempty"`
}

// NewCreateClusterProperties instantiates a new CreateClusterProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateClusterProperties(postgresVersion string, instances int32, cores int32, ram int32, storageSize int32, storageType StorageType, connections []Connection, location string, displayName string, credentials DBUser, synchronizationMode SynchronizationMode) *CreateClusterProperties {
	this := CreateClusterProperties{}

	this.PostgresVersion = postgresVersion
	this.Instances = instances
	this.Cores = cores
	this.Ram = ram
	this.StorageSize = storageSize
	this.StorageType = storageType
	this.Connections = connections
	this.Location = location
	this.DisplayName = displayName
	this.Credentials = credentials
	this.SynchronizationMode = synchronizationMode

	return &this
}

// NewCreateClusterPropertiesWithDefaults instantiates a new CreateClusterProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateClusterPropertiesWithDefaults() *CreateClusterProperties {
	this := CreateClusterProperties{}
	return &this
}

// GetPostgresVersion returns the PostgresVersion field value
func (o *CreateClusterProperties) GetPostgresVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PostgresVersion
}

// GetPostgresVersionOk returns a tuple with the PostgresVersion field value
// and a boolean to check if the value has been set.
func (o *CreateClusterProperties) GetPostgresVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PostgresVersion, true
}

// SetPostgresVersion sets field value
func (o *CreateClusterProperties) SetPostgresVersion(v string) {
	o.PostgresVersion = v
}

// GetInstances returns the Instances field value
func (o *CreateClusterProperties) GetInstances() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Instances
}

// GetInstancesOk returns a tuple with the Instances field value
// and a boolean to check if the value has been set.
func (o *CreateClusterProperties) GetInstancesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Instances, true
}

// SetInstances sets field value
func (o *CreateClusterProperties) SetInstances(v int32) {
	o.Instances = v
}

// GetCores returns the Cores field value
func (o *CreateClusterProperties) GetCores() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Cores
}

// GetCoresOk returns a tuple with the Cores field value
// and a boolean to check if the value has been set.
func (o *CreateClusterProperties) GetCoresOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cores, true
}

// SetCores sets field value
func (o *CreateClusterProperties) SetCores(v int32) {
	o.Cores = v
}

// GetRam returns the Ram field value
func (o *CreateClusterProperties) GetRam() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Ram
}

// GetRamOk returns a tuple with the Ram field value
// and a boolean to check if the value has been set.
func (o *CreateClusterProperties) GetRamOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ram, true
}

// SetRam sets field value
func (o *CreateClusterProperties) SetRam(v int32) {
	o.Ram = v
}

// GetStorageSize returns the StorageSize field value
func (o *CreateClusterProperties) GetStorageSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.StorageSize
}

// GetStorageSizeOk returns a tuple with the StorageSize field value
// and a boolean to check if the value has been set.
func (o *CreateClusterProperties) GetStorageSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StorageSize, true
}

// SetStorageSize sets field value
func (o *CreateClusterProperties) SetStorageSize(v int32) {
	o.StorageSize = v
}

// GetStorageType returns the StorageType field value
func (o *CreateClusterProperties) GetStorageType() StorageType {
	if o == nil {
		var ret StorageType
		return ret
	}

	return o.StorageType
}

// GetStorageTypeOk returns a tuple with the StorageType field value
// and a boolean to check if the value has been set.
func (o *CreateClusterProperties) GetStorageTypeOk() (*StorageType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StorageType, true
}

// SetStorageType sets field value
func (o *CreateClusterProperties) SetStorageType(v StorageType) {
	o.StorageType = v
}

// GetConnections returns the Connections field value
func (o *CreateClusterProperties) GetConnections() []Connection {
	if o == nil {
		var ret []Connection
		return ret
	}

	return o.Connections
}

// GetConnectionsOk returns a tuple with the Connections field value
// and a boolean to check if the value has been set.
func (o *CreateClusterProperties) GetConnectionsOk() ([]Connection, bool) {
	if o == nil {
		return nil, false
	}
	return o.Connections, true
}

// SetConnections sets field value
func (o *CreateClusterProperties) SetConnections(v []Connection) {
	o.Connections = v
}

// GetLocation returns the Location field value
func (o *CreateClusterProperties) GetLocation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Location
}

// GetLocationOk returns a tuple with the Location field value
// and a boolean to check if the value has been set.
func (o *CreateClusterProperties) GetLocationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Location, true
}

// SetLocation sets field value
func (o *CreateClusterProperties) SetLocation(v string) {
	o.Location = v
}

// GetBackupLocation returns the BackupLocation field value if set, zero value otherwise.
func (o *CreateClusterProperties) GetBackupLocation() string {
	if o == nil || IsNil(o.BackupLocation) {
		var ret string
		return ret
	}
	return *o.BackupLocation
}

// GetBackupLocationOk returns a tuple with the BackupLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateClusterProperties) GetBackupLocationOk() (*string, bool) {
	if o == nil || IsNil(o.BackupLocation) {
		return nil, false
	}
	return o.BackupLocation, true
}

// HasBackupLocation returns a boolean if a field has been set.
func (o *CreateClusterProperties) HasBackupLocation() bool {
	if o != nil && !IsNil(o.BackupLocation) {
		return true
	}

	return false
}

// SetBackupLocation gets a reference to the given string and assigns it to the BackupLocation field.
func (o *CreateClusterProperties) SetBackupLocation(v string) {
	o.BackupLocation = &v
}

// GetDisplayName returns the DisplayName field value
func (o *CreateClusterProperties) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *CreateClusterProperties) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *CreateClusterProperties) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetMaintenanceWindow returns the MaintenanceWindow field value if set, zero value otherwise.
func (o *CreateClusterProperties) GetMaintenanceWindow() MaintenanceWindow {
	if o == nil || IsNil(o.MaintenanceWindow) {
		var ret MaintenanceWindow
		return ret
	}
	return *o.MaintenanceWindow
}

// GetMaintenanceWindowOk returns a tuple with the MaintenanceWindow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateClusterProperties) GetMaintenanceWindowOk() (*MaintenanceWindow, bool) {
	if o == nil || IsNil(o.MaintenanceWindow) {
		return nil, false
	}
	return o.MaintenanceWindow, true
}

// HasMaintenanceWindow returns a boolean if a field has been set.
func (o *CreateClusterProperties) HasMaintenanceWindow() bool {
	if o != nil && !IsNil(o.MaintenanceWindow) {
		return true
	}

	return false
}

// SetMaintenanceWindow gets a reference to the given MaintenanceWindow and assigns it to the MaintenanceWindow field.
func (o *CreateClusterProperties) SetMaintenanceWindow(v MaintenanceWindow) {
	o.MaintenanceWindow = &v
}

// GetCredentials returns the Credentials field value
func (o *CreateClusterProperties) GetCredentials() DBUser {
	if o == nil {
		var ret DBUser
		return ret
	}

	return o.Credentials
}

// GetCredentialsOk returns a tuple with the Credentials field value
// and a boolean to check if the value has been set.
func (o *CreateClusterProperties) GetCredentialsOk() (*DBUser, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Credentials, true
}

// SetCredentials sets field value
func (o *CreateClusterProperties) SetCredentials(v DBUser) {
	o.Credentials = v
}

// GetSynchronizationMode returns the SynchronizationMode field value
func (o *CreateClusterProperties) GetSynchronizationMode() SynchronizationMode {
	if o == nil {
		var ret SynchronizationMode
		return ret
	}

	return o.SynchronizationMode
}

// GetSynchronizationModeOk returns a tuple with the SynchronizationMode field value
// and a boolean to check if the value has been set.
func (o *CreateClusterProperties) GetSynchronizationModeOk() (*SynchronizationMode, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SynchronizationMode, true
}

// SetSynchronizationMode sets field value
func (o *CreateClusterProperties) SetSynchronizationMode(v SynchronizationMode) {
	o.SynchronizationMode = v
}

// GetFromBackup returns the FromBackup field value if set, zero value otherwise.
func (o *CreateClusterProperties) GetFromBackup() CreateRestoreRequest {
	if o == nil || IsNil(o.FromBackup) {
		var ret CreateRestoreRequest
		return ret
	}
	return *o.FromBackup
}

// GetFromBackupOk returns a tuple with the FromBackup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateClusterProperties) GetFromBackupOk() (*CreateRestoreRequest, bool) {
	if o == nil || IsNil(o.FromBackup) {
		return nil, false
	}
	return o.FromBackup, true
}

// HasFromBackup returns a boolean if a field has been set.
func (o *CreateClusterProperties) HasFromBackup() bool {
	if o != nil && !IsNil(o.FromBackup) {
		return true
	}

	return false
}

// SetFromBackup gets a reference to the given CreateRestoreRequest and assigns it to the FromBackup field.
func (o *CreateClusterProperties) SetFromBackup(v CreateRestoreRequest) {
	o.FromBackup = &v
}

// GetConnectionPooler returns the ConnectionPooler field value if set, zero value otherwise.
func (o *CreateClusterProperties) GetConnectionPooler() ConnectionPooler {
	if o == nil || IsNil(o.ConnectionPooler) {
		var ret ConnectionPooler
		return ret
	}
	return *o.ConnectionPooler
}

// GetConnectionPoolerOk returns a tuple with the ConnectionPooler field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateClusterProperties) GetConnectionPoolerOk() (*ConnectionPooler, bool) {
	if o == nil || IsNil(o.ConnectionPooler) {
		return nil, false
	}
	return o.ConnectionPooler, true
}

// HasConnectionPooler returns a boolean if a field has been set.
func (o *CreateClusterProperties) HasConnectionPooler() bool {
	if o != nil && !IsNil(o.ConnectionPooler) {
		return true
	}

	return false
}

// SetConnectionPooler gets a reference to the given ConnectionPooler and assigns it to the ConnectionPooler field.
func (o *CreateClusterProperties) SetConnectionPooler(v ConnectionPooler) {
	o.ConnectionPooler = &v
}

func (o CreateClusterProperties) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateClusterProperties) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["postgresVersion"] = o.PostgresVersion
	toSerialize["instances"] = o.Instances
	toSerialize["cores"] = o.Cores
	toSerialize["ram"] = o.Ram
	toSerialize["storageSize"] = o.StorageSize
	toSerialize["storageType"] = o.StorageType
	toSerialize["connections"] = o.Connections
	toSerialize["location"] = o.Location
	if !IsNil(o.BackupLocation) {
		toSerialize["backupLocation"] = o.BackupLocation
	}
	toSerialize["displayName"] = o.DisplayName
	if !IsNil(o.MaintenanceWindow) {
		toSerialize["maintenanceWindow"] = o.MaintenanceWindow
	}
	toSerialize["credentials"] = o.Credentials
	toSerialize["synchronizationMode"] = o.SynchronizationMode
	if !IsNil(o.FromBackup) {
		toSerialize["fromBackup"] = o.FromBackup
	}
	if !IsNil(o.ConnectionPooler) {
		toSerialize["connectionPooler"] = o.ConnectionPooler
	}
	return toSerialize, nil
}

type NullableCreateClusterProperties struct {
	value *CreateClusterProperties
	isSet bool
}

func (v NullableCreateClusterProperties) Get() *CreateClusterProperties {
	return v.value
}

func (v *NullableCreateClusterProperties) Set(val *CreateClusterProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateClusterProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateClusterProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateClusterProperties(val *CreateClusterProperties) *NullableCreateClusterProperties {
	return &NullableCreateClusterProperties{value: val, isSet: true}
}

func (v NullableCreateClusterProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateClusterProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
