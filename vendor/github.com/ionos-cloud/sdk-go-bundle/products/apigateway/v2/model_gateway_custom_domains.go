/*
 * IONOS Cloud - API Gateway
 *
 * API Gateway is an application that acts as a \"front door\" for backend services and APIs, handling client requests and routing them to the appropriate backend.
 *
 * API version: 0.0.1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apigateway

import (
	"encoding/json"
)

// checks if the GatewayCustomDomains type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GatewayCustomDomains{}

// GatewayCustomDomains The custom domain that the API Gateway instance should listen on.
type GatewayCustomDomains struct {
	// The domain name of the distribution.
	Name *string `json:"name,omitempty"`
	// The ID of the certificate to use for the distribution.
	CertificateId *string `json:"certificateId,omitempty"`
}

// NewGatewayCustomDomains instantiates a new GatewayCustomDomains object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGatewayCustomDomains() *GatewayCustomDomains {
	this := GatewayCustomDomains{}

	return &this
}

// NewGatewayCustomDomainsWithDefaults instantiates a new GatewayCustomDomains object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGatewayCustomDomainsWithDefaults() *GatewayCustomDomains {
	this := GatewayCustomDomains{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GatewayCustomDomains) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayCustomDomains) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GatewayCustomDomains) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GatewayCustomDomains) SetName(v string) {
	o.Name = &v
}

// GetCertificateId returns the CertificateId field value if set, zero value otherwise.
func (o *GatewayCustomDomains) GetCertificateId() string {
	if o == nil || IsNil(o.CertificateId) {
		var ret string
		return ret
	}
	return *o.CertificateId
}

// GetCertificateIdOk returns a tuple with the CertificateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayCustomDomains) GetCertificateIdOk() (*string, bool) {
	if o == nil || IsNil(o.CertificateId) {
		return nil, false
	}
	return o.CertificateId, true
}

// HasCertificateId returns a boolean if a field has been set.
func (o *GatewayCustomDomains) HasCertificateId() bool {
	if o != nil && !IsNil(o.CertificateId) {
		return true
	}

	return false
}

// SetCertificateId gets a reference to the given string and assigns it to the CertificateId field.
func (o *GatewayCustomDomains) SetCertificateId(v string) {
	o.CertificateId = &v
}

func (o GatewayCustomDomains) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.CertificateId) {
		toSerialize["certificateId"] = o.CertificateId
	}
	return toSerialize, nil
}

type NullableGatewayCustomDomains struct {
	value *GatewayCustomDomains
	isSet bool
}

func (v NullableGatewayCustomDomains) Get() *GatewayCustomDomains {
	return v.value
}

func (v *NullableGatewayCustomDomains) Set(val *GatewayCustomDomains) {
	v.value = val
	v.isSet = true
}

func (v NullableGatewayCustomDomains) IsSet() bool {
	return v.isSet
}

func (v *NullableGatewayCustomDomains) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGatewayCustomDomains(val *GatewayCustomDomains) *NullableGatewayCustomDomains {
	return &NullableGatewayCustomDomains{value: val, isSet: true}
}

func (v NullableGatewayCustomDomains) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGatewayCustomDomains) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
