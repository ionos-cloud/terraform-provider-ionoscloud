/*
 * IONOS Object Storage API for user-owned buckets
 *
 * ## Overview The IONOS Object Storage API for user-owned buckets is a REST-based API that allows developers and applications to interact directly with IONOS' scalable storage solution, leveraging the S3 protocol for object storage operations. Its design ensures seamless compatibility with existing tools and libraries tailored for S3 systems.  ### API References - [Object Storage Management API Reference](https://api.ionos.com/docs/s3-management/v1/) for managing Access Keys - [Object Storage API Reference for contract-owned buckets](https://api.ionos.com/docs/s3-contract-owned-buckets/v2/) - Object Storage API Reference for user-owned buckets - current document  ### User documentation [IONOS Object Storage User Guide](https://docs.ionos.com/cloud/storage-and-backup/ionos-object-storage) * [Documentation on user-owned and contract-owned buckets](https://docs.ionos.com/cloud/managed-services/s3-object-storage/concepts/buckets) * [Documentation on S3 API Compatibility](https://docs.ionos.com/cloud/managed-services/s3-object-storage/concepts/s3-api-compatibility) * [S3 Tools](https://docs.ionos.com/cloud/managed-services/s3-object-storage/s3-tools)  ## Endpoints for user-owned buckets | Location | Region Name | Bucket Type | Endpoint | | --- | --- | --- | --- | | **Frankfurt, Germany** | **de** | User-owned | `https://s3.eu-central-1.ionoscloud.com`, <br/><br/>**s3 legacy endpoint:** `https://s3-de-central.profitbricks.com`  | | **Berlin, Germany** | **eu-central-2** | User-owned | `https://s3.eu-central-2.ionoscloud.com` | | **Logro√±o, Spain** | **eu-south-2** | User-owned | `https://s3.eu-south-2.ionoscloud.com` |  ## Changelog - **30.05.2024** Renaming to Storage Object API for user-owned buckets - **25.09.2023** Storage object operation names are now used for headlines. - **20.09.2023** Improved description for [HeadBucket](#tag/Basic-Operations/operation/HeadBucket) and [GetBucketLocation](#tag/Location/operation/GetBucketLocation). - **13.09.2023** Improved description for [Bucket Policy-related operations](#tag/Policy/operation/PutBucketPolicy). - **06.09.2023** Improved description for [Bucket ACL-related operations](#tag/ACL/operation/GetBucketAcl). - **30.08.2023** Improved description for [Object Lock-related operations](#tag/Object-Lock/operation/GetObjectLockConfiguration). - **24.07.2023** Improved description for [ListObjectsV2](#tag/Basic-Operations/operation/ListObjectsV2). - **17.07.2023** Improved description for [ListBuckets](#tag/Basic-Operations/operation/ListBuckets). - **07.07.2023** Improved description for [PutBucketReplication](#tag/Replication/operation/PutBucketReplication),   [GetBucketReplication](#tag/Replication/operation/GetBucketReplication), [DeleteBucketReplication](#tag/Replication/operation/DeleteBucketReplication). - **05.07.2023** Improved description for [PutBucketVersioning](#tag/Versioning/operation/PutBucketVersioning)   and [GetBucketVersioning](#tag/Versioning/operation/GetBucketVersioning). - **29.06.2023** Improved description for [PutBucketLifecycleConfiguration](#tag/Lifecycle/operation/PutBucketLifecycle). - **19.04.2023** Improved description on how to use the encryption with IONOS Object Storage managed (SSE-S3) and customer managed keys (SSE-C)   for [PutBucketEncryption](#tag/Encryption/operation/PutBucketEncryption) and [PutObject](#tag/Basic-Operations/operation/PutObject).
 *
 * API version: 2.0.15
 * Contact: support@cloud.ionos.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package userobjectstorage

import (
	"encoding/json"
)

// checks if the PutObjectLockConfigurationRequestObjectLockConfigurationRule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PutObjectLockConfigurationRequestObjectLockConfigurationRule{}

// PutObjectLockConfigurationRequestObjectLockConfigurationRule Specifies Object Lock rule for the specified object. Enable this rule when you apply `ObjectLockConfiguration` to a bucket. Bucket settings require both a mode and a period. Specify the period either in `Days` or `Years`, and not both at the same time.
type PutObjectLockConfigurationRequestObjectLockConfigurationRule struct {
	DefaultRetention *DefaultRetention `json:"DefaultRetention,omitempty"`
}

// NewPutObjectLockConfigurationRequestObjectLockConfigurationRule instantiates a new PutObjectLockConfigurationRequestObjectLockConfigurationRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPutObjectLockConfigurationRequestObjectLockConfigurationRule() *PutObjectLockConfigurationRequestObjectLockConfigurationRule {
	this := PutObjectLockConfigurationRequestObjectLockConfigurationRule{}

	return &this
}

// NewPutObjectLockConfigurationRequestObjectLockConfigurationRuleWithDefaults instantiates a new PutObjectLockConfigurationRequestObjectLockConfigurationRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPutObjectLockConfigurationRequestObjectLockConfigurationRuleWithDefaults() *PutObjectLockConfigurationRequestObjectLockConfigurationRule {
	this := PutObjectLockConfigurationRequestObjectLockConfigurationRule{}
	return &this
}

// GetDefaultRetention returns the DefaultRetention field value if set, zero value otherwise.
func (o *PutObjectLockConfigurationRequestObjectLockConfigurationRule) GetDefaultRetention() DefaultRetention {
	if o == nil || IsNil(o.DefaultRetention) {
		var ret DefaultRetention
		return ret
	}
	return *o.DefaultRetention
}

// GetDefaultRetentionOk returns a tuple with the DefaultRetention field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutObjectLockConfigurationRequestObjectLockConfigurationRule) GetDefaultRetentionOk() (*DefaultRetention, bool) {
	if o == nil || IsNil(o.DefaultRetention) {
		return nil, false
	}
	return o.DefaultRetention, true
}

// HasDefaultRetention returns a boolean if a field has been set.
func (o *PutObjectLockConfigurationRequestObjectLockConfigurationRule) HasDefaultRetention() bool {
	if o != nil && !IsNil(o.DefaultRetention) {
		return true
	}

	return false
}

// SetDefaultRetention gets a reference to the given DefaultRetention and assigns it to the DefaultRetention field.
func (o *PutObjectLockConfigurationRequestObjectLockConfigurationRule) SetDefaultRetention(v DefaultRetention) {
	o.DefaultRetention = &v
}

func (o PutObjectLockConfigurationRequestObjectLockConfigurationRule) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PutObjectLockConfigurationRequestObjectLockConfigurationRule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DefaultRetention) {
		toSerialize["DefaultRetention"] = o.DefaultRetention
	}
	return toSerialize, nil
}

type NullablePutObjectLockConfigurationRequestObjectLockConfigurationRule struct {
	value *PutObjectLockConfigurationRequestObjectLockConfigurationRule
	isSet bool
}

func (v NullablePutObjectLockConfigurationRequestObjectLockConfigurationRule) Get() *PutObjectLockConfigurationRequestObjectLockConfigurationRule {
	return v.value
}

func (v *NullablePutObjectLockConfigurationRequestObjectLockConfigurationRule) Set(val *PutObjectLockConfigurationRequestObjectLockConfigurationRule) {
	v.value = val
	v.isSet = true
}

func (v NullablePutObjectLockConfigurationRequestObjectLockConfigurationRule) IsSet() bool {
	return v.isSet
}

func (v *NullablePutObjectLockConfigurationRequestObjectLockConfigurationRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePutObjectLockConfigurationRequestObjectLockConfigurationRule(val *PutObjectLockConfigurationRequestObjectLockConfigurationRule) *NullablePutObjectLockConfigurationRequestObjectLockConfigurationRule {
	return &NullablePutObjectLockConfigurationRequestObjectLockConfigurationRule{value: val, isSet: true}
}

func (v NullablePutObjectLockConfigurationRequestObjectLockConfigurationRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePutObjectLockConfigurationRequestObjectLockConfigurationRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
