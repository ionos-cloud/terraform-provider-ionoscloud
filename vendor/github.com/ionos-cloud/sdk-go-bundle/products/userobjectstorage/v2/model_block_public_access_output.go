/*
 * IONOS Object Storage API for user-owned buckets
 *
 * ## Overview The IONOS Object Storage API for user-owned buckets is a REST-based API that allows developers and applications to interact directly with IONOS' scalable storage solution, leveraging the S3 protocol for object storage operations. Its design ensures seamless compatibility with existing tools and libraries tailored for S3 systems.  ### API References - [Object Storage Management API Reference](https://api.ionos.com/docs/s3-management/v1/) for managing Access Keys - [Object Storage API Reference for contract-owned buckets](https://api.ionos.com/docs/s3-contract-owned-buckets/v2/) - Object Storage API Reference for user-owned buckets - current document  ### User documentation [IONOS Object Storage User Guide](https://docs.ionos.com/cloud/storage-and-backup/ionos-object-storage) * [Documentation on user-owned and contract-owned buckets](https://docs.ionos.com/cloud/managed-services/s3-object-storage/concepts/buckets) * [Documentation on S3 API Compatibility](https://docs.ionos.com/cloud/managed-services/s3-object-storage/concepts/s3-api-compatibility) * [S3 Tools](https://docs.ionos.com/cloud/managed-services/s3-object-storage/s3-tools)  ## Endpoints for user-owned buckets | Location | Region Name | Bucket Type | Endpoint | | --- | --- | --- | --- | | **Frankfurt, Germany** | **de** | User-owned | `https://s3.eu-central-1.ionoscloud.com`, <br/><br/>**s3 legacy endpoint:** `https://s3-de-central.profitbricks.com`  | | **Berlin, Germany** | **eu-central-2** | User-owned | `https://s3.eu-central-2.ionoscloud.com` | | **Logro√±o, Spain** | **eu-south-2** | User-owned | `https://s3.eu-south-2.ionoscloud.com` |  ## Changelog - **30.05.2024** Renaming to Storage Object API for user-owned buckets - **25.09.2023** Storage object operation names are now used for headlines. - **20.09.2023** Improved description for [HeadBucket](#tag/Basic-Operations/operation/HeadBucket) and [GetBucketLocation](#tag/Location/operation/GetBucketLocation). - **13.09.2023** Improved description for [Bucket Policy-related operations](#tag/Policy/operation/PutBucketPolicy). - **06.09.2023** Improved description for [Bucket ACL-related operations](#tag/ACL/operation/GetBucketAcl). - **30.08.2023** Improved description for [Object Lock-related operations](#tag/Object-Lock/operation/GetObjectLockConfiguration). - **24.07.2023** Improved description for [ListObjectsV2](#tag/Basic-Operations/operation/ListObjectsV2). - **17.07.2023** Improved description for [ListBuckets](#tag/Basic-Operations/operation/ListBuckets). - **07.07.2023** Improved description for [PutBucketReplication](#tag/Replication/operation/PutBucketReplication),   [GetBucketReplication](#tag/Replication/operation/GetBucketReplication), [DeleteBucketReplication](#tag/Replication/operation/DeleteBucketReplication). - **05.07.2023** Improved description for [PutBucketVersioning](#tag/Versioning/operation/PutBucketVersioning)   and [GetBucketVersioning](#tag/Versioning/operation/GetBucketVersioning). - **29.06.2023** Improved description for [PutBucketLifecycleConfiguration](#tag/Lifecycle/operation/PutBucketLifecycle). - **19.04.2023** Improved description on how to use the encryption with IONOS Object Storage managed (SSE-S3) and customer managed keys (SSE-C)   for [PutBucketEncryption](#tag/Encryption/operation/PutBucketEncryption) and [PutObject](#tag/Basic-Operations/operation/PutObject).
 *
 * API version: 2.0.15
 * Contact: support@cloud.ionos.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package userobjectstorage

import (
	"encoding/json"
)

import "encoding/xml"

// checks if the BlockPublicAccessOutput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BlockPublicAccessOutput{}

// BlockPublicAccessOutput struct for BlockPublicAccessOutput
type BlockPublicAccessOutput struct {
	XMLName xml.Name `xml:"BlockPublicAccessBlockConfiguration"`
	// Indicates that access to the bucket via Access Control Lists (ACLs) that grant public access is blocked. In other words, ACLs that allow public access are not permitted.
	BlockPublicAcls *bool `json:"BlockPublicAcls,omitempty" xml:"BlockPublicAcls"`
	// Instructs the system to ignore any ACLs that grant public access. Even if ACLs are set to allow public access, they will be disregarded.
	IgnorePublicAcls *bool `json:"IgnorePublicAcls,omitempty" xml:"IgnorePublicAcls"`
	// Blocks public access to the bucket via bucket policies. Bucket policies that grant public access will not be allowed.
	BlockPublicPolicy *bool `json:"BlockPublicPolicy,omitempty" xml:"BlockPublicPolicy"`
	// Restricts access to buckets that have public policies. Buckets with policies that grant public access will have their access restricted.
	RestrictPublicBuckets *bool `json:"RestrictPublicBuckets,omitempty" xml:"RestrictPublicBuckets"`
}

// NewBlockPublicAccessOutput instantiates a new BlockPublicAccessOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlockPublicAccessOutput() *BlockPublicAccessOutput {
	this := BlockPublicAccessOutput{}

	return &this
}

// NewBlockPublicAccessOutputWithDefaults instantiates a new BlockPublicAccessOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlockPublicAccessOutputWithDefaults() *BlockPublicAccessOutput {
	this := BlockPublicAccessOutput{}
	return &this
}

// GetBlockPublicAcls returns the BlockPublicAcls field value if set, zero value otherwise.
func (o *BlockPublicAccessOutput) GetBlockPublicAcls() bool {
	if o == nil || IsNil(o.BlockPublicAcls) {
		var ret bool
		return ret
	}
	return *o.BlockPublicAcls
}

// GetBlockPublicAclsOk returns a tuple with the BlockPublicAcls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockPublicAccessOutput) GetBlockPublicAclsOk() (*bool, bool) {
	if o == nil || IsNil(o.BlockPublicAcls) {
		return nil, false
	}
	return o.BlockPublicAcls, true
}

// HasBlockPublicAcls returns a boolean if a field has been set.
func (o *BlockPublicAccessOutput) HasBlockPublicAcls() bool {
	if o != nil && !IsNil(o.BlockPublicAcls) {
		return true
	}

	return false
}

// SetBlockPublicAcls gets a reference to the given bool and assigns it to the BlockPublicAcls field.
func (o *BlockPublicAccessOutput) SetBlockPublicAcls(v bool) {
	o.BlockPublicAcls = &v
}

// GetIgnorePublicAcls returns the IgnorePublicAcls field value if set, zero value otherwise.
func (o *BlockPublicAccessOutput) GetIgnorePublicAcls() bool {
	if o == nil || IsNil(o.IgnorePublicAcls) {
		var ret bool
		return ret
	}
	return *o.IgnorePublicAcls
}

// GetIgnorePublicAclsOk returns a tuple with the IgnorePublicAcls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockPublicAccessOutput) GetIgnorePublicAclsOk() (*bool, bool) {
	if o == nil || IsNil(o.IgnorePublicAcls) {
		return nil, false
	}
	return o.IgnorePublicAcls, true
}

// HasIgnorePublicAcls returns a boolean if a field has been set.
func (o *BlockPublicAccessOutput) HasIgnorePublicAcls() bool {
	if o != nil && !IsNil(o.IgnorePublicAcls) {
		return true
	}

	return false
}

// SetIgnorePublicAcls gets a reference to the given bool and assigns it to the IgnorePublicAcls field.
func (o *BlockPublicAccessOutput) SetIgnorePublicAcls(v bool) {
	o.IgnorePublicAcls = &v
}

// GetBlockPublicPolicy returns the BlockPublicPolicy field value if set, zero value otherwise.
func (o *BlockPublicAccessOutput) GetBlockPublicPolicy() bool {
	if o == nil || IsNil(o.BlockPublicPolicy) {
		var ret bool
		return ret
	}
	return *o.BlockPublicPolicy
}

// GetBlockPublicPolicyOk returns a tuple with the BlockPublicPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockPublicAccessOutput) GetBlockPublicPolicyOk() (*bool, bool) {
	if o == nil || IsNil(o.BlockPublicPolicy) {
		return nil, false
	}
	return o.BlockPublicPolicy, true
}

// HasBlockPublicPolicy returns a boolean if a field has been set.
func (o *BlockPublicAccessOutput) HasBlockPublicPolicy() bool {
	if o != nil && !IsNil(o.BlockPublicPolicy) {
		return true
	}

	return false
}

// SetBlockPublicPolicy gets a reference to the given bool and assigns it to the BlockPublicPolicy field.
func (o *BlockPublicAccessOutput) SetBlockPublicPolicy(v bool) {
	o.BlockPublicPolicy = &v
}

// GetRestrictPublicBuckets returns the RestrictPublicBuckets field value if set, zero value otherwise.
func (o *BlockPublicAccessOutput) GetRestrictPublicBuckets() bool {
	if o == nil || IsNil(o.RestrictPublicBuckets) {
		var ret bool
		return ret
	}
	return *o.RestrictPublicBuckets
}

// GetRestrictPublicBucketsOk returns a tuple with the RestrictPublicBuckets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockPublicAccessOutput) GetRestrictPublicBucketsOk() (*bool, bool) {
	if o == nil || IsNil(o.RestrictPublicBuckets) {
		return nil, false
	}
	return o.RestrictPublicBuckets, true
}

// HasRestrictPublicBuckets returns a boolean if a field has been set.
func (o *BlockPublicAccessOutput) HasRestrictPublicBuckets() bool {
	if o != nil && !IsNil(o.RestrictPublicBuckets) {
		return true
	}

	return false
}

// SetRestrictPublicBuckets gets a reference to the given bool and assigns it to the RestrictPublicBuckets field.
func (o *BlockPublicAccessOutput) SetRestrictPublicBuckets(v bool) {
	o.RestrictPublicBuckets = &v
}

func (o BlockPublicAccessOutput) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BlockPublicAccessOutput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BlockPublicAcls) {
		toSerialize["BlockPublicAcls"] = o.BlockPublicAcls
	}
	if !IsNil(o.IgnorePublicAcls) {
		toSerialize["IgnorePublicAcls"] = o.IgnorePublicAcls
	}
	if !IsNil(o.BlockPublicPolicy) {
		toSerialize["BlockPublicPolicy"] = o.BlockPublicPolicy
	}
	if !IsNil(o.RestrictPublicBuckets) {
		toSerialize["RestrictPublicBuckets"] = o.RestrictPublicBuckets
	}
	return toSerialize, nil
}

type NullableBlockPublicAccessOutput struct {
	value *BlockPublicAccessOutput
	isSet bool
}

func (v NullableBlockPublicAccessOutput) Get() *BlockPublicAccessOutput {
	return v.value
}

func (v *NullableBlockPublicAccessOutput) Set(val *BlockPublicAccessOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableBlockPublicAccessOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableBlockPublicAccessOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlockPublicAccessOutput(val *BlockPublicAccessOutput) *NullableBlockPublicAccessOutput {
	return &NullableBlockPublicAccessOutput{value: val, isSet: true}
}

func (v NullableBlockPublicAccessOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlockPublicAccessOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
