/*
 * IONOS Cloud - DNS API
 *
 * Cloud DNS service helps IONOS Cloud customers to automate DNS Zone and Record management.
 *
 * API version: 1.16.0
 * Contact: support@cloud.ionos.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dns

import (
	"encoding/json"
)

// checks if the DnssecKeyReadCreation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DnssecKeyReadCreation{}

// DnssecKeyReadCreation struct for DnssecKeyReadCreation
type DnssecKeyReadCreation struct {
	Properties DnssecKeyParameters `json:"properties"`
	Id         string              `json:"id"`
	Type       string              `json:"type"`
	Href       string              `json:"href"`
}

// NewDnssecKeyReadCreation instantiates a new DnssecKeyReadCreation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDnssecKeyReadCreation(properties DnssecKeyParameters, id string, type_ string, href string) *DnssecKeyReadCreation {
	this := DnssecKeyReadCreation{}

	this.Properties = properties
	this.Id = id
	this.Type = type_
	this.Href = href

	return &this
}

// NewDnssecKeyReadCreationWithDefaults instantiates a new DnssecKeyReadCreation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDnssecKeyReadCreationWithDefaults() *DnssecKeyReadCreation {
	this := DnssecKeyReadCreation{}
	return &this
}

// GetProperties returns the Properties field value
func (o *DnssecKeyReadCreation) GetProperties() DnssecKeyParameters {
	if o == nil {
		var ret DnssecKeyParameters
		return ret
	}

	return o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value
// and a boolean to check if the value has been set.
func (o *DnssecKeyReadCreation) GetPropertiesOk() (*DnssecKeyParameters, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Properties, true
}

// SetProperties sets field value
func (o *DnssecKeyReadCreation) SetProperties(v DnssecKeyParameters) {
	o.Properties = v
}

// GetId returns the Id field value
func (o *DnssecKeyReadCreation) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *DnssecKeyReadCreation) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *DnssecKeyReadCreation) SetId(v string) {
	o.Id = v
}

// GetType returns the Type field value
func (o *DnssecKeyReadCreation) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *DnssecKeyReadCreation) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *DnssecKeyReadCreation) SetType(v string) {
	o.Type = v
}

// GetHref returns the Href field value
func (o *DnssecKeyReadCreation) GetHref() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Href
}

// GetHrefOk returns a tuple with the Href field value
// and a boolean to check if the value has been set.
func (o *DnssecKeyReadCreation) GetHrefOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Href, true
}

// SetHref sets field value
func (o *DnssecKeyReadCreation) SetHref(v string) {
	o.Href = v
}

func (o DnssecKeyReadCreation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["properties"] = o.Properties
	toSerialize["id"] = o.Id
	toSerialize["type"] = o.Type
	toSerialize["href"] = o.Href
	return toSerialize, nil
}

type NullableDnssecKeyReadCreation struct {
	value *DnssecKeyReadCreation
	isSet bool
}

func (v NullableDnssecKeyReadCreation) Get() *DnssecKeyReadCreation {
	return v.value
}

func (v *NullableDnssecKeyReadCreation) Set(val *DnssecKeyReadCreation) {
	v.value = val
	v.isSet = true
}

func (v NullableDnssecKeyReadCreation) IsSet() bool {
	return v.isSet
}

func (v *NullableDnssecKeyReadCreation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDnssecKeyReadCreation(val *DnssecKeyReadCreation) *NullableDnssecKeyReadCreation {
	return &NullableDnssecKeyReadCreation{value: val, isSet: true}
}

func (v NullableDnssecKeyReadCreation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDnssecKeyReadCreation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
