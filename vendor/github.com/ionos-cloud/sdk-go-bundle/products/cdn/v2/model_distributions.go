/*
 * IONOS Cloud - CDN Distribution API
 *
 * This API manages CDN distributions.
 *
 * API version: 1.2.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cdn

import (
	"encoding/json"
)

// checks if the Distributions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Distributions{}

// Distributions struct for Distributions
type Distributions struct {
	// ID of the list of Distribution resources.
	Id string `json:"id"`
	// The type of the resource.
	Type string `json:"type"`
	// The URL of the list of Distribution resources.
	Href string `json:"href"`
	// The list of Distribution resources.
	Items []Distribution `json:"items,omitempty"`
	// The offset specified in the request (if none was specified, the default offset is 0).
	Offset int32 `json:"offset"`
	// The limit specified in the request (if none was specified, use the endpoint's default pagination limit).
	Limit int32 `json:"limit"`
	Links Links `json:"_links"`
}

// NewDistributions instantiates a new Distributions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDistributions(id string, type_ string, href string, offset int32, limit int32, links Links) *Distributions {
	this := Distributions{}

	this.Id = id
	this.Type = type_
	this.Href = href
	this.Offset = offset
	this.Limit = limit
	this.Links = links

	return &this
}

// NewDistributionsWithDefaults instantiates a new Distributions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDistributionsWithDefaults() *Distributions {
	this := Distributions{}
	return &this
}

// GetId returns the Id field value
func (o *Distributions) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Distributions) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Distributions) SetId(v string) {
	o.Id = v
}

// GetType returns the Type field value
func (o *Distributions) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *Distributions) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *Distributions) SetType(v string) {
	o.Type = v
}

// GetHref returns the Href field value
func (o *Distributions) GetHref() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Href
}

// GetHrefOk returns a tuple with the Href field value
// and a boolean to check if the value has been set.
func (o *Distributions) GetHrefOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Href, true
}

// SetHref sets field value
func (o *Distributions) SetHref(v string) {
	o.Href = v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *Distributions) GetItems() []Distribution {
	if o == nil || IsNil(o.Items) {
		var ret []Distribution
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Distributions) GetItemsOk() ([]Distribution, bool) {
	if o == nil || IsNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *Distributions) HasItems() bool {
	if o != nil && !IsNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []Distribution and assigns it to the Items field.
func (o *Distributions) SetItems(v []Distribution) {
	o.Items = v
}

// GetOffset returns the Offset field value
func (o *Distributions) GetOffset() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value
// and a boolean to check if the value has been set.
func (o *Distributions) GetOffsetOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Offset, true
}

// SetOffset sets field value
func (o *Distributions) SetOffset(v int32) {
	o.Offset = v
}

// GetLimit returns the Limit field value
func (o *Distributions) GetLimit() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Limit
}

// GetLimitOk returns a tuple with the Limit field value
// and a boolean to check if the value has been set.
func (o *Distributions) GetLimitOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Limit, true
}

// SetLimit sets field value
func (o *Distributions) SetLimit(v int32) {
	o.Limit = v
}

// GetLinks returns the Links field value
func (o *Distributions) GetLinks() Links {
	if o == nil {
		var ret Links
		return ret
	}

	return o.Links
}

// GetLinksOk returns a tuple with the Links field value
// and a boolean to check if the value has been set.
func (o *Distributions) GetLinksOk() (*Links, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Links, true
}

// SetLinks sets field value
func (o *Distributions) SetLinks(v Links) {
	o.Links = v
}

func (o Distributions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["type"] = o.Type
	toSerialize["href"] = o.Href
	if !IsNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	toSerialize["offset"] = o.Offset
	toSerialize["limit"] = o.Limit
	toSerialize["_links"] = o.Links
	return toSerialize, nil
}

type NullableDistributions struct {
	value *Distributions
	isSet bool
}

func (v NullableDistributions) Get() *Distributions {
	return v.value
}

func (v *NullableDistributions) Set(val *Distributions) {
	v.value = val
	v.isSet = true
}

func (v NullableDistributions) IsSet() bool {
	return v.isSet
}

func (v *NullableDistributions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDistributions(val *Distributions) *NullableDistributions {
	return &NullableDistributions{value: val, isSet: true}
}

func (v NullableDistributions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDistributions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
