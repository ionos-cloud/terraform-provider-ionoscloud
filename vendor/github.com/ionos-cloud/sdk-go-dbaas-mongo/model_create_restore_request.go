/*
 * IONOS DBaaS MongoDB REST API
 *
 * With IONOS Cloud Database as a Service, you have the ability to quickly set up and manage a MongoDB database. You can also delete clusters, manage backups and users via the API.  MongoDB is an open source, cross-platform, document-oriented database program. Classified as a NoSQL database program, it uses JSON-like documents with optional schemas.  The MongoDB API allows you to create additional database clusters or modify existing ones. Both tools, the Data Center Designer (DCD) and the API use the same concepts consistently and are well suited for smooth and intuitive use.
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ionoscloud

import (
	"encoding/json"
	"time"
)

// CreateRestoreRequest The restore request.
type CreateRestoreRequest struct {
	// The unique ID of the snapshot you want to restore.
	SnapshotId *string `json:"snapshotId,omitempty"`
	// If this value is supplied as ISO 8601 timestamp, the backup will be replayed up until the given timestamp.
	RecoveryTargetTime *IonosTime `json:"recoveryTargetTime,omitempty"`
}

// NewCreateRestoreRequest instantiates a new CreateRestoreRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateRestoreRequest() *CreateRestoreRequest {
	this := CreateRestoreRequest{}

	return &this
}

// NewCreateRestoreRequestWithDefaults instantiates a new CreateRestoreRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateRestoreRequestWithDefaults() *CreateRestoreRequest {
	this := CreateRestoreRequest{}
	return &this
}

// GetSnapshotId returns the SnapshotId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CreateRestoreRequest) GetSnapshotId() *string {
	if o == nil {
		return nil
	}

	return o.SnapshotId

}

// GetSnapshotIdOk returns a tuple with the SnapshotId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateRestoreRequest) GetSnapshotIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}

	return o.SnapshotId, true
}

// SetSnapshotId sets field value
func (o *CreateRestoreRequest) SetSnapshotId(v string) {

	o.SnapshotId = &v

}

// HasSnapshotId returns a boolean if a field has been set.
func (o *CreateRestoreRequest) HasSnapshotId() bool {
	if o != nil && o.SnapshotId != nil {
		return true
	}

	return false
}

// GetRecoveryTargetTime returns the RecoveryTargetTime field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *CreateRestoreRequest) GetRecoveryTargetTime() *time.Time {
	if o == nil {
		return nil
	}

	if o.RecoveryTargetTime == nil {
		return nil
	}
	return &o.RecoveryTargetTime.Time

}

// GetRecoveryTargetTimeOk returns a tuple with the RecoveryTargetTime field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateRestoreRequest) GetRecoveryTargetTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}

	if o.RecoveryTargetTime == nil {
		return nil, false
	}
	return &o.RecoveryTargetTime.Time, true

}

// SetRecoveryTargetTime sets field value
func (o *CreateRestoreRequest) SetRecoveryTargetTime(v time.Time) {

	o.RecoveryTargetTime = &IonosTime{v}

}

// HasRecoveryTargetTime returns a boolean if a field has been set.
func (o *CreateRestoreRequest) HasRecoveryTargetTime() bool {
	if o != nil && o.RecoveryTargetTime != nil {
		return true
	}

	return false
}

func (o CreateRestoreRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SnapshotId != nil {
		toSerialize["snapshotId"] = o.SnapshotId
	}
	if o.RecoveryTargetTime != nil {
		toSerialize["recoveryTargetTime"] = o.RecoveryTargetTime
	}
	return json.Marshal(toSerialize)
}

type NullableCreateRestoreRequest struct {
	value *CreateRestoreRequest
	isSet bool
}

func (v NullableCreateRestoreRequest) Get() *CreateRestoreRequest {
	return v.value
}

func (v *NullableCreateRestoreRequest) Set(val *CreateRestoreRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateRestoreRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateRestoreRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateRestoreRequest(val *CreateRestoreRequest) *NullableCreateRestoreRequest {
	return &NullableCreateRestoreRequest{value: val, isSet: true}
}

func (v NullableCreateRestoreRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateRestoreRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
