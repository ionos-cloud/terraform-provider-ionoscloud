/*
 * IONOS DBaaS MongoDB REST API
 *
 * With IONOS Cloud Database as a Service, you have the ability to quickly set up and manage a MongoDB database. You can also delete clusters, manage backups and users via the API.  MongoDB is an open source, cross-platform, document-oriented database program. Classified as a NoSQL database program, it uses JSON-like documents with optional schemas.  The MongoDB API allows you to create additional database clusters or modify existing ones. Both tools, the Data Center Designer (DCD) and the API use the same concepts consistently and are well suited for smooth and intuitive use.
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ionoscloud

import (
	"encoding/json"
)

// PatchClusterProperties Properties of the payload to change a cluster.
type PatchClusterProperties struct {
	// The name of your cluster.
	DisplayName       *string            `json:"displayName,omitempty"`
	MaintenanceWindow *MaintenanceWindow `json:"maintenanceWindow,omitempty"`
	// The total number of instances in the cluster (one primary and n-1 secondaries).
	Instances   *int32        `json:"instances,omitempty"`
	Connections *[]Connection `json:"connections,omitempty"`
	// The unique ID of the template, which specifies the number of cores, storage size, and memory. You cannot downgrade to a smaller template or minor edition (e.g. from business to playground). To get a list of all templates to confirm the changes use the /templates endpoint.
	TemplateID *string `json:"templateID,omitempty"`
}

// NewPatchClusterProperties instantiates a new PatchClusterProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchClusterProperties() *PatchClusterProperties {
	this := PatchClusterProperties{}

	return &this
}

// NewPatchClusterPropertiesWithDefaults instantiates a new PatchClusterProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchClusterPropertiesWithDefaults() *PatchClusterProperties {
	this := PatchClusterProperties{}
	return &this
}

// GetDisplayName returns the DisplayName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PatchClusterProperties) GetDisplayName() *string {
	if o == nil {
		return nil
	}

	return o.DisplayName

}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchClusterProperties) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}

	return o.DisplayName, true
}

// SetDisplayName sets field value
func (o *PatchClusterProperties) SetDisplayName(v string) {

	o.DisplayName = &v

}

// HasDisplayName returns a boolean if a field has been set.
func (o *PatchClusterProperties) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// GetMaintenanceWindow returns the MaintenanceWindow field value
// If the value is explicit nil, the zero value for MaintenanceWindow will be returned
func (o *PatchClusterProperties) GetMaintenanceWindow() *MaintenanceWindow {
	if o == nil {
		return nil
	}

	return o.MaintenanceWindow

}

// GetMaintenanceWindowOk returns a tuple with the MaintenanceWindow field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchClusterProperties) GetMaintenanceWindowOk() (*MaintenanceWindow, bool) {
	if o == nil {
		return nil, false
	}

	return o.MaintenanceWindow, true
}

// SetMaintenanceWindow sets field value
func (o *PatchClusterProperties) SetMaintenanceWindow(v MaintenanceWindow) {

	o.MaintenanceWindow = &v

}

// HasMaintenanceWindow returns a boolean if a field has been set.
func (o *PatchClusterProperties) HasMaintenanceWindow() bool {
	if o != nil && o.MaintenanceWindow != nil {
		return true
	}

	return false
}

// GetInstances returns the Instances field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *PatchClusterProperties) GetInstances() *int32 {
	if o == nil {
		return nil
	}

	return o.Instances

}

// GetInstancesOk returns a tuple with the Instances field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchClusterProperties) GetInstancesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}

	return o.Instances, true
}

// SetInstances sets field value
func (o *PatchClusterProperties) SetInstances(v int32) {

	o.Instances = &v

}

// HasInstances returns a boolean if a field has been set.
func (o *PatchClusterProperties) HasInstances() bool {
	if o != nil && o.Instances != nil {
		return true
	}

	return false
}

// GetConnections returns the Connections field value
// If the value is explicit nil, the zero value for []Connection will be returned
func (o *PatchClusterProperties) GetConnections() *[]Connection {
	if o == nil {
		return nil
	}

	return o.Connections

}

// GetConnectionsOk returns a tuple with the Connections field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchClusterProperties) GetConnectionsOk() (*[]Connection, bool) {
	if o == nil {
		return nil, false
	}

	return o.Connections, true
}

// SetConnections sets field value
func (o *PatchClusterProperties) SetConnections(v []Connection) {

	o.Connections = &v

}

// HasConnections returns a boolean if a field has been set.
func (o *PatchClusterProperties) HasConnections() bool {
	if o != nil && o.Connections != nil {
		return true
	}

	return false
}

// GetTemplateID returns the TemplateID field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PatchClusterProperties) GetTemplateID() *string {
	if o == nil {
		return nil
	}

	return o.TemplateID

}

// GetTemplateIDOk returns a tuple with the TemplateID field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchClusterProperties) GetTemplateIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}

	return o.TemplateID, true
}

// SetTemplateID sets field value
func (o *PatchClusterProperties) SetTemplateID(v string) {

	o.TemplateID = &v

}

// HasTemplateID returns a boolean if a field has been set.
func (o *PatchClusterProperties) HasTemplateID() bool {
	if o != nil && o.TemplateID != nil {
		return true
	}

	return false
}

func (o PatchClusterProperties) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DisplayName != nil {
		toSerialize["displayName"] = o.DisplayName
	}

	if o.MaintenanceWindow != nil {
		toSerialize["maintenanceWindow"] = o.MaintenanceWindow
	}

	if o.Instances != nil {
		toSerialize["instances"] = o.Instances
	}

	if o.Connections != nil {
		toSerialize["connections"] = o.Connections
	}

	if o.TemplateID != nil {
		toSerialize["templateID"] = o.TemplateID
	}

	return json.Marshal(toSerialize)
}

type NullablePatchClusterProperties struct {
	value *PatchClusterProperties
	isSet bool
}

func (v NullablePatchClusterProperties) Get() *PatchClusterProperties {
	return v.value
}

func (v *NullablePatchClusterProperties) Set(val *PatchClusterProperties) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchClusterProperties) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchClusterProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchClusterProperties(val *PatchClusterProperties) *NullablePatchClusterProperties {
	return &NullablePatchClusterProperties{value: val, isSet: true}
}

func (v NullablePatchClusterProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchClusterProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
