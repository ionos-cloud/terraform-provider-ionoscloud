/*
 * IONOS DBaaS REST API
 *
 * An enterprise-grade Database is provided as a Service (DBaaS) solution that can be managed through a browser-based \"Data Center Designer\" (DCD) tool or via an easy to use API.  The API allows you to create additional database clusters or modify existing ones. It is designed to allow users to leverage the same power and flexibility found within the DCD visual tool. Both tools are consistent with their concepts and lend well to making the experience smooth and intuitive.
 *
 * API version: 0.1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ionoscloud

import (
	"encoding/json"
	"time"
)

// CreateRestoreRequest The restore request.
type CreateRestoreRequest struct {
	// The unique ID of the backup you want to restore.
	BackupId *string `json:"backupId"`
	// If this value is supplied as ISO 8601 timestamp, the backup will be replayed up until the given timestamp. If empty, the backup will be applied completely.
	RecoveryTargetTime *IonosTime `json:"recoveryTargetTime,omitempty"`
}

// NewCreateRestoreRequest instantiates a new CreateRestoreRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateRestoreRequest(backupId string) *CreateRestoreRequest {
	this := CreateRestoreRequest{}

	this.BackupId = &backupId

	return &this
}

// NewCreateRestoreRequestWithDefaults instantiates a new CreateRestoreRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateRestoreRequestWithDefaults() *CreateRestoreRequest {
	this := CreateRestoreRequest{}
	return &this
}

// GetBackupId returns the BackupId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CreateRestoreRequest) GetBackupId() *string {
	if o == nil {
		return nil
	}

	return o.BackupId

}

// GetBackupIdOk returns a tuple with the BackupId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateRestoreRequest) GetBackupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}

	return o.BackupId, true
}

// SetBackupId sets field value
func (o *CreateRestoreRequest) SetBackupId(v string) {

	o.BackupId = &v

}

// HasBackupId returns a boolean if a field has been set.
func (o *CreateRestoreRequest) HasBackupId() bool {
	if o != nil && o.BackupId != nil {
		return true
	}

	return false
}

// GetRecoveryTargetTime returns the RecoveryTargetTime field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *CreateRestoreRequest) GetRecoveryTargetTime() *time.Time {
	if o == nil {
		return nil
	}

	if o.RecoveryTargetTime == nil {
		return nil
	}
	return &o.RecoveryTargetTime.Time

}

// GetRecoveryTargetTimeOk returns a tuple with the RecoveryTargetTime field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateRestoreRequest) GetRecoveryTargetTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}

	if o.RecoveryTargetTime == nil {
		return nil, false
	}
	return &o.RecoveryTargetTime.Time, true

}

// SetRecoveryTargetTime sets field value
func (o *CreateRestoreRequest) SetRecoveryTargetTime(v time.Time) {

	o.RecoveryTargetTime = &IonosTime{v}

}

// HasRecoveryTargetTime returns a boolean if a field has been set.
func (o *CreateRestoreRequest) HasRecoveryTargetTime() bool {
	if o != nil && o.RecoveryTargetTime != nil {
		return true
	}

	return false
}

func (o CreateRestoreRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BackupId != nil {
		toSerialize["backupId"] = o.BackupId
	}

	if o.RecoveryTargetTime != nil {
		toSerialize["recoveryTargetTime"] = o.RecoveryTargetTime
	}

	return json.Marshal(toSerialize)
}

type NullableCreateRestoreRequest struct {
	value *CreateRestoreRequest
	isSet bool
}

func (v NullableCreateRestoreRequest) Get() *CreateRestoreRequest {
	return v.value
}

func (v *NullableCreateRestoreRequest) Set(val *CreateRestoreRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateRestoreRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateRestoreRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateRestoreRequest(val *CreateRestoreRequest) *NullableCreateRestoreRequest {
	return &NullableCreateRestoreRequest{value: val, isSet: true}
}

func (v NullableCreateRestoreRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateRestoreRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
